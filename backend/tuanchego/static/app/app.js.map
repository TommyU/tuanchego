{"version":3,"sources":["node_modules/.6.0.2@browser-pack/_prelude.js","frontend/app/activities/module.js","frontend/app/brand/module.js","frontend/app/home/module.js","frontend/app/utils/module.js","frontend/app/base/controllers/module.js","frontend/app/base/directives/module.js","frontend/app/base/filters/module.js","frontend/app/base/services/module.js","frontend/app/brand/directives/module.js","frontend/app/brand/services/module.js","frontend/app/home/directives/module.js","frontend/app/home/services/module.js","frontend/app/users/filters/module.js","frontend/app/users/services/module.js","frontend/app/utils/directives/module.js","frontend/app/base/app.js","node_modules/.0.19.4@ui-select/dist/select.js","node_modules/.0.19.4@ui-select/index.js","node_modules/.0.5.0@angular-xeditable/dist/js/xeditable.js","node_modules/.1.0.3@sprintf-js/src/sprintf.js","node_modules/.2.2.0@angular-ui-bootstrap/dist/ui-bootstrap-tpls.js","node_modules/.2.2.0@angular-ui-bootstrap/index.js","node_modules/.2.5.1@angular-elastic/elastic.js","node_modules/.3.7.0@raven-js/src/configError.js","node_modules/.3.7.0@raven-js/src/console.js","node_modules/.3.7.0@raven-js/src/raven.js","node_modules/.3.7.0@raven-js/src/singleton.js","node_modules/.3.7.0@raven-js/src/utils.js","node_modules/.3.7.0@raven-js/vendor/TraceKit/tracekit.js","node_modules/.4.1.9@sweetalert2/dist/sweetalert2.js","node_modules/.5.0.1@json-stringify-safe/stringify.js","frontend/app/base/controllers/base.js","frontend/app/base/controllers/footer.js","frontend/app/base/controllers/header.js","frontend/app/base/controllers/sidebar.js","frontend/app/base/directives/activate_select.js","frontend/app/base/directives/autofocus_if.js","frontend/app/base/directives/caller_info.js","frontend/app/base/directives/checkbox.js","frontend/app/base/directives/date_formatter.js","frontend/app/base/directives/delete_confirmation.js","frontend/app/base/directives/editable_checkbox.js","frontend/app/base/directives/editable_handler.js","frontend/app/base/directives/editable_link.js","frontend/app/base/directives/editable_related.js","frontend/app/base/directives/editable_select.js","frontend/app/base/directives/editable_tags.js","frontend/app/base/directives/editable_text.js","frontend/app/base/directives/editable_textarea.js","frontend/app/base/directives/hl_pagination.js","frontend/app/base/directives/hl_scroll_indicator.js","frontend/app/base/directives/input_auto_size.js","frontend/app/base/directives/list_filter.js","frontend/app/base/directives/list_widget.js","frontend/app/base/directives/mark_assigned_button.js","frontend/app/base/directives/on_enter_key.js","frontend/app/base/directives/on_mod_enter_key.js","frontend/app/base/directives/resize_iframe.js","frontend/app/base/directives/save_and_archive.js","frontend/app/base/directives/sort_column.js","frontend/app/base/directives/spinnerbar.js","frontend/app/base/directives/widget.js","frontend/app/base/errors/404.js","frontend/app/base/errors/500.js","frontend/app/base/filters/currency_symbol.js","frontend/app/base/filters/filter_items.js","frontend/app/base/filters/hl_truncate.js","frontend/app/base/filters/join.js","frontend/app/base/filters/min_value.js","frontend/app/base/filters/parse_urls.js","node_modules/.1.1.1@autolinker/dist/Autolinker.js","frontend/app/base/filters/primary_email.js","frontend/app/base/filters/strip_url_scheme.js","frontend/app/base/filters/trust_as_resource_url.js","frontend/app/base/services/app_hash.js","frontend/app/base/services/country.js","frontend/app/base/services/hl_cache.js","frontend/app/base/services/hl_fields.js","frontend/app/base/services/hl_filters.js","frontend/app/base/services/hl_forms.js","frontend/app/base/services/hl_gravatar.js","frontend/app/base/services/hl_messages.js","frontend/app/base/services/hl_notifications.js","frontend/app/base/services/hl_resource.js","frontend/app/base/services/hl_search.js","frontend/app/base/services/hl_shortcuts.js","frontend/app/base/services/hl_sockets.js","frontend/app/base/services/hl_utils.js","frontend/app/base/services/localstorage.js","frontend/app/base/services/settings.js","frontend/app/brand/controllers/index.js","frontend/app/brand/services/case.js","frontend/app/home/controllers/home.js","frontend/app/home/services/case.js","frontend/app/users/filters/filters.js","frontend/app/users/services/user.js","frontend/app/users/services/userteams.js","frontend/app/utils/directives/assignto.js","frontend/app/utils/directives/collapsable.js","frontend/app/utils/directives/collapsable_button.js","frontend/app/utils/directives/collapsable_content.js","frontend/app/utils/directives/date.js","frontend/app/utils/directives/due_date_filter.js","frontend/app/utils/directives/history_add_note.js","frontend/app/utils/directives/historylist.js","frontend/app/utils/directives/historylist_item.js","frontend/app/utils/directives/password_confirmation.js","frontend/app/utils/directives/password_strength.js","frontend/app/utils/directives/postpone.js","frontend/app/cars/module.js","frontend/app/cars/directives/module.js","frontend/app/cars/services/module.js","frontend/app/cars/controllers/index.js","frontend/app/cars/services/case.js","frontend/app/sell_car/module.js","frontend/app/sell_car/directives/module.js","frontend/app/sell_car/services/module.js","frontend/app/sell_car/controllers/index.js","frontend/app/sell_car/services/case.js"],"names":[],"mappings":";;AAAA;;;;;;;;;;;;;ACAA;AAEA;AACA,AACA,mBAHA;;AAIA;AACA,wBACA,AACA;;AACA;AACA,AACA;;;;ADXA;;;;;;;;;;;;;AEAA;AAEA;AACA,AACA,mBAHA;;AAIA;AACA,wBACA,AACA;;AACA;AACA,AACA;;;;AFXA;;;;;;;;;;;;;AGAA;AAEA;AACA,AACA,mBAHA;;AAIA;AACA,wBACA,AACA;;AACA;AACA,AACA;;;;AHXA;;;;;;;;;;;;;AIAA,gCACA;;;;AJDA;;;;;;;;;;;;;AKAA,mCACA,CACA,AACA;;;;ALHA;;;;;;;;;;;;;AMAA,AACA,AACA;;;AACA,qCACA;;;;ANJA;;;;;;;;;;;;;AOAA,kCACA;;;;APDA;;;;;;;;;;;;;AQAA,mCACA;;;;ARDA;;;;;;;;;;;;;ASAA,2CACA;;;;ATDA;;;;;;;;;;;;;AUAA,0CACA;;;;AVDA;;;;;;;;;;;;;AWAA,0CACA;;;;AXDA;;;;;;;;;;;;;AYAA,yCACA;;;;AZDA;;;;;;;;;;;;;AaAA,wCACA;;;;AbDA;;;;;;;;;;;;;AcAA,0CACA;;;;AdDA;;;;;;;;;;;;;AeAA,2CACA;;;;;;AfDA;;;;;;;;;;;;;AgBAA;AACA,wBACA;;AACA,2CACA;;AACA;AACA;AACA;AACA;AACA,YACA;;AACA,AACA,AACA;;;AACA,2BAEA,kBACA,aACA,gBACA,aACA,cACA,cACA,0BACA,aACA;AACA;AACA,AACA;;AACA;AACA,cAdA,EAeA,iBACA,YACA,aACA,YACA,AACA;;AACA;AACA,sBACA,AACA;;AACA;AACA,AACA;;AACA;AACA,AACA;;AACA,iCACA;;AACA,wBACA,CACA,uBACA,uBACA,iBACA,qBACA;AACA,uHACA;AACA;;qBAEA;yBACA,AACA;AAHA;0BAIA;8CACA;8CACA;wDACA;mCACA,AACA;;;4BAEA;2BACA;wBACA,AACA;AAJA;AAKA;;AACA;AACA,gFACA;kCACA;0BACA;AACA;qBACA;eACA;AACA;iCACA;AACA;AACA;AACA;;AACA;AACA,8BACA;;AACA;AACA;iCACA,CACA;+BACA;4BACA;wBACA,AACA;;AACA;AACA,AACA,AACA,AACA;;;;AACA;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;8BACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;AACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA;;ACnIA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AAEA;;AACA;aAEA;eACA;aACA;eACA;cACA;YACA;eACA;cACA;eACA;cACA;aACA;iBACA;mBACA;cACA;aACA;mBACA;gBACA;iBACA,AACA;;6jCACA,AACA,AACA;;;yCACA;oBACA;kBACA;qBACA;qBACA;qBACA;qBACA;qBACA,AACA,AACA;;;yDACA,AACA;;iBACA;AACA;iDACA;kCACA;kCACA;AACA;2DACA;6CACA;AACA;+DACA;2EACA;AACA;6CACA;2DACA;0BACA;AACA;AACA;sCACA;AACA,AACA;AAtDA;;AAuDA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;AACA,oEACA;yEACA;0DACA;AACA;AACA;;AACA,AACA,AACA;;;AACA,2DACA;gEACA;0BACA;8GACA,AACA;;uBACA;sDACA;qBACA;mBACA;0BACA;AACA;AACA;iBACA;AACA;AACA;;AACA,qBACA;;AACA,4CACA,AACA;eAEA;uBACA;kBACA;yBACA;4BACA;uBACA;sBACA;0BACA;wBACA;0BACA;0CACA;iBACA;AACA;sBACA,AACA;AAfA;;AAgBA,AACA;6CACA;sCACA;2BACA;yCACA;8FACA;2BACA;AACA;AACA;;AACA,AACA;oDACA;;uEAEA;+CACA;6BACA;AACA;AACA,AACA;AANA;AAOA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;uCACA;6CACA;wEACA;AACA,AACA;;2CACA;uJACA;AACA;AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;eACA,2BACA,yCACA,AACA;;kCACA;8CACA;;4DAEA;8DACA;+FACA;iGACA,AACA;AALA;AAMA;AACA;;AACA,oBACA,uFACA,sFACA,AACA;;;oBAEA;mBACA;mBACA;sBACA;sDACA;AACA;8BACA,AACA;;AACA;0EACA;2BACA;AACA,AACA;;sDACA,AACA;;+DACA,AACA;;AACA;oCACA;wCACA,AACA;;4BACA;qDACA;iIACA;oDACA;AACA,AACA;;yDACA,AACA;;oDACA;sCACA;uGACA;AACA,AACA;;oEACA,4CACA,AACA,AACA;;;sDACA;wCACA;+GACA;AACA;yDACA,AACA;;AACA;4EACA;qFACA,AACA;;iEACA,AACA,AACA;;iFACA,AACA;;sDACA;kDACA,AACA;;wGACA,AACA;;gDACA;wBACA;AACA,AACA;;iEACA;2FACA;yEACA;oGACA;wCACA;uBACA;kCACA;AACA;AACA,AACA;;yDACA;AACA;qDACA;kGACA;AACA;AACA;AACA,AACA;AAhFA;AAiFA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,qBACA,6JACA;;mBAGA,AACA;;2BACA,AACA;;0CACA;4CACA;uCACA;2CACA;oCACA;+CACA,AACA;;6DACA;mCACA;mCACA;sBACA,AACA;;8BACA;wBAlBA,AACA,CAkBA,AACA;;oBACA;qBACA;wBACA;wBACA,AACA;;gCACA,AACA;;mCACA;mCACA;kDACA;kDACA;2DACA;+CACA;oCACA;uBACA;wBACA,AACA;;AACA;oCACA;cACA;iCACA;wBACA;AACA;mBACA;AACA;AACA,AACA;;qDACA;2CACA;mHACA;AACA,AACA;;mCACA;mJACA;AACA,AACA;;4DACA;oCACA;mDACA;iBACA;8BACA;yCACA;gBACA,AACA;;6CACA;2BACA;2DACA;uBACA;AACA;AACA;oBACA;AACA;AACA,AACA;;AACA;qCACA;qCACA;0BACA;AACA;sEACA;wEACA;4CACA;sBACA;AACA;AACA;AACA,AACA;;mDACA;;;uBACA;kDACA;gDACA;qDACA;mCACA;AACA;AACA;AACA;iBACA;AACA,AACA;;AACA;+DACA;4CACA;6BACA,AACA;;8BACA,AACA;;wBACA,AACA;;gFACA,AACA;;AACA;AACA;wEACA;iCACA;AACA,AACA;;sDACA;wDACA;0FACA;wEACA;kEACA;AACA;mEACA;uCACA;0CACA;AACA;8CACA;AACA;2DACA;uCACA;0CACA;AACA;AACA;AACA,AACA;;yCACA;wDACA;qBACA;gEACA;AACA;mBACA;mCACA;sCACA;wEACA;AACA;AACA;AACA;AACA;AACA,uDACA;AACA;iBACA;AACA;AACA,AACA;;2DACA;gDACA;8BACA;AACA,AACA;;+CACA;oEACA;kCACA;aACA;AACA,AACA;;iFACA;uCACA;uCACA;0BACA;mDACA;iFACA;+CACA;yBACA;iCACA;AACA,qBACA;4DACA;AACA;AACA;gCACA;+CACA;qDACA;iDACA;yDACA;yDACA;AACA;AACA;yBACA;iDACA;mDACA;AACA;AACA,AACA;;wCACA;yBACA;AACA,AACA;;wDACA,AACA;;iDACA,AACA;;6BACA;gDACA,AACA;;AACA,AACA;;iDACA,AACA;;AACA;uEACA;yCACA;sEACA;2BACA;kDACA;qCACA;qBACA;AACA;AACA,AACA;;;AACA;AACA;+EACA;oEACA;qCACA;eACA;AACA,AACA;;8CACA;oDACA;qCACA;AACA;qIACA;8BACA;mBACA;uDACA;6DACA;sGACA;8CACA;0CACA;AACA;gCACA;AACA;AACA;oFACA;qBACA;AACA,AACA;;8BACA;AACA,AACA;;AACA;6EACA;uDACA;AACA;AACA;AACA;2BACA;mBACA;2CACA;kFACA;qBACA;AACA;AACA;kCACA,AACA;;AACA;;kDACA,CACA;AACA;AACA;AACA;AACA,AACA;AACA,AACA;;YACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;8CACA;yCACA,AACA;;AACA;AACA;AACA;sCACA;8BACA;AACA;wDACA;2BACA;oBACA;AACA;AACA,AACA;;6CACA;0BACA;mBACA;AACA;4DACA;2CACA,AACA;;0CACA;mBACA;AACA,AACA;;0EACA;iCACA;AACA,AACA;;iBACA;AACA,AACA;;6DACA;uDACA;;sBACA;AACA,AACA;;4BACA,AACA;;uDACA;wDACA;sDACA;+BACA;AACA,AACA;;qDACA;oDACA;AACA;AACA,AACA;;uCACA;gDACA;AACA,AACA;;+CACA,AACA;;0BACA,AACA;;oCACA;6CACA;2BACA,AACA;;oGACA,AACA;;mCACA,AACA;;+BACA;2CACA;AACA,AACA;;gFACA;kDACA;AACA,AACA;;sCACA;AACA,AACA;;iBACA;AACA,AACA,AACA;;AACA;4DACA;4DACA,AACA;;0EACA,AACA;;iDACA;AACA;0CACA;uDACA,kCACA,AACA;;mFACA;AACA;iDACA;4CACA;4CACA;mGACA;AACA;sEACA;AACA;AACA;yBACA;AACA;2CACA;AACA;uBACA;AACA;AACA;8CACA;AACA;AACA;4CACA,AACA;;AACA;AACA;oFACA;8CACA;iCACA;AACA;yDACA;AACA;iEACA;AACA;AACA;AACA;AACA;2CACA;6BACA;AACA;AACA;AACA;AACA;8CACA,AACA;;2BACA;mDACA,AACA;;mCACA;;yBAEA;gEACA,AACA;AAHA;AAIA,AACA;;sCACA;2BACA;AACA;AACA;AACA;AACA,AACA;;AACA;6CACA;0BACA;qEACA;sBACA;AACA;yCACA,AACA;AACA,AACA;;oCACA;8CACA;AACA,AACA;;uCACA;sBACA;iBACA;+BACA;6BACA;gBACA;AACA,AACA;;AACA;mCACA;yBACA;iBACA;cACA;cACA;iBACA;iBACA;AACA;AACA,AACA;;AACA;AACA;oCACA;iBACA;AACA,AACA;;kCACA;+FACA;WACA,AACA;;sDACA;4BACA,AACA;;4BACA,AACA;;qDACA;sDACA;oDACA;+BACA;AACA,AACA;;mDACA;kDACA;AACA;AACA,AACA;;uCACA;gDACA;AACA,AACA;;0DACA;2BACA;qCACA,AACA;;sBACA;6BACA;kDACA;wCACA;qBACA;yCACA;AACA;AACA,AACA;;mBACA;AACA;AACA,AACA,AACA;;wBACA;+BACA;2CACA,AACA;;uCACA;6DACA;2EACA;AACA;mDACA;AACA;yEACA;sCACA;qBACA;AACA;iEACA;8CACA;uDACA;mBACA;AACA,AACA;;wCACA;;AACA;mFACA;oDACA;uCACA;qCACA;kDACA;uCACA;oEACA;AACA;kCACA;AACA;AACA;AACA;yBACA;AACA;AACA;AACA,AACA;;+CACA;0BACA;kBACA;qBACA;2EACA;;;AACA;AACA;qBACA;2EACA;;;AACA;AACA;qBACA;yFACA;AACA;qBACA;;6EACA,CACA;qBACA;4CACA;AACA;AACA;qBACA;mBACA;AACA;AACA;0BACA,AACA;;iBACA;AACA,AACA;;AACA;oDACA,AACA;;sBACA,AACA;;kDACA;cACA;cACA;AACA,AACA;;AACA;AACA;AACA;AACA,AACA;;oCACA,AACA;;yBACA,AACA;;mEACA;yEACA;kBACA;kBACA;AACA;kDACA;2EACA;2EACA;AACA;gDACA;+BACA;AACA;AACA;AACA;4BACA;uCACA;oDACA;8EACA;0CACA;iDACA;AACA;sDACA;AACA;AACA;AACA;AACA,AACA;AACA,AACA;;oEACA;AACA;AACA,AACA;;oDACA;cACA;cACA;AACA,AACA;AACA,AACA;;kDACA;cACA,AACA;;;AACA;gDACA;iBACA;gEACA;AACA,AACA;;AACA;+BACA,AACA;;uCACA;AACA;gDACA;0BACA;;AACA;2GACA;;qCAEA;wBADA,CAEA;AACA;AACA;sCACA;yBACA;AACA;mCACA;qDACA;0EACA;6BACA;uCACA;AACA;AACA;yCACA;gBACA;gBACA;mCACA;yBACA;4BACA;gBACA;gBACA;AACA;AACA;AACA,AACA;;kDACA;+BACA;AACA;AACA;AACA,AACA;;AACA;2CACA;oDACA;mDACA;kCACA;+GACA;AACA,AACA;;oCACA;AACA;AACA,AACA;;yCACA;qFACA;oCACA,AACA;;6BACA;6CACA;sDACA;uDACA,+BACA,AACA;sEACA;AACA;AACA,AACA;;iDACA;eACA;WACA,AACA;;gDACA,AACA;;2CACA;+BACA;iDACA;AACA;AACA;;AACA,oBACA,iGACA,wGACA,AACA;;;oBAEA;8DACA;uDACA;+FACA;AACA;mBACA;sBACA;gCACA;iBACA,AACA;;sBACA;wBACA;sDACA,AACA;;AACA;sDACA;uBACA;gEACA;+BACA;wCACA;AACA,AACA;;AACA;yCACA,+DACA,AACA,iCACA,AACA;;uBACA,4EACA,AACA;;yEACA,AACA;;kCACA;kCACA,AACA;;mDACA;iDACA;0DACA;yDACA,AACA;;kDACA;4DACA;sCACA;uBACA;wCACA;AACA;AACA,AACA;;uDACA;qDACA;kGACA;AACA,AACA;;sDACA;sDACA,AACA;;AACA;gCACA,AACA;;uDACA;2DACA;AACA,AACA;;kCACA;4DACA;sDACA;qCACA;AACA;AACA,AACA;;;;mCACA;uFACA;AACA,AACA;;mDACA;iDACA;sFACA;AACA,AACA;;kDACA;AACA;6FACA;AACA,AACA;;yDACA;uDACA;wGACA;AACA,AACA;;qDACA;AACA;mFACA;AACA,AACA;;6DACA;AACA;yDACA;+FACA;AACA,AACA;;kDACA;kDACA;AACA,AACA;;oDACA;sCACA,WACA;AACA;sDACA;mGACA;AACA,AACA,uBACA;+DACA;AACA;AACA,AACA;;yDACA;sCACA,WACA;AACA;AACA;sDACA;2CACA;AACA,AACA,yBACA;mGACA;AACA;AACA;AACA,AACA;;0DACA;iDACA;0GACA;uEACA;AACA;AACA,AACA;;AACA;sDACA;qCACA;0BACA;AACA;AACA,AACA;;AACA;oDACA;qDACA;uCACA;4BACA;AACA;AACA;AACA,AACA;;0CACA;2CACA,AACA;;+BACA,AACA;;mCACA;AACA;AACA;kEACA;uBACA;mDACA;AACA,AACA;;gEACA;sBACA;6CACA;AACA;4EACA;6FACA;qFACA;kHACA;yBACA;mCACA;AACA;gCACA;wBACA;AACA;+CACA;AACA,AACA;;AACA;oCACA,AACA;;gDACA;uCACA;AACA,AACA;;AACA;mDACA;AACA,AACA;;AACA;AACA;AACA;kEACA,AACA;;oEACA;gEACA;qEACA;mDACA;qHACA;AACA;yEACA,AACA;;sEACA;oEACA;yEACA;qDACA;yHACA;AACA;2EACA,AACA;;uEACA;uEACA;4EACA;qDACA;+EACA;AACA;AACA,AACA;;AACA;mDACA;2FACA;+DACA;8BACA;AACA;yBACA;AACA;AACA;AACA,AACA;;AACA;AACA;kDACA;AACA;AACA;AACA,AACA;;AACA;gCACA;kCACA,AACA;;0CACA;AACA;uCACA,AACA;;AACA;8CACA;4DACA;8DACA;8BACA,AACA;;AACA;AACA;iDACA,AACA;;AACA;8CACA,AACA;;4CACA;sDACA;oDACA;wDACA;AACA,AACA;;uCACA;0CACA;AACA;AACA;AACA,AACA;;AACA;wCACA;8BACA,AACA;;4CACA;wCACA;uCACA;yCACA,AACA;;AACA;wBACA;AACA,AACA;;AACA;6BACA;yCACA,AACA;;AACA;uDACA,AACA;;8FACA;wBACA;AACA,AACA;AACA,AACA;;uFACA,AACA;;6CACA;6DACA,AACA;;6CACA;qEACA;iCACA,AACA;AACA,AACA;;2FACA,AACA;;oCACA,AACA;;6CACA;6DACA,AACA;;6CACA;wCACA,AACA;AACA,AACA;;qGACA;AACA;qCACA;yDACA;AACA;AACA;yBACA;AACA;wCACA,AACA;;2CACA;mDACA,AACA;;AACA;2GACA,AACA;;AACA;oIACA;AACA;+CACA;2BACA;AACA;iDACA;AACA;AACA,AACA;;AACA;8CACA;AACA;AACA,AACA;;2BACA,AACA;;uDACA;kCACA;uEACA,AACA;;6CACA;AACA;AACA,AACA;;AACA;wDACA;gDACA;6BACA;AACA,AACA;;oIACA;0CACA,AACA;;kFACA;gEACA;AACA;0CACA;AACA;AACA;yBACA;AACA;AACA;uBACA;kEACA;AACA;AACA,AACA;;AACA;8CACA;+CACA;0CACA;sCACA;AACA;AACA;AACA;AACA,AACA;AAhZA;AAiZA;;AACA,kFACA;;oBAEA;mBACA;mBACA;sBACA;sDACA;AACA;8BACA,AACA;;kCACA;AACA;wEACA;+DACA,AACA;;iEACA;AACA;8DACA;iDACA;iEACA;6FACA;AACA,AACA;;0CACA;qHACA;AACA,AACA;;yCACA;gCACA,AACA;;kCACA;sBACA;AACA,AACA;AACA,AACA,AACA;AAnCA;;+CAoCA;mCACA,6BACA,AACA;;6CACA,uCACA,AACA;;0CACA,oCACA;AACA;AACA;;AACA,2GACA;;oBAEA;iCACA,AACA;;yEACA,AACA;;uBACA;iCACA;gBACA,AACA;;4CACA,8BACA,AACA;;AACA;;;AACA,AACA;;qCACA,AACA;;2CACA;iDACA;mBACA;AACA,AACA;;gDACA;AACA;AACA;AACA;wCACA;wBACA;AACA;2CACA;wBACA;AACA;AACA,AACA;;AACA;iDACA,AACA;;AACA;wDACA,AACA;;mDACA,AACA;;2BACA;sDACA,AACA;;6CACA;uCACA;sBACA,AACA;;AACA;mCACA;;yBAEA;mEACA,AACA;AAHA;AAIA,AACA;;mBACA,AACA;;qBACA;AACA,AACA;;8CACA;AACA;+DACA;6BACA;AACA,AACA,AACA;AACA;wBACA,AACA;;4DACA,AACA;;gCACA;gDACA;wCACA,AACA;;AACA,AACA;;+BACA,AACA;;AACA;yCACA,AACA;;AACA;gDACA;gDACA;AACA,AACA;;AACA;iDACA;2BACA;kBACA;mCACA;qEACA;yBACA;yEACA;iEACA;uCACA;AACA;qBACA;AACA,AACA;;AACA;;;kBAEA;uBACA;kBACA;gCACA;mCACA;0EACA;2CACA;2DACA;+DACA;mEACA;uDACA;mFACA;yEACA;6IACA;oGACA;oDACA;+BACA;AACA;AACA;AACA;qDACA;gDACA;2BACA;AACA;AACA;uBACA;AACA;qDA3BA,CA4BA;+DACA;AACA;uEACA;AACA;6DACA;AACA;sDACA;AACA;AACA;AACA;qBACA;AACA,AACA;;AACA;;;6CACA;wCACA;AACA;;6CACA,CACA;AACA;gCACA;AACA;AACA,AACA;;;AAEA;wDACA;AACA;4FACA;uCACA;uBACA;6GACA;AACA;AACA;yCACA;8BACA;iCAXA,CAYA;AACA,AACA;;2DACA;4DACA;AACA;AACA;oCACA;8BACA;AACA,AACA;;kDACA;kDACA;AACA,AACA;;2EACA;AACA;iDACA;AACA,AACA;;2DACA;0BACA;uCACA;gCACA;AACA;mDACA;oDACA;AACA;iDACA;AACA;AACA;oBACA;oBACA;AACA;AACA;AACA;2CACA;iEACA;AACA;mCACA;AACA;AACA;gDACA;wEACA;4CACA;;AACA;sBACA;kCACA;yCACA;4DACA;4DACA;6BACA,AACA;;yFACA,AACA;;sBACA,AACA;;gDACA;wBACA;2BACA;AACA;kEACA;AACA;gCACA;AACA;2BACA;AACA;6EACA;8BACA;6BACA;AACA;AACA;gCACA;AACA;2BACA;AACA;2DACA;8DACA;+BACA;6BACA;+BACA;AACA,AACA;2BACA;AACA;6BACA;AACA;AACA;2BACA;AACA;2DACA;mEACA;6BACA;AACA,kCACA,AACA;;AACA,AACA;;yBACA,AACA;;sGACA,yEACA,AACA;;qBACA;AACA,AACA;;yDACA,AACA;;oDACA;6CACA;8EACA;AACA;AACA;AACA;4EACA,AACA;;AACA;+IACA;AACA;AACA;AACA;4EACA;AACA;oDACA,AACA;;iDACA;oDACA;oBACA;oBACA;6BACA;iCACA;oBACA;oBACA,AACA;;AACA;uDACA;yEACA;2CACA;uCACA;AACA;AACA;mDACA;6BACA;iDACA;0DACA;AACA;wDACA;AACA;AACA,wDACA;oDACA;AACA,kEACA;oDACA;AACA,sBACA;iDACA;4CACA;sCACA;AACA;AACA;AACA;+CACA;AACA;uBACA;AACA;8EACA;8CACA;AACA;2CACA;uCACA;AACA;+BACA;AACA;yEACA;6BACA;iDACA;0DACA;AACA;2DACA;8EACA;AACA;AACA;AACA;AACA;mFACA;AACA;AACA;gCACA;8BACA;mDACA;8CACA;wCACA;AACA;AACA;AACA;AACA;0DACA;AACA;gCACA;iEACA;AACA;AACA;AACA;AACA;0EACA;AACA;oCACA;oEACA;uBACA;0BACA;0CACA;uCACA;AACA;6CACA;wCACA;kCACA,AACA;;yCACA;AACA;qEACA;uCACA;iCACA;AACA;4CACA;oFACA;AACA;AACA;AACA;AACA;AACA;mDACA;qEACA;uBACA;AACA;2DACA;0FACA;yBACA;AACA;iEACA;0BACA,AACA;;qBACA;AACA;uDACA;+BACA;6CACA;2CACA;yDACA;AACA;yDACA;AACA;4EACA;kCACA;AACA;AACA;yBACA;0CACA;mDACA;sCACA;AACA;yDACA;kCACA;AACA;AACA;AACA;AACA;qBACA;AACA,AACA;;uDACA;mCACA;oDACA;AACA;AACA,AACA;AACA,AACA;AAhcA;AAicA;;AACA,oBACA,iEACA;;oBAEA;mBACA;mBACA;sBACA;sDACA;AACA;8BACA,AACA;;AACA;0EACA;2BACA;AACA,AACA;AAbA;AAcA;;AACA,6FACA;;oBAEA;iCACA;4DACA,AACA;;gCACA;gCACA,AACA;;AACA;2DACA;2BACA;kBACA;sDACA;+DACA;qBACA;AACA,AACA;;AACA;8DACA;;kBACA;uBACA;kBACA;wBACA;8DACA;0DACA;mEACA;oCACA;AACA;AACA;yEACA;iCACA;AACA;2DACA;0DACA;AACA;AACA;qBACA;AACA,AACA;;AACA;iEACA;mDACA;sCACA;AACA;AACA,AACA;;0CACA;yCACA;AACA,AACA;;2DACA;iCACA;AACA,AACA;;kEACA;mCACA;kDACA;uDACA;oBACA;AACA,AACA;;;8CACA,CACA;AACA,AACA;;AACA;2CACA;+BACA;+BACA,AACA;;AACA;iCACA,AACA;;oCACA;+CACA;2CACA;gCACA;AACA;AACA;8CACA;2CACA;gCACA;AACA;AACA;kDACA,AACA;;6CACA;kBACA;kBACA;+BACA;sBACA;AACA;AACA,AACA;;0GACA;AACA;AACA,AACA;;4GACA;kBACA;kBACA;wBACA;AACA,AACA;;oBACA;AACA,AACA;;;;+JAGA;AACA;AACA,AACA;;+CALA,AACA,CAKA;2BACA;oBACA,AACA;AACA,AACA,AACA;AACA,AACA;AAzHA;AA0HA;;AACA;AACA,yIACA;;kCAEA;4DACA;oDACA;2CACA;AACA,AACA;;gCACA;iCACA,AACA;;;oBAEA,AACA;AAFA,iCAGA,AACA;;+BACA;oCACA;oCACA;0CACA;yCACA,AACA;;qCACA;6BACA;mCACA;4BACA;0CACA;qBACA;mCACA;AACA;AACA,AACA;;qDACA;+BACA,AACA;;oGACA;AACA,AACA;;8CACA;0BACA;AACA,AACA;;+CACA;AACA;sDACA;AACA,AACA;;8DACA;gGACA;gDACA;AACA;AACA,AACA;;kEACA;oBACA,AACA;;kOACA,AACA;;2FACA;4BACA;iCACA,AACA;qBACA;4BACA;iCACA;AACA;AACA,AACA;;gBACA,AACA;;0DACA;oBACA,AACA;;wHACA,AACA;;AACA;8BACA;iDACA;6BACA;iBACA;AACA,AACA;;uEACA;8CACA;uCACA;6BACA,AACA;;6DACA;qDACA;4CACA;uBACA;mCACA;AACA;qBACA;qDACA;mCACA;uBACA;4CACA;AACA;AACA,AACA;;qDACA,AACA;;0CACA,AACA;;uCACA;;yBAEA;wBACA;wBACA;sBACA,AACA;AALA;AAMA,AACA;;0BACA;0BACA;0BACA,AACA;;kCACA;AACA,AACA;;gDACA;uDACA;AACA;AACA,AACA;;+BACA,AACA;;qCACA;iCACA;AACA,AACA;;qDACA;2CACA;AACA;AACA,AACA;;0BACA;0BACA;0BACA,AACA;;sCACA;kCACA;AACA;AACA,AACA;AAhJA;AAiJA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,oEACA;iDACA;cACA,AACA;;6BACA;uBACA;kDACA;gCACA;8BACA;AACA,AACA;;kDACA;mCACA;eACA;AACA;AACA;AACA;;AACA,uFACA;;oBAEA;mBACA;8DACA;uDACA,AACA;;0EACA;4CACA;qCACA;;4BAEA,AACA;AAFA;AAGA;AACA;AACA;AACA,AACA;AAhBA;AAiBA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AACA,oGACA;mBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;2CACA,AACA,AACA;;cACA;AACA;AACA,AACA;;AACA;AACA;mCACA,AACA;;AACA;AACA;AACA;AACA;AACA;AACA,AACA;;sBACA;yCACA,0FACA;AACA,AACA;;6BACA;wBACA,AACA;;AACA;AACA;AACA;wBACA;AACA;sDACA;AACA;6CACA;sDACA;oCACA;+CACA;AACA;AACA,AACA;;;4CAEA;+BACA;2BACA;qBACA;8BACA;8DACA;iEACA;oFACA;mCACA;kDACA;AACA;qBACA;AACA,AACA,AACA;AAfA;AAgBA,AACA;;sDACA;iBACA;AACA,AACA;AACA,AACA;QA3xEA;AA4xEA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;ACnzEA;AACA,qBACA;;ACFA,AACA,AACA,AACA,AACA;;;;;AACA,AACA,AACA,AACA;;;;AACA,gCACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;AACA,AACA;;AAEA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;aACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;gBACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;eACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;gBACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;gBACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;gBACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;kBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;uBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;yBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;6BACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;yBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;6BACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;wBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;4BACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;0BACA,AACA;AArIA;;AAsIA,AACA,AACA,AACA;;;;AACA,6DACA,gEACA;;uBAEA;kBACA;kCACA;AACA,AACA,AACA,AACA;;;;kCACA,AACA;;gDACA,AACA;;+FACA;qDACA;2DACA;kEACA;sEACA;+EACA;0EACA;sEACA;sEACA;8FACA;kGACA;2DACA;kDACA;2EACA;sEACA,AACA;;oCACA;yDACA;oCACA;AACA,AACA;;iCACA;qDACA;oCACA;AACA,AACA;;;gDAEA;oDACA;kDACA;4DACA;0DACA;8DACA;gGACA;oDACA;4CACA;4CACA;oEACA;0DACA;8DACA;8DACA,AACA,AACA;AAhBA;;wHAiBA,AACA;;AACA;6CACA;mDACA;gDACA,AACA;;yDACA,AACA;;iCACA,AACA;;gCACA;iBACA;AACA;wDACA;AACA,AACA;;qDACA,AACA;;+BACA,AACA;;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;kCACA;qCACA;AACA,AACA;AAvFA;;AAwFA,AACA,AACA,AACA;;;;AACA,6DACA,gEACA;;uBAEA;kBACA;kCACA;kCACA,AACA;;AACA;AACA;AACA;oCACA,AACA;;AACA;iDACA;kCACA,AACA;;AACA;oCACA;oDACA;oCACA;AACA,AACA;;AACA;4BACA;AACA,AACA;AAxBA;;AAyBA;AACA,+DACA,gEACA;;uBAEA;kBACA;kCACA;kCACA;iCACA;8BACA;wEACA;AACA;AACA;0CACA;qBACA;kDACA;mCACA;4CACA;iCACA;AACA;eACA;AACA;AACA,AACA;AApBA;AAqBA;;AACA;AACA,gEAEA,4BACA,wFACA;;uBAEA;kBACA;iBACA;kCACA;kCACA;0DACA;6BACA;0CACA,AACA;;oCACA;mEACA;AACA,AACA;;+CACA;sGACA;AACA,AACA;;8DACA,oHACA,iDACA,oDACA,AACA;;kCACA;kCACA;kCACA;kCACA;4BACA;AACA,AACA;AA7BA;AA8BA,KAlCA;;AAmCA,4FACA,4EACA;;uBAEA;kBACA;kCACA;kCACA,AACA;;;uCAEA,AACA;AAFA;qBAGA;0MACA,AACA;;2EACA;wCACA;yCACA;AACA;AACA,AACA;;sEACA;uEACA;8DACA;AACA;AACA,AACA;AAvBA;AAwBA,AACA;;AACA,AACA,AACA,AACA;;;;iBAEA,AACA;;8DACA;yFACA;sBACA;AACA;AACA,AACA;;4HACA,AACA;;AACA,AACA;;AACA;6CACA;yDACA;8DACA,gEACA;;2BAEA;+CACA;sCACA;sCACA,AACA;;AACA;6EACA;kCACA,AACA;;gDACA;yHACA;gDACA;AACA,AACA;;iDACA;2HACA;+CACA;AACA;AACA,AACA;;AACA;qCACA;4EACA;+EACA;yDACA;uBACA;gDACA;AACA;AACA,AACA;;AACA;yCACA;kDACA;AACA;AACA,AACA;AApCA;AAqCA;AACA,AACA;;AACA;0FACA,kEACA;;yBAEA;oBACA;oCACA;oCACA;8GACA;AACA,AACA;AAPA;AAQA,AACA;AACA,AACA,QAxEA;;AAyEA,AACA,AACA,AACA;;;;AACA,4FACA,oEACA;;uBAEA;kBACA;kCACA;kCACA;+EACA;kCACA;wCACA;AACA,AACA,AACA;AAVA;;wBAWA,AACA;;mDACA;qCACA,AACA;;oDACA,AACA;;uBACA,AACA;;yCACA;AACA,AACA;;aACA;;AACA;AACA,gEAEA,4BACA,2BACA,2FACA;;uBAEA;kBACA;kCACA;kCACA;0DACA;6BACA,AACA;;oCACA;kEACA;AACA,AACA;;mEACA,OACA,wDACA,uFACA,0EACA,qBACA,2DACA,AACA;;kCACA;kCACA;kCACA;4BACA;AACA;0CACA;qBACA;kDACA;mCACA;4CACA;iCACA;AACA;eACA;AACA;AACA,AACA;AAnCA;AAoCA,KAzCA;;AA0CA;AACA,6DACA,gEACA;;uBAEA;kBACA;kCACA;kCACA,AACA;;uCACA;8FACA;gCACA;AACA;AACA;0CACA;qBACA;kDACA;0CACA;+BACA;AACA;AACA;AACA,AACA;AAnBA;;AAoBA;AACA,+DACA,gEACA;;uBAEA;kBACA;8CACA;qBACA;wCACA;AACA;oDACA;iBACA;AACA;AACA;0CACA;qBACA;oDACA;8DACA;4CACA;iCACA;AACA;AACA;AACA;AACA,AACA;AArBA;AAsBA;;AACA,AACA,AACA,AACA;;;;AACA,2FACA,oEACA;;uBAEA;kBACA;kCACA;kCACA;iFACA;mFACA;kCACA;wCACA;AACA,AACA,AACA;AAXA;;wBAYA,AACA;;mDACA;8BACA;gCACA,AACA;;sCACA;0CACA,AACA;;gBACA;kBACA,AACA;;yCACA;AACA,AACA;;aACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,AACA,AACA;;;AACA,wCACA,6BACA,8CACA,AACA;;AACA;8JACA;8IACA;YACA,AACA;;AACA;YACA,AACA;;mBACA,AACA;;qBACA;oBACA;qBACA;uBACA;wBACA;sBACA;qBACA;qHACA;sBACA,AACA;;AACA;uJACA,AACA;;AACA;wBACA;6BACA,AACA;;AACA;AACA;AACA;uBACA,AACA;;AACA;sBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;uBACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA,AACA;;AACA;sCACA;wBACA,AACA;;kDACA;AACA,AACA,AACA,AACA,AACA;;;;;0CACA;6CACA;iBACA;0EACA;AACA,AACA;;AACA;4BACA;AACA;2BACA;iBACA;iEACA;AACA,AACA;;AACA;4BACA;yDACA;qDACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;6BACA;sCACA;2DACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;6BACA;sCACA;2CACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;+BACA;wCACA;6CACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;mCACA;4CACA;iEACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;kCACA;2CACA;gEACA;AACA;AACA,AACA;;AACA;AACA;AACA;AACA;sFACA;iBACA;iBACA;AACA;AACA,AACA;;kCACA;2BACA,AACA;;AACA;8CACA,AACA;;AACA;kDACA;sCACA,AACA;;AACA;qCACA;mDACA;kDACA;iDACA;kDACA;wDACA;6DACA;wDACA;6DACA;uDACA;4DACA,AACA;;+BACA;gEACA;gEACA;+DACA;AACA,AACA;;6DACA,AACA;;oDACA;yCACA;AACA,AACA;;wCACA,AACA;;kCACA;AACA,AACA;;AACA;+CACA;sCACA,AACA;;AACA;8EACA;oCACA,AACA;;AACA;sCACA;+BACA;AACA;AACA;+BACA;4CACA,AACA;;AACA;;4CACA,CACA;mBACA;AACA;AACA,AACA;;AACA;wEACA;AACA;AACA,AACA;;wDACA;yDACA,AACA;;AACA;8CACA,4DACA;gHACA;mBACA;0GACA;AACA,AACA;;AACA;AACA;iGACA,AACA;;AACA;4CACA;AACA,AACA;;gCACA;wCACA,AACA;;AACA;gEACA,AACA;;2BACA;gDACA;AACA;8GACA;AACA,AACA;;AACA;oDACA;kCACA;AACA,AACA;AACA,AACA;;AACA;AACA;AACA;yCACA;kCACA,0CACA,+BACA;AACA,AACA;;AACA;uBACA;AACA;gCACA;AACA;eACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;eACA,AACA;;AACA;8BACA,AACA;;AACA;4BACA;kCACA,AACA;;AACA;eACA,AACA;;AACA;4BACA,AACA;;AACA;sBACA;AACA,AACA;;AACA;gCACA,AACA;;AACA;mBACA,AACA;;0BACA;wBACA;+BACA,AACA;;AACA;sBACA;AACA,AACA;;AACA;kCACA;AACA;eACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;wCACA;AACA;kDACA;8BACA;AACA;AACA,AACA;;AACA;sBACA;AACA;mBACA;8CACA;mCACA;AACA;AACA,AACA;;AACA,AACA;;AACA;oDACA;iBACA;AACA,AACA;;AACA;mDACA;AACA;0CACA;AACA;AACA,AACA;;2CACA;0CACA;AACA;AACA;AACA,AACA;;AACA;2CACA;qBACA;AACA;2CACA,kCACA,qCACA;2BACA;4CACA;kCACA;+DACA;AACA;AACA;iBACA;2BACA;sCACA;kCACA;yDACA;AACA;AACA;AACA;AACA,AACA;;8CACA;iCACA;kCACA,AACA;;kEACA;yBACA;6BACA;yCACA;6BACA;yCACA;kDACA;AACA;AACA;AACA,AACA;;qFACA,4GACA;AACA;iDACA;qBACA;mBACA;AACA;8DACA;6BACA;mBACA;mCACA;mBACA;AACA;AACA;aACA;AACA,AACA;;uCACA;sCACA;4BACA;yBACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA;;;;uDACA;8DACA;4BACA;AACA;4CACA;iCACA;AACA,gDACA;iCACA;AACA,AACA;AACA;qEACA,iFACA;iCACA;AACA;4BACA;+CACA;0BACA;AACA;iBACA;AACA,AACA;;gCACA;oCACA,oEACA,AACA;;AACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;uCACA;uCACA;kHACA;iDACA;AACA,AACA;;AACA,AACA,AACA;;;kCACA,AACA;;8BACA;8BACA;gCACA;oCACA;mCACA;AACA,AACA;;aACA;AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;AACA,2MAEA,gIACA,AACA;;AACA;mCACA;;oBAEA;iBACA;8CACA;sBACA;wDACA;AACA;6BACA,AACA;;AACA;gBACA,AACA;;AACA;AACA;AACA;0BACA,AACA;;AACA;yBACA;+BACA;0CACA;;AACA;+CACA;;AACA;4BACA;0BACA;;AACA;AACA;4BACA;0BACA;qBACA;AACA;oEACA;kEACA;AACA;gCACA;8BACA;AACA;AACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA;wDACA;0CACA;wCACA;AACA;AACA,AACA;;AACA;kCACA,AACA;;AACA;qDACA;6CACA,kCACA,gCACA;AACA,AACA;;AACA;wBACA,AACA;;AACA;8BACA,AACA;;AACA;0BACA,AACA;;AACA;yBACA;6BACA;8BACA;+CACA;wBACA;AACA;yCACA;qBACA;AACA;6EACA;uGACA;8DACA;oCACA;AACA;AACA;mBACA;AACA;4BACA;AACA;uCACA,AACA;;AACA;+BACA;kFACA;AACA,AACA;;AACA;oDACA;8BACA;wEACA;oBACA;+BACA;sCACA;6CACA;kCACA;AACA;AACA;AACA;AACA;AACA,AACA;AACA,AACA;AA7HA;AA8HA;AACA,KArIA;;AAsIA,AACA,AACA;;;AACA,wCACA,6FACA,oGACA,AACA;;AACA;kBACA,AACA;;AACA;0EACA;6BACA;iBACA;AACA,AACA;;yBACA;8BACA;8BACA;mBACA;AACA;sBACA;AACA;eACA;AACA,AACA;;AACA;iDACA;qBACA,AACA;;8BACA;gDACA;mCACA;gDACA,kBACA,AACA;AACA;eACA;AACA,AACA;;AACA;2CACA;AACA;sCACA;AACA;AACA,AACA;;uBACA;uBACA;+CACA,AACA;;AACA;iCACA;gCACA;AACA;AACA,AACA;;AACA;iCACA;AACA;AACA,AACA;;kEACA;gCACA;AACA,AACA;;kEACA;gCACA;AACA;AACA,AACA;;gDACA;wCACA;;;AACA;;;AACA;AACA;AACA;AACA,AACA;;8CACA;+CACA;mBACA;AACA;AACA,AACA;;;sDAEA;AACA;+BACA,AACA;;AACA;kFACA,AACA;;AACA;qCACA;mCACA;AACA,AACA;;AACA;6BACA;yCACA;AACA;uDACA;AACA,AACA;;4DACA;AACA;2DACA;iDACA;wCACA;AACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;gCACA;6BACA;AACA;AACA,AACA;;0BACA,AACA;;mBACA,AACA;;AACA;uBACA,AACA;;AACA;+BACA,AACA;;AACA;+DACA;6BACA;AACA,AACA;;AACA;;4CAEA;4CACA;6CACA;8CACA,AACA,AACA;AANA;;AAOA;AACA;oDACA;AACA;4BACA;2DACA;yBACA;AACA;cACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;4CACA;cACA;sCACA;AACA;wCACA;2DACA;sDACA;qCACA;AACA;AACA;AACA;AACA,AACA;;AACA;yDACA;4CACA;mCACA;AACA;AACA;AACA,AACA;;AACA;8GACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;gCACA;8BACA;AACA;AACA;0BACA;AACA;eACA;AACA;+DACA;qBACA;AACA,AACA;;AACA;2CACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;oCACA;8BACA;AACA;AACA;AACA;eACA;AACA;+DACA;qBACA;AACA;AACA;eACA;AACA,AACA;;iDACA;4BACA;AACA;AACA;+DACA;kCACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;iDACA;+DACA;iDACA;gCACA;AACA;AACA;AACA,AACA;;oCACA;6BACA;AACA;AACA,AACA;;AACA;+BACA,AACA;;AACA;mBACA;+DACA;6BACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;4CAEA;kDACA;mDACA;8CACA,AACA,AACA;AANA;;AAOA;2CACA;qBACA;yBACA;;8CAEA;8FACA;+CACA;gDACA,AACA;AALA;AAMA;AACA,AACA;;gCACA;AACA;+DACA;qBACA;AACA,AACA;;AACA;mBACA;uBACA;+DACA;6BACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;;4CAEA;4CACA;6CACA;8CACA,AACA;AALA;AAMA,AACA;;yBACA;2BACA;yBACA;+BACA;8BACA,AACA,AACA;AAxPA;;yBAyPA;;sBAEA;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;oBACA;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;oBACA;iBACA;oBACA;iBACA;AAlBA,WAmBA;AACA;AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,0CACA,mEACA,0FACA;;kBAEA;kBACA;AACA;AACA;oCACA;;wDAEA;8BACA;kBACA,AACA;;AACA;AACA;sCACA;kFACA;sCACA;uCACA;uBACA;0BACA;8CACA;wCACA;AACA;;AACA;wBACA;qCACA;AACA,AACA;;AACA;mCACA;8BACA;4CACA;+DACA;qCACA;AACA;2BACA;AACA;AACA;0DACA;kBACA,AACA;;sGACA;oCACA;qBACA;6BACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;gCACA;0EACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;gCACA;0EACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;kCACA;8EACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;6DACA;sBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;0DACA,AACA;;AACA;oDACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;wCACA;oDACA;4EACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;uCACA;mDACA;2EACA;AACA;AACA,AACA;;qDACA;wBACA;2CACA;0BACA;AACA;AACA;AACA,AACA,AACA;;AACA;8CACA;AACA;8CACA;AACA;AACA,AACA;;oCACA;mCACA;AACA;AACA,AACA;AACA,AACA;AA/IA;AAgJA,AACA;AAvJA;;AAwJA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AACA,0FACA,AACA;;mCACA;;oBAEA;oBACA;qBACA;iDACA;kCACA;8BACA;+DACA;yCACA;iDACA;+BACA;;AACA;AACA;AACA;AACA;AACA;yCACA;qCACA;qDACA;uDACA;yDACA;qDACA,AACA;;uBACA,AACA;;sCACA;qBACA;oCACA;AACA;iCACA;uBACA;AACA;2DACA;oCACA;AACA;AACA;AACA;AACA;+BACA;uBACA;AACA;AACA,AACA;mBACA;AACA;AACA,AACA;;qCACA;qDACA;AACA;2DACA;AACA;qBACA;AACA;AACA;AACA,AACA;AACA,AACA;AA1DA;AA2DA,AACA;;aACA,AACA;AACA;;AACA,AACA,AACA,AACA;;;sEACA;;8CAEA;kDACA,AACA;;iDACA;yCACA;AACA;kBACA;AACA,AACA;;wDACA;0CACA;0BACA;gCACA;AACA;iBACA;AACA,AACA;;AACA;+CACA;kCACA;uEACA;6CACA;AACA;AACA,AACA;;+CACA;qCACA;gCACA;2FAEA;mDACA;AACA,WAHA,2BAIA;AACA,AACA;;yCACA;yCACA;oDACA;0BACA;8BACA;mDACA;+DACA;AACA;mBACA;AACA;AACA,AACA;AA/CA;AAgDA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;gFACA;AACA;8BACA,AACA;;kCACA;YACA,AACA;;4DACA;gBACA;AACA,AACA;;AACA,0CACA;0CACA;4BACA;oCACA;4CACA;6BACA;0BACA;yCACA,AACA;;YACA;;AACA;0CACA;mCACA;uCACA;AACA;;AACA;kEACA;AACA,AACA;;AACA;;oBAEA;;uBAEA;qBACA;qBACA;uBACA,AACA,AACA;AANA;AAFA;AASA,AACA;;aACA;AACA;;AACA,AACA,AACA,AACA,AACA;;;;;AACA,0EACA;2CACA;wCACA,AACA;;kDACA;gBACA;AACA,AACA;;qCACA;;AAEA;kBACA;AACA;oBACA;AACA;iBACA;mBACA;mBACA;0BACA;sBACA;sBACA;8BACA;sBACA;uBACA;2BACA;0BACA,AACA,AACA;AAlBA;;yDAmBA;aACA;AACA,AACA;;;qBAEA;8BACA;;AAEA;uBACA;yBACA;wBACA;2BACA;0BACA;0BACA;2BACA,AACA,AACA;AAVA;;sFAWA,AACA;;eACA,AACA;;sCACA;wBACA;oEACA;AACA;6GACA;gCACA;AACA;AACA;AACA,AACA;;mDACA,AACA;;AACA;0DACA,AACA;;AACA;4DACA;AACA,AACA;;AACA,AACA,AACA;;;4CACA;iCACA;yCACA,AACA;;AACA;oDACA;kBACA;mCACA;2DACA,AACA;;+CACA;AACA,AACA;;AACA;kCACA,AACA;;AACA;oDACA;kBACA;2DACA,AACA;;6FACA;AACA,AACA;;iBACA;AACA,AACA;;AACA,AACA,AACA;;;0CACA;kCACA;2DACA;AACA;4DACA;AACA;2BACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;yCACA;kCACA;uBACA;AACA;AACA,AACA;;AACA;+DACA;2BACA;6BACA,AACA;;sBACA;iDACA;iFACA;AACA,AACA;;qBACA;AACA,AACA;;AACA,AACA,AACA;;;6CACA;;cACA,AACA;;iDACA;AACA;+DACA;0GACA;AACA;iDACA;6BACA;yDACA;6BACA;AACA;iBACA;AACA,AACA,AACA;;AACA,AACA,AACA;;;oCACA;;;cACA;kEACA;0BACA,AACA;;AACA;AACA;mEACA;oDACA;kDACA,AACA;;+CACA;gDACA;AACA;AACA,AACA;;2CACA;iDACA;2BACA;AACA;iBACA;AACA,AACA;;AACA,AACA,AACA;;;wCACA;;;cACA;qEACA;qEACA;kEACA,AACA;;oCACA;2BACA;AACA;sDACA;mCACA;sDACA;iCACA;uCACA;mBACA;yBACA;AACA;2BACA;AACA;iBACA;AACA,AACA;;AACA,AACA,AACA;;;sCACA;;;cACA;qEACA,AACA;;yEACA;sDACA;wEACA;AACA,AACA;;8CACA,AACA;;iBACA;AACA,AACA;;AACA,AACA,AACA;;;sCACA;;;cACA;4DACA;4DACA;gFACA;8BACA;+BACA,AACA;;uCACA;iDACA;2BACA;AACA;iBACA;AACA,AACA;;AACA,AACA,AACA;;;0CACA;;;cACA;kEACA,AACA;;6DACA;iDACA;2BACA;AACA;iBACA;AACA,AACA;;AACA,AACA,AACA;;;0CACA;;;cACA;kEACA,AACA;;6DACA;iDACA;2BACA;AACA;iBACA;AACA,AACA;;AACA,AACA,AACA;;;sCACA;8DACA;8DACA;sBACA,uBACA,6BACA,AACA;iBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;;uBACA;qBACA;4BACA,AACA;;AACA;oDACA;8BACA;AACA;AACA;wCACA,AACA;;4EACA,AACA;;kCACA;4BACA;qBACA;AACA;AACA,AACA;;AACA;2BACA;mBACA;AACA,AACA;;AACA;0BACA;AACA;oCACA;4DACA;mBACA;oFACA;AACA;AACA,AACA;;iGACA,AACA;;AACA;yBACA,AACA;;gEACA;+BACA;uCACA;iBACA;sDACA;AACA;AACA,AACA;;2CACA;sBACA;AACA;AACA,AACA;;AACA;iGACA;qBACA;uBACA,AACA;;AACA;8CACA;wBACA;0EACA;uDACA,AACA;;mCACA;iDACA;sFACA;qDACA;AACA;AACA;yBACA;AACA,AACA;;4BACA;AACA;sDACA;gCACA;AACA;AACA;+BACA;AACA,AACA;;4BACA;AACA;qCACA;8BACA;sCACA;iCACA;AACA;qBACA;8BACA;uCACA;gCACA;AACA;AACA;AACA,AACA;;oDACA;AACA;iCACA,AACA;;6FACA;gDACA;AACA,AACA;;6FACA;gDACA;AACA,AACA;;kCACA;AACA;AACA,AACA;;AACA;wCACA;6BACA;AACA,AACA;;6EACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;0CACA;6BACA;yCACA;iDACA;mBACA;AACA;qCACA;mEACA;AACA;8DACA;AACA;iBACA;yCACA;oDACA;mBACA;mEACA;AACA;AACA;AACA,AACA;;uCACA;oCACA;AACA,AACA;;oCACA;uBACA;gDACA;AACA,AACA,AACA,AACA;;AAzZA;;;4DA2ZA;wCACA;AACA,AACA;AAJA;AAKA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,qEACA,AACA;;;AAEA;;;gBAGA;oBACA;mBACA,AACA;AAJA;;gBAMA;oBACA;mBACA,AACA,AACA;AALA;AANA;;;gBAcA;oBACA;mBACA,AACA,AACA,AACA,AACA;AAPA;AADA;AAdA;;aAuBA;AACA;;AACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;AACA,sEACA;;AAEA;;mBAEA;qBACA;uBACA;oBACA;oBACA;sBACA;qBACA;qBACA;oBACA,AACA,AACA;AAXA;;AAYA;;mBAEA;qBACA;uBACA;oBACA;oBACA;sBACA;qBACA;qBACA,kEACA,kBACA;oBACA,AACA,AACA,AACA;;AAdA;;AAeA;;mBAEA;qBACA;uBACA;oBACA;oBACA;sBACA;qBACA;qBACA,8EACA,kBACA;oBACA,AACA;;AACA;wBACA;AACA;sBACA;4CACA;AACA;yBACA;mBACA;mBACA;mBACA;mBACA;mBACA;mBACA;mBACA;mBACA;mBACA;mBACA;mBACA;mBACA;mBACA;mBACA;mBACA;mBACA;sCACA;2CACA;AACA;AACA;wCACA,+FACA;AACA;AACA;mDACA;AACA;AACA;mBACA;uCACA,AACA,AACA;;;AACA;2DACA;gEACA;AACA;AACA,AACA,AACA;AAzDA;;AA0DA;;mBAEA;qBACA;uBACA;oBACA;oBACA;sBACA;qBACA;qBACA,wEACA,mCACA;oBACA,AACA,AACA,AACA;AAdA;AA1FA;;aAyGA;AACA;;AC/gFA,uBACA;;oBAEA;gBACA;cACA;kBACA;cACA;gBACA;qBACA;aACA;oBACA;sBACA;cACA,AACA,AACA;AAbA;;yBAcA;;4BACA;wDACA;qCACA;AACA;qDACA;AACA,AACA;;mDACA;;;;;;;;;;;;;mBACA;0CACA;0CACA;sCACA;+CACA;AACA;kCACA,CACA;;AACA;yBACA;oDACA;sDACA;6FACA;AACA;mCACA;AACA;AACA;AACA;+BACA;AACA;AACA;yBACA;AACA,AACA;;6CACA;oBACA;AACA,AACA;;uHACA;8FACA;AACA,AACA;;0CACA;mCACA;AACA,AACA;;0BACA;mBACA;mCACA;AACA;mBACA;0CACA;AACA;mBACA;mBACA;oCACA;AACA;mBACA;gFACA;AACA;mBACA;mEACA;AACA;mBACA;gFACA;AACA;mBACA;oFACA;AACA;mBACA;mCACA;AACA;mBACA;qFACA;AACA;mBACA;8BACA;AACA;mBACA;mCACA;AACA;mBACA;uCACA;AACA,AACA;;wCACA;sCACA;AACA,mBACA;0EACA;2CACA;sDACA;AACA,qBACA;uBACA;AACA;uFACA;mDACA;6FACA;4HACA;AACA;AACA;AACA;2BACA;AACA,AACA;;sBACA,AACA;;qCACA;;;;wBACA;qBACA;qDACA;kDACA;AACA,8DACA;4CACA;AACA,mEACA;0BACA;2BACA;;;gCACA;2EACA;4DACA;wGACA;sFACA;gEACA;AACA,+FACA;gEACA;AACA,yBACA;0CACA;AACA;AACA;AACA,qBACA;sCACA;AACA;yBACA;AACA,mBACA;2BACA;AACA;iCACA;8BACA;AACA;4CACA;AACA,iBACA;kCACA;AACA;yCACA;AACA;eACA;AACA,AACA;;yDACA;mCACA;2BACA;mCACA;AACA,AACA;;AACA,AACA,AACA;;;kCACA;qEACA;AACA,AACA;;6CACA;0CACA;AACA,AACA;;AACA,AACA,AACA;;;0CACA;0BACA;2BACA;AACA,aACA;yBACA;0BACA,AACA;;wDACA;6BACA;;uBAEA;wBACA,AACA;AAHA;AAIA;AACA;AACA;8CACA;;AChNA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA;AACA,4CACA,AACA,kHACA;sFACA;;mDAEA;2CACA;0CACA;4CACA;2CACA;2BACA;oBACA;sBACA,AACA;;AACA,AACA;;0BACA;4CACA;4BACA;;uBAEA,AACA;AAFA;+BAGA;mBACA;;wBAEA,AACA;AAFA;gCAGA;AACA;iDACA;+BACA,eACA,kCACA,0BACA,WACA;AACA;AACA,AACA;;iDACA;4BACA;oDACA;AACA;oDACA;AACA,AACA;;4BACA;wEACA;AACA;AACA,AACA;;qCACA,yBACA;kCACA,qBACA,oCACA,0BACA,AACA;;+BACA;;4BAEA;0BACA;;8BAEA,AACA;AAFA;mDAGA;AANA,sCAOA;qBACA;;;8BAGA,AACA;AAFA;mDAGA;AAJA,wBAKA;AACA;AACA;AACA,AACA;;gCACA;gCACA,uBACA,gBACA;yBACA;AACA,AACA;;8BACA;0EACA;qBACA;AACA,AACA;;sCACA,yBACA;AACA;AACA;AACA;AACA;gDACA;AACA;AACA;2BACA,qBACA,oCACA,2BACA,AACA;;+BACA;;+BAEA;sBACA;AAFA,sCAGA;qBACA;;sBAEA;AADA,wBAEA;AACA;AACA;AACA,AACA;;;+BACA,CACA;gCACA,uBACA;0BACA;AACA,AACA;;oEACA;gCACA;AACA;mBACA;AACA;AACA;AACA;AACA,AACA;AA/HA;AAgIA;;AACA,4CACA,AACA,+CACA;;kBAEA;gDACA;yDACA;mDACA;AACA;AACA,AACA;AAPA;AAQA;;AACA,uEACA,AACA;mBAEA,AACA,AACA;AAHA,kIAIA;AACA;oBACA,AACA;;AACA;8CACA;mDACA,kEACA;yBACA;wDACA;qCACA;6BACA;AACA;AACA;AACA;AACA,AACA;;AACA;4CACA;mBACA;yBACA,AACA;;oDACA;2BACA;AACA;AACA,AACA;;AACA;0CACA;wCACA;0BACA;oCACA;AACA;AACA;AACA;;AACA;AACA,AACA;2CACA;;oBAEA;sBACA;oBACA;0DACA;sCACA;AACA,AACA;AAPA;AAQA;;AACA,AACA;gDACA;;kCAEA;0BACA;kBACA;0DACA;sCACA;AACA;;wBAEA;4BACA;kBACA;sBACA,AACA;AALA;0CAMA;+CACA;2BACA;AACA;AACA;kEACA;2BACA;iCACA,AACA;;+CACA;iDACA;kDACA;mDACA;uBACA;wCACA;AACA;AACA,AACA;;+CACA;mCACA;kDACA;sCACA;AACA;AACA;AACA,AACA;;oFACA;iCACA;+BACA;AACA,AACA;AA3CA;AA4CA;;AACA,AACA;kDACA;;0BAEA;sBACA;iBACA;iBACA;mFACA;AACA;AACA;AACA;kEACA;AACA,AACA;AAXA;AAYA;;AACA;AACA,AACA;qDACA;;iBAEA;+DACA;;;gCACA;yBACA;kEACA;wBACA;0BACA;AACA;AACA;AACA,AACA,AACA;AAZA;;oCAaA;eACA,0BACA,+BACA,4BACA,4BACA,4BACA,iCACA;AACA;AACA;;AACA,yCACA,AACA,8JACA;kCACA;wBACA;0BACA;4BACA;0BACA;AACA,AACA;;sDACA,4EACA,AACA;;4BACA;6BACA;iBACA;sCACA;AACA;AACA,AACA,0CACA;;oBAEA;sBACA;kBACA;0DACA;sCACA;AACA;oBACA;;iBAEA,AACA,AACA;AAHA;AARA;AAYA;;AACA,2CACA,AACA;mBAEA;mBACA,AACA,AACA;AAJA,sFAKA;qDACA;qDACA;AACA,AACA,8DACA;;iCAEA;oBACA;sBACA;0DACA;;kCACA;6CACA,AACA;;+CACA,AACA;;AACA;4CACA;mHACA;AACA,AACA;;AACA;0DACA;gCACA;AACA;AACA,AACA;;wDACA,AACA;;mEACA;uCACA;8EACA;4BACA;AACA;AACA;AACA,AACA;;oCACA;iEACA;2DACA;AACA;AACA;AACA,AACA;AArCA;AAsCA,AACA,gDACA;;oCAEA;oBACA;sBACA;0DACA;;kCACA,AACA;;+CACA,AACA;;kCACA;2DACA;AACA,AACA;;mCACA;4DACA;AACA,AACA;;6DACA;2EACA;AACA,AACA;;AACA;4CACA;iGACA;AACA,AACA;;AACA;0DACA;gCACA;AACA;AACA,AACA;;qCACA;sGACA;0BACA;AACA;AACA;AACA,AACA;AAtCA;AAuCA;;AACA,4CACA,AACA,+JACA;iBACA;iDACA;4BACA;gCACA;;;gCACA,AACA;;sBACA;wBACA,AACA;;gDACA;;iBAEA;mBACA,AACA;AAHA;oCAIA;2CACA;AACA;AACA;sGACA;yCACA;wCACA;AACA,AACA;;+BACA;gCACA;oBACA;4CACA;mCACA;mBACA;AACA;AACA;AACA,AACA;;yCACA;gDACA;sDACA;mBACA;AACA;AACA;AACA,AACA;;4CACA;6DACA,AACA;;+CACA;iBACA;AACA;AACA,AACA;;6CACA;AACA,AACA;;4CACA;qGACA,AACA;;+DACA;iBACA;AACA;AACA,AACA;;6CACA;AACA,AACA;;0CACA;mCACA,AACA;;+DACA;kCACA;oDACA;AACA,AACA;;AACA;6BACA;yDACA;sCACA;2CACA;4BACA;sBACA;+CACA;iBACA;2BACA;4BACA;sBACA;+BACA;AACA;yCACA;AACA;0BACA;AACA,AACA;;AACA;iCACA;yBACA;0BACA;AACA;AACA;AACA,AACA;;AACA;oEACA;iDACA;AACA;qCACA;oEACA;AACA;AACA;sCACA,4CACA;6CACA;qGACA;0CACA;AACA;AACA,AACA;;AACA;6CACA;4BACA;AACA,AACA;;yCACA;6CACA;AACA,AACA;;0CACA;6CACA;AACA,AACA;;0CACA;6DACA;AACA,AACA;;iCACA;6BACA;sBACA;AACA;AACA;AACA,AACA;;gCACA;wBACA;sBACA;AACA;AACA;AACA,AACA;;uCACA;uCACA,AACA;;yCACA;oBACA;AACA;AACA,AACA;;4DACA;oCACA;AACA,AACA;;gCACA,AACA;;wCACA,AACA;;+CACA;+DACA;kDACA;iDACA;sBACA;AACA;AACA;AACA,AACA;;6BACA;qBACA;sBACA;+BACA;2BACA;AACA;AACA;AACA,AACA;;0CACA;2CACA;8BACA;AACA;AACA,AACA;;sCACA;uDACA;yCACA;0BACA;AACA;AACA;AACA,AACA;;gCACA;gDACA;yCACA;AACA;AACA,AACA;;+CACA;uBACA;AACA;AACA,AACA;;2CACA;sEACA;kDACA,uEACA;4DACA;gCACA,AACA;;0EACA;mEACA;AACA,AACA;;sCACA;mFACA;mCACA;0CACA;uCACA;8CACA;0DACA;0CACA;kFACA;AACA,AACA;;6CACA;AACA;AACA;AACA;AACA,AACA;;8BACA;6BACA;kBACA,AACA;;AACA;AACA;AACA,AACA;;qCACA;gDACA;yCACA;mBACA;AACA;AACA;AACA,AACA;;4BACA;6BACA;2BACA;4BACA;AACA;AACA,AACA;;uCACA;4BACA;sCACA;AACA;AACA;AACA,AACA;;8BACA;AACA;+BACA;8CACA;+CACA;AACA;AACA,AACA;;yBACA;+BACA;4EACA;iBACA;eACA;iBACA;AACA;AACA;AACA,AACA,6CACA;;oBAEA;oBACA;sBACA;kBACA;0DACA;sCACA;AACA;;kBAEA;oBACA;wBACA;mBACA;kBACA,AACA,AACA;AAPA;AARA;AAgBA,AACA,8DACA;;iBAEA;kBACA;oBACA;0DACA;sCACA;AACA;;kBAEA;iBACA,AACA;AAHA;iEAIA;2BACA;uCACA;AACA;4CACA;qCACA;AACA,AACA;;mDACA;mEACA;AACA;AACA,AACA;AAvBA;AAwBA,AACA,2CACA,uBACA;4BACA,AACA;;yDACA;4BACA;sBACA;AACA;AACA;AACA,AACA;;;0EAEA;sCACA;0BACA;yCACA;iEACA;uDACA,2CACA;6BACA,AACA;;6CACA,kBACA,aACA,AACA;;+BACA;wBACA;AACA;AACA;AACA;AACA;gFACA;sCACA;0BACA;yCACA;iEACA;gFACA,AACA;;6CACA,kBACA,aACA,AACA;;+BACA;wBACA;AACA;AACA;AACA;AACA,AACA;AArCA;AAsCA;;AACA,8CACA,AACA,oIACA;AACA;sCACA,AACA;;UACA;UACA,AACA;;8BACA;2BACA,AACA;;uBACA;0BACA,AACA;;;eAGA;iBACA;;;AACA;8CACA;4BACA;4CACA;qCACA;AACA,AACA;AATA,SADA;eAYA;iBACA;;;AACA;8CACA;4BACA;4CACA;qCACA;AACA,AACA;AATA;eAWA;iBACA;;;AACA;8CACA;4BACA;4CACA;qCACA;AACA,AACA;AATA;eAWA;iBACA;;;AACA;8CACA;6BACA;uCACA;sCACA;AACA,AACA;;oCACA;AACA,AACA;AAZA;eAcA;qDACA;;;AACA;;;AACA,AACA;AALA;eAOA;0DACA;;;AACA;;;AACA,AACA;AALA;eAOA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;iBACA;;;AACA;8CACA;6BACA;uCACA;sCACA;AACA,AACA;;oCACA;AACA,AACA;AAZA;eAcA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;mDACA;;;AACA,AACA;AAJA;eAMA;wDACA;;;AACA,AACA;AAJA;eAMA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;iBACA;;;AACA;;;AACA,AACA;AALA;eAOA;qDACA;uCACA;mCACA;2BACA;AACA,AACA;;gCACA;4BACA;AACA;AACA;;;AACA,AACA;AAbA;eAeA;iBACA;uCACA;sCACA;+BACA;gCACA;kCACA;uCACA;yCACA;AACA;8CACA;oCACA;AACA,AACA;AAdA;eAgBA;iBACA;;;AACA,AACA;AAJA;eAMA;iBACA;;;AACA,AACA;AAJA;eAMA;4EACA;;;AACA,AACA;AAJA;eAMA;oDACA;;;AACA,AACA;AAJA;eAMA;oDACA;;;AACA,AACA;AAJA;eAMA;oDACA;;;AACA,AACA,AACA;AALA;AAMA,AACA;;WACA,AACA;;oCACA;;iCACA,AACA;;AACA;wCACA;6BACA;0BACA;gCACA;2DACA;2BACA;sCACA;;AACA;kCACA;iCACA;;AACA;6BACA;8BACA;AACA;AACA;0BACA;mBACA;;AACA;4BACA;2BACA;4BACA;AACA;AACA;AACA,AACA;;+BACA;AACA,AACA;;2DACA;0CACA,AACA;;0BACA;kCACA,AACA;;8CACA;iCACA;6EACA;yBACA;0BACA;AACA;iCACA,AACA;;;qBAEA;wBACA;0BACA;4BACA,AACA;AALA;AAMA;AACA,AACA;;;mDAEA;kCACA,AACA;AAHA;AAIA,AACA;;uCACA;yBACA;gBACA;uBACA;kCACA;4CACA;2CACA;2EACA;8EACA;6BACA;AACA;4CACA;iDACA;8DACA;gCACA;uCACA;AACA;AACA,AACA;;AACA;AACA;AACA,AACA;;yCACA;yBACA;AACA;AACA;AACA,AACA;;wDACA,AACA;;oCACA;wBACA;AACA,AACA;;eACA;AACA,AACA;;qEACA;2BACA;qEACA;AACA;AACA,AACA;;oDACA;0CACA;2DACA;8EACA;yCACA;;mCAEA;2BACA,AACA;AAHA;AAIA;AACA,AACA;;;sBAEA;oCACA;wCACA;AACA,AACA;AALA;AAMA,AACA;;4CACA;6DACA;iBACA;AACA,AACA;;qDACA,AACA;;qCACA;eACA;AACA,AACA;;sCACA;oDACA;AACA,AACA;;yCACA,AACA;;2DACA;iCACA;WACA;AACA,AACA;;sDACA;iDACA;iBACA;AACA,AACA;;qDACA;2DACA,AACA;;qCACA;eACA;AACA,AACA;;mCACA;sDACA;AACA,AACA;;kCACA;2BACA;yBACA;kCACA;uBACA;uCACA;sBACA;sEACA;;6BAEA;8BACA;6BACA;8BACA;gCACA;gCACA;qCACA,AACA;AARA;iBASA;0BACA;uCACA;AACA;sGACA;AACA,AACA;;0DACA;iCACA;wCACA;yBACA;AACA,AACA;;8BACA;gDACA;AACA;AACA,AACA;;qDACA,gCACA;qDACA,6BACA,AACA;;+DACA;qFACA;4BACA;oEACA;uDACA,gCACA;mBACA;4BACA;oEACA;uEACA,+CACA;AACA;AACA,AACA;;iBACA;AACA;AACA,AACA;;AACA;AACA;0CACA;sBACA;iBACA;AACA,AACA;;sCACA;sFACA;AACA,AACA;;uEACA;wBACA;AACA,AACA;;eACA;AACA,AACA;;0BACA;6BACA;AACA,AACA;;wBACA;0BACA;8BACA;4BACA;oCACA,AACA;;0CACA;2EACA;AACA,AACA;;4CACA;iFACA;AACA,AACA;;AACA;oDACA;0CACA;wFACA;2DACA;AACA,AACA;;6CACA;6BACA;4CACA;eACA;AACA,AACA;;+DACA;iCACA;sCACA;wDACA;gEACA;AACA;AACA;;AACA;AACA;AACA,2CACA,yCAEA,oBACA;AACA;sBACA;AACA;sBACA,AACA;;2BACA,AACA;;;kBAEA;oDACA;6BACA;0BACA;0BACA;8BACA;qDACA;mCACA;qCACA;mCACA,AACA;;iBACA,AACA;;iDACA;8BACA;;qBAEA;uBACA,AACA,AACA;AAJA;;2CAKA;6BACA;AACA,AACA;;kCACA;AACA,AACA;;yCACA;oCACA;4CACA;yCACA;iCACA;uBACA;6DACA;mCACA;mDACA;qDACA;kDACA;mCACA;2BACA;AACA;AACA;yDACA;0CACA;qEACA;AACA;oCACA;4DACA;AACA;uCACA;AACA;AACA;;+BAEA;uBACA;yBACA;gCACA;sDACA,AACA;AANA;AAOA;qCACA;AACA,AACA;;kCACA;iCACA;6CACA;uCACA;oCACA;qCACA;+CACA;yDACA;iDACA;gFACA;+BACA;AACA;AACA;mBACA;0BACA;AACA;AACA;AACA,AACA;AAlFA;KAVA;AA6FA,0EACA,AACA,2DACA,AACA,0CACA,AACA;sBAEA;iBACA;mBACA;kBACA;uBACA;sBACA;wBACA;eACA;eACA;eACA;eACA;oBACA;sBACA;2BACA;iBACA;mBACA;gBACA,AACA,AACA;AAnBA,yNAoBA,yLACA;iBACA;;UACA;uBACA;2BACA,AACA;;wBACA;0BACA,AACA;;qCACA;mCACA;AACA,AACA;;AACA;oCACA,AACA;;AACA,OACA,eACA,gBACA,kBACA,aACA,mBACA,kBACA,eACA,oBACA,cACA,WACA,WACA,WACA,WACA,gBACA,aACA,uBACA,eACA,eACA,mCACA;gBACA;eACA;eACA;mEACA;AACA;eACA;+EACA,6EACA;AACA;eACA;eACA;eACA;eACA;eACA;eACA;mEACA,2DACA,4BACA;AACA;eACA;eACA;eACA;eACA;eACA;mEACA,yDACA;AACA;eACA;yEACA;0DACA;uEACA;kDACA;mBACA;iFACA;AACA,AACA;;AACA;eACA;eACA;uEACA;yBACA;2CACA;sFACA;uBACA;iDACA;8BACA;AACA,AACA;;yDACA;AACA;qBACA;6CACA,+EACA,YACA;AACA,AACA;;mBACA;AACA,AACA;;AACA;eACA;eACA;+CACA;;;kCACA;sGACA;+HACA,2HACA;+CACA;iEACA;AACA;AACA;mBACA;iEACA;AACA,AACA;;AACA,AACA;;AACA,AACA;;sFACA,AACA;;8DACA;gDACA;yFACA;4BACA;eACA;AACA;AACA,AACA;;8CACA;kEACA;2CACA;iBACA;AACA;eACA;AACA,AACA;;0CACA;sBACA;sCACA,qCACA,mCACA;+CACA;uHACA;0EACA;qGACA;iFACA;mBACA;AACA;AACA;eACA;gCACA;AACA,AACA;;qFACA;iCACA,qDACA,+DACA,AACA;;0CACA;eACA;AACA;AACA,AACA;;gCACA;oCACA;0CACA;+BACA,AACA;;uBACA;2EACA;gDACA;uBACA;AACA;AACA;aACA;AACA,AACA;;qCACA;0BACA;8BACA;eACA;+BACA;kDACA;AACA,AACA;;iFACA;8DACA;oDACA,yCACA;AACA;AACA,AACA;;sDACA;gFACA;8DACA;wBACA;8DACA;sCACA;;gBAEA;yCACA;2DACA;oCACA;uBACA;4BACA;yBACA;iDACA,AACA,AACA;AAVA;;sDAWA;8BACA;AACA,AACA;;6EACA;4BACA;AACA,AACA;;eACA;AACA,AACA;;wCACA;sBACA,+DACA,wDACA,2EACA;AACA,AACA;;yCACA;6DACA;AACA,AACA;;AACA;wCACA;qBACA;+BACA;oCACA;AACA;eACA;AACA,AACA;;sCACA;oDACA;4JACA;mEACA;wDACA;oCACA;sBACA;eACA;4BACA;yEACA,AACA;;uBACA;AACA,AACA;;0BACA;AACA,AACA;;yCACA;mFACA;kFACA;iDACA;aACA;AACA,AACA;;+CACA;iCACA,AACA;;oEACA,iEACA;AACA;AACA,AACA;;uEACA,AACA;;qBACA;AACA,AACA;;AACA;4IACA,AACA;;iDACA;wBACA;AACA,AACA;;AACA;yCACA,AACA;;sCACA;kCACA,AACA;;mEACA;AACA;AACA,AACA;;YACA;uCACA;cACA;AACA,AACA;;gDACA;;mBACA,CACA;AACA;6BACA;oEACA;gDACA;eACA;kCACA;eACA;AACA;AACA,AACA;;4CACA;kCACA;yBACA;AACA;AACA,AACA;;yCACA;AACA;sCACA;yBACA;AACA;AACA,AACA;;6BACA;gCACA;kDACA;AACA;AACA,AACA,yHACA;uEACA,AACA;;4BACA;qBACA;2CACA;2CACA,iEACA;AACA,AACA;;kCACA;6BACA;+BACA;aACA;AACA,AACA;;8CACA;;;;YACA;sBACA;0BACA;uBACA;8CACA;AACA;eACA;AACA,AACA;;sCACA;mCACA;oCACA;4CACA,AACA;;iDACA,AACA;;4DACA;yDACA,sBACA;iCACA,AACA;;+CACA;6DACA;AACA,AACA;;AACA;4CACA;qCACA;;8CAEA;wCACA,AACA;AAHA;AAIA,AACA;;iCACA;oCACA;;gDAEA;2CACA,AACA;AAHA;AAIA,AACA;;uDACA;sCACA,AACA;;6BACA;8BACA;2DACA;oCACA;+DACA;8BACA,6DACA;AACA;AACA;AACA,AACA;;6CACA;2EACA;2EACA;iCACA;iCACA;wBACA;AACA,AACA;;;iCAEA;gFACA;6BACA;8BAHA,CAIA;0BACA;2EACA;AACA,AACA;;+CACA;mCACA,AACA;;4BACA;wBACA;iCACA;wBACA;oCACA;wBACA;mCACA;wBACA;2DACA;4EACA;0CACA;qGACA;mCACA;iBACA;kCACA;+EACA;AACA;gCACA;AACA;AACA,AACA,2HACA;2BACA;qBACA,AACA;;kCACA;6BACA;aACA;AACA,AACA;;sCACA;+BACA;mCACA;YACA,AACA;;qCACA;+BACA;oCACA;;wCAEA,AACA;AAFA;AAGA,AACA;;uDACA;6CACA;kFACA;AACA,AACA;;6CACA;yDACA;yDACA;iCACA;iCACA;wBACA;AACA,AACA;;+CACA;mCACA,AACA;;4BACA;wBACA;iCACA;6BACA;oCACA;wBACA;mCACA;6BACA;2DACA;8EACA;sCACA;mCACA;iBACA;kCACA;iBACA;AACA;iCACA;AACA;AACA,AACA,0HACA;mBACA;qBACA,AACA;;qCACA;0DACA;AACA,AACA;;wCACA;uBACA;gCACA;6BACA;AACA,AACA;;sCACA;;YACA,AACA;;gGACA;+BACA;yCACA;;wCAEA,AACA;AAFA;AAGA,AACA;;oEACA;uCACA;wBACA;AACA,AACA;;6CACA;2CACA;AACA,AACA;;+CACA;mCACA,AACA;;4BACA;wBACA;iCACA;wBACA;oCACA;wBACA;mCACA;wBACA;2DACA;gDACA;mCACA;iDACA;kCACA;0EACA;AACA;oCACA;AACA;AACA,AACA,+CACA;;0DAEA;sCACA;AACA;;6BAEA,AACA;AAFA;mCAGA;kBACA;oBACA;sBACA;0DACA;;kCACA,AACA;;8BACA;AACA,AACA;AAhBA;AAiBA,AACA,6CACA;;0DAEA;sCACA;AACA;oCACA;kBACA;oBACA;0DACA;qCACA;oCACA,AACA;;6BACA;AACA,AACA;AAbA;AAcA,AACA,+CACA;;0DAEA;sCACA;AACA;oCACA;kBACA;oBACA;0DACA;qCACA;sCACA,AACA;;+BACA;AACA,AACA;AAbA;AAcA,AACA,8CACA;;0DAEA;sCACA;AACA;oCACA;kBACA;oBACA;0DACA;2BACA;qCACA;eACA,AACA;;eACA;AACA,AACA;AAdA;AAeA;;AACA,4CACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;oFACA;AACA,AACA,AACA,AACA;;;;UACA;AACA,AACA,AACA,AACA;;;;UACA;;gBAEA;gBACA,AACA;AAHA;;cAKA;iBACA;mBACA;kBACA,AACA;AALA;uBAMA,AACA;;;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;8CACA;mDACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;+CACA;6BACA;2CACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;kDACA;iCACA,AACA;;+DACA,AACA;;0CACA;2EACA;AACA,AACA;;oHACA;wCACA;AACA,AACA;;8CACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;wDACA;sBACA;2DACA;4CACA;gCACA;sEACA;6FACA;mCACA;AACA;mBACA;AACA,AACA;;oDACA;6CACA;0CACA;wEACA;4EACA;uBACA;AACA,AACA;;iBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;0DACA;iCACA,AACA;;mDACA;uDACA;wDACA;4DACA;gFACA,AACA;;;4BAEA;mEACA;kCACA;2BACA;qEACA;oCACA;4BACA,AACA;AARA;AASA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;iEACA;iCACA,AACA;;qFACA;mDACA;yFACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;8EACA;iCACA,AACA;;qFACA;wCACA;mDACA;iHACA;mBACA;AACA;qDACA;mDACA,AACA;;6EACA;mBACA;AACA,AACA;;4EACA;mDACA;gEACA;8BACA;AACA,AACA;;gHACA;AACA;AACA;wCACA;AACA,AACA;;iBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;yDACA;iCACA,AACA;;uCACA;6BACA;qDACA;wDACA;yDACA;AACA;yCACA;6CACA,AACA;;uDACA;uCACA;0DACA;4DACA;AACA,AACA;;;2FAEA;8FACA;0DACA;4DACA,AACA;AALA;AAMA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;sCACA;iCACA,AACA;;6BACA;;qFAEA;wFACA;+FACA;iGACA,AACA;AALA;AAMA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;mFACA;iCACA;6DACA,AACA;;6BACA;+DACA,AACA;;4FACA;6CACA,AACA;;6DACA;+DACA;6DACA;qCACA;sCACA;AACA;0DACA;0DACA,AACA;;8BACA;6DACA;+DACA;kEACA;gEACA;iEACA;AACA,AACA;;;oDAEA;0DACA;sDACA;wDACA,AACA;AALA;AAMA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2DACA;oDACA;yBACA;gEACA;AACA,AACA;;sCACA,AACA;;yCACA;2DACA;2BACA;AACA,AACA;;yCACA;6DACA;2BACA;AACA,AACA;;yBACA;2BACA;iBACA;2BACA;AACA,AACA;;iBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mGACA;qCACA;uCACA,AACA;;AACA;iHACA;oHACA,AACA;;0CACA,AACA;;iFACA;4DACA,AACA;;4BACA;+DACA,AACA;;2DACA;;qIAEA;sIACA,AACA,AACA;AAJA;;gJAKA,mIACA,4HACA,+HACA,mBACA,AACA;;0LACA,6KACA,oKACA,uKACA,mBACA,AACA;;2CACA;+DACA;sEACA;2HACA;iCACA;kIACA;iCACA;AACA;qBACA;+EACA;6HACA;iCACA;oIACA;iCACA;AACA;AACA;AACA;AACA,AACA;;4BACA;iBACA;oDACA;AACA;iBACA;gEACA;AACA;iBACA;sDACA;AACA;iBACA;kEACA;AACA,AACA,AACA;;;4BACA;iBACA;8CACA;AACA;iBACA;yEACA;AACA;iBACA;+CACA;AACA;iBACA;0EACA;AACA;iBACA;+DACA;8FACA;qBACA;8FACA;AACA;AACA,AACA,AACA;;;uDACA;wDACA;8GACA,AACA;;iBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;yGACA;yFACA;;2DAEA,AACA;AAFA;AAGA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;+DACA;iCACA,AACA;;6CACA;0BACA;AACA;AACA,AACA;;8DACA,AACA;;gGACA;0BACA;AACA;AACA,AACA;;;iBAEA;oBACA;kBACA;mBACA,AACA,AACA;AANA;;0CAOA;yCACA;AACA;2CACA;AACA;AACA,AACA;;sDACA;gEACA,AACA;;iCACA;2DACA;+DACA;iBACA;+DACA;AACA;8BACA;oFACA,AACA;;4BACA;iBACA;wDACA;AACA;iBACA;qDACA;AACA;iBACA;uDACA;AACA;iBACA;sDACA;AACA,AACA,AACA;;;mCACA,AACA;;yCACA;AACA,AACA;AA3kBA,AACA;AA2kBA;;AACA,+EACA,AACA,kEACA,AACA;uBAEA;oBACA;iBACA;4BACA;iBACA;mBACA;uBACA;kCACA;6BACA;;cAEA;0BACA;iBACA,AACA;AAJA;mBAKA;qBACA;iBACA,AACA,AACA;AAnBA,uSAoBA,kNACA;kBACA;6BACA;;;;UACA;;;;;UACA;;;;;2BACA,AACA;;uCACA;kBACA;oDACA,sBACA;oBAEA,AACA;AAFA;wDAGA,oDACA,8CACA;gDACA,sDACA,gDACA;+CACA,gFACA;8DACA,qCACA,mDACA;yDACA,8EACA;mDACA,+CACA,yCACA,AACA;;wDACA,6CACA,uCACA,AACA;;2DACA;+DACA;6BACA;eACA;0EACA;2EACA;+DACA;AACA;AACA;8CACA;2BACA;oCACA,AACA;;+BACA;gCACA;AACA;AACA;AACA;AACA,AACA;;yBACA;0BACA;AACA,AACA;;2DACA;0BACA;AACA,AACA;;AACA;kCACA,AACA;;;sBAEA;uBACA;0BACA,AACA,AACA;AALA;;AAMA;0DACA;0CACA,AACA;;uCACA;qCACA;AACA,AACA;;8BACA;uCACA;sDACA;+CACA;AACA;AACA,AACA;;gDACA,AACA;;+BACA;AACA;iCACA;qCACA;mCACA;oDACA;yCACA;4BACA;qBACA;AACA,AACA;;yCACA;+BACA;AACA,AACA;;wEACA,AACA;;kDACA;AACA;eACA;oDACA;wEACA;mBACA;AACA;AACA,AACA;;AACA;sDACA;gDACA;AACA,AACA;;+BACA,AACA;;mCACA;AACA;gBACA,AACA;;0BACA;wCACA;eACA;yBACA;AACA,AACA;;2CACA;sCACA;qCACA;wCACA;gCACA;AACA;AACA;AACA,AACA;;iBACA;kCACA;iCACA;8BACA;yCACA;AACA;iDACA,AACA;;AACA;wCACA;2BACA;AACA;AACA;AACA,AACA;;sCACA;mEACA;AACA,AACA;;0CACA;8BACA;oEACA;AACA,AACA;;oBACA;+DACA;8CACA;yBACA;oEACA;2DACA;iBACA;gDACA;wBACA;AACA,AACA;;4EACA;AACA;AACA,AACA;;sBACA,4EACA,4DACA;AACA,AACA;;+CACA;wIACA;AACA,AACA;;AACA;2CACA;sBACA;oFACA;qBACA;8BACA,AACA;;kCACA;0BACA;sBACA;AACA;AACA,AACA;;sCACA;8BACA;cACA;0BACA;sBACA;AACA;AACA,AACA;;2CACA;YACA,AACA;;8BACA;0BACA;2CACA;mCACA;0EACA;iBACA;iEACA;mCACA;AACA;AACA;6BACA;AACA,AACA;;oCACA;YACA,AACA;;wBACA;oBACA;AACA,AACA;;8DACA;6BACA;iGACA;4BACA;AACA;AACA,AACA;;+CACA;mBACA;gCACA;iCACA;AACA,AACA;;+BACA;kCACA;AACA,AACA;;oCACA,AACA;;oGACA;0EACA;0FACA;oCACA;8CACA;AACA;qBACA;iCACA;AACA,AACA;;oDACA;kBACA;iBACA;4BACA;AACA;eACA;iCACA;8BACA;yCACA;AACA;iDACA;AACA;AACA,AACA;;mCACA;;;AACA;AACA,AACA;;0CACA;kEACA;yBACA;2DACA;0EACA;8BACA;qBACA;AACA;AACA;AACA;eACA;AACA,AACA;;oCACA;yCACA;AACA;+BACA;AACA,AACA;;wBACA;iBACA;AACA,AACA;;4DACA;iBACA;AACA,AACA;;yCACA;qCACA;4BACA;gEACA;AACA;AACA,AACA;;+EACA;AACA,AACA;;gDACA;kCACA,AACA;;0CACA;iBACA;AACA,AACA;;qCACA;2BACA;AACA,AACA;;oBACA;iBACA;AACA,AACA;;oDACA;iBACA;AACA,AACA;;qCACA;wCACA;AACA,AACA;;eACA;AACA,AACA;;wCACA;+CACA;AACA;AACA,AACA;;2BACA;0DACA;AACA;AACA;uFACA;yEACA;oCACA;4BACA;AACA;AACA;AACA,AACA;;qCACA;+CACA;cACA;cACA;oCACA;4BACA;AACA;sBACA;uDACA;cACA;cACA;oCACA;4BACA;AACA;AACA;AACA,AACA;;+BACA;2BACA;kEACA;gGACA;oFACA;0EACA;0DACA;kCACA;AACA;AACA;AACA,AACA;;oDACA;mCACA;AACA;AACA,AACA,oDACA;;6BAEA;oBACA;;6BAEA;kBACA;uBACA;qBACA;qBACA,AACA;AANA;0DAOA;8BACA;2BACA,AACA;;oBACA;AACA,AACA;AAhBA;AAiBA,AACA,uDACA;;kBAEA;oBACA;0DACA;sCACA;AACA,AACA;AANA;AAOA;;AACA;AACA,AACA,AACA,AACA;;;4DACA;+CACA;YACA,AACA;;2BACA;qBACA;gDACA;8BACA;4BACA;AACA,AACA;;gDACA;iCACA;aACA;AACA;AACA;AACA;;AACA,6CACA,AACA;yBAEA;iBACA,AACA,AACA;AAJA,kGAKA;sBACA,AACA;;oDACA;wBACA;gCACA;AACA,AACA;;sDACA;6BACA;AACA,AACA;;oBACA;AACA,AACA;;qDACA;yCACA;iCACA;wCACA;sBACA;AACA;AACA,AACA;;sDACA;AACA;AACA;;;AACA,AACA;;;;AACA,AACA;;;;AACA,AACA;;sCACA;2EACA;AACA;AACA,AACA;;wCACA;gDACA,8EACA;AACA;AACA,AACA;;kBACA;2BACA,AACA;;iCACA;oBACA;AACA;AACA,AACA;;0CACA;wBACA;AACA;AACA;AACA,AACA;;wCACA;sCACA;yFACA;mFACA;8BACA;cACA;oBACA;AACA;gKACA;cACA;cACA;2CACA;AACA;AACA;AACA,AACA,uVACA;iBACA;;UACA;AACA;6CACA;qCACA;UACA;8BACA;8EACA;yBACA;qBACA;0BACA;2BACA;gCACA,AACA;;wBACA,AACA;;8BACA;2BACA;oCACA;gCACA,AACA;;oDACA;6BACA;AACA;AACA,AACA;;wDACA;2DACA;0BACA;uCACA;AACA;AACA,AACA;;gDACA;iDACA,AACA;;uCACA;qBACA;AACA,AACA;;2CACA;+BACA;gEACA;8BACA;AACA;AACA;AACA,AACA;;oCACA;0DACA;2CACA;iCACA;AACA,AACA;;qBACA;AACA,AACA;;AACA;gCACA;qBACA;AACA,AACA;;2CACA;oBACA;AACA,AACA;;uCACA;6CACA;AACA,AACA;;qCACA;eACA;AACA,AACA;;0CACA;eACA;AACA,AACA;;oDACA;wCACA;gDACA,sCACA,AACA;;gBACA;;AACA;0DACA;sCACA;qBACA;6EACA,SACA,uCACA;AACA;AACA;AACA;;AACA;0DACA;qDACA;qBACA;8DACA,8BACA;AACA;AACA;AACA,AACA;;mCACA;AACA,AACA;;6CACA;oBACA;AACA,AACA;;6CACA;gCACA;gCACA;AACA;AACA,AACA;;wDACA;2CACA;2FACA;cACA;cACA;cACA;+BACA,AACA;;;2BAEA;wCACA,AACA,AACA;AAJA;;kDAKA;2BACA;kCACA;wBACA;iBACA;uBACA;0DACA,AACA;;oFACA;gDACA;AACA,AACA;;4CACA,6DACA;AACA,AACA;;AACA;AACA;6BACA;gDACA,AACA;;mDACA,AACA;;6BACA;wDACA;mBACA;iCACA,6EACA;AACA;AACA,AACA;;gCACA;AACA,AACA;;kDACA;iFACA,AACA;;sCACA;kIACA;iEACA;8CACA;AACA;AACA;AACA,AACA;;oBACA;4CACA;sFACA;oCACA;oFACA;4BACA;8CACA;oCACA;2DACA;AACA;AACA;iBACA;uDACA;AACA,AACA;;gBACA;yCACA;eACA;0CACA;4CACA;+BACA;4BACA;AACA;wCACA;0CACA;gCACA;AACA,AACA;;gCACA;AACA,AACA;;2CACA;4BACA;AACA;AACA;AACA,AACA,6CACA;;oBAEA;iEACA;uBACA;AACA,AACA;AALA;AAMA,AACA,gDACA;;kBAEA;iBACA;iEACA;wEACA;AACA;AACA,AACA;;2BACA,AACA;;6BACA;sBACA;mDACA;AACA,AACA;;0CACA;wCACA;AACA;AACA,AACA;AAnBA;AAoBA,AACA,kDACA;;iBAEA;iEACA;6BACA;AACA;AACA,AACA;;2BACA,AACA;;uCACA,AACA;;8DACA;kBACA,AACA;;kEACA;uCACA;6BACA;AACA;AACA;AACA,AACA;;gCACA,AACA;;AACA;iEACA;8DACA;4CACA;AACA,AACA;;4CACA;oCACA;AACA;AACA,AACA;AAjCA;AAkCA;;AACA;AACA,AACA,AACA,AACA,AACA;;;;yCACA;;wCAEA;sBACA,AACA;;;0CAEA;;qBAEA;uBACA,AACA;AAHA;AAIA;mCACA;qDACA;0CACA;+BACA;AACA;AACA;AACA;kCACA;yBACA;qDACA;mCACA;AACA;qBACA;AACA;gCACA;0CACA;AACA;yCACA;yBACA;qDACA;0CACA;wBACA;AACA;AACA;AACA;0CACA;AACA;4CACA;2BACA;AACA;sCACA;2BACA;AACA,AACA;AAxCA;AAyCA,AACA;AA9CA;;AA+CA;AACA,AACA,AACA,AACA;;;uCACA;;wCAEA;oBACA,AACA;;;wCAEA;yDACA;;uBAEA;6BACA,AACA;AAHA;AAIA;AACA;mCACA;yBACA;AACA;yCACA;2BACA;AACA;kCACA;iCACA;AACA;0CACA;6BACA;2BACA;AACA,AACA;;4BACA;AACA;gDACA;+BACA,AACA;;2BACA;AACA;AACA,AACA;;uCACA,AACA;;8BACA;mCACA;AACA,AACA;;kCACA;2BACA;AACA;AACA,AACA;AA1CA;AA2CA,AACA;AAhDA;AAiDA;;AACA,AACA,AACA,AACA,AACA;;;;yCACA;oBACA;sBACA,AACA;;6CACA;wBACA;AACA,AACA;;+DACA;4EACA;;sEAEA;0BACA;kEACA;AACA,AACA;;2BACA,AACA;;yDACA;uEACA;0DACA;kDACA;uDACA;qBACA;yCACA;AACA;AACA,AACA;;6DACA;+BACA;gCACA;gEACA;2CACA;AACA,AACA;;qBACA;AACA;AACA,AACA;AA5BA;AA6BA;AACA;;AACA,AACA,AACA,AACA;;;6DACA,8DACA;;kBAEA;oDACA;mCACA;iBACA;AACA,AACA,AACA;AAPA;;6CAQA;gCACA;2CACA,AACA;;4EACA;uBACA;8CACA;qEACA;mBACA;AACA;AACA;AACA;AACA;AACA;AACA,AACA,4EACA,gEACA;;;iBAGA,AACA;AAFA;kBAGA;oBACA;4DACA;uCACA;AACA;mDACA;mDACA;6BACA,AACA;;uCACA;oCACA;qCACA,qCACA,8CACA;kBACA;kBACA;6CACA;AACA;AACA,AACA;;AACA;oCACA,AACA;;AACA;AACA;AACA;8BACA,AACA;;AACA;uCACA;AACA;yCACA;gCACA;AACA,AACA;;uDACA;mCACA,AACA;;oCACA;;gCAEA;AADA,iBAEA,AACA;;gFACA;2BACA;;qCAEA;AADA,gCAEA;AACA;AACA,AACA,AACA;;uDACA;AACA;sCACA;yBACA;gDACA;AACA,AACA;;AACA,AACA,AACA,AACA;;;;oGACA;kEACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;wCACA;qCACA;uBACA;6BACA;AACA;AACA;AACA;AACA;AACA,AACA;AAtFA;AAuFA,AACA,wDACA;;oDAEA;qCACA;qCACA;AACA;AACA,AACA;AANA;AAOA,AACA,wEACA;;2EAEA;qDACA;oBACA;kCACA;AACA;AACA,AACA;AAPA;AAQA,AACA,8DACA,2EACA,8HACA;+BACA,AACA;;yBACA;uCACA;qCACA;;2BAEA,AACA;AAFA;0BAGA;mCACA;uCACA,AACA;;AACA;6BACA,wEACA,mJACA;UACA;8BACA,AACA;;AACA;gCACA;wBACA;sEACA;iDACA;AACA;AACA,AACA;;kCACA;0BACA,uBACA,yCACA;AACA,AACA;;+BACA;gCACA;mCACA;gDACA;2DACA;+BACA;AACA;AACA,AACA;;AACA;AACA;uEACA;6BACA;AACA;eACA;AACA,AACA;;mEACA;2BACA;gCACA;AACA;AACA,AACA;;uEACA;2DACA;0CACA,AACA;;AACA;6BACA;+CACA;oCACA;0FACA;AACA,AACA;;uFACA;0DACA;+CACA;gDACA;sDACA;qHACA;gDACA;mFACA;mBACA;kDACA;AACA;+BACA;AACA;+BACA;uBACA;AACA,AACA;;AACA;kEACA;gCACA;0CACA;0BACA;AACA;AACA,AACA;;AACA;kDACA;YACA,AACA;;wCACA;4CACA;+EACA;AACA;AACA,AACA;;qCACA;AACA;qDACA;iCACA;uEACA;+BACA;AACA;0BACA;0BACA;AACA;AACA,AACA;;sEACA;YACA;2BACA;+CACA;8BACA;+BACA;yCACA;AACA,AACA;;sCACA;0BACA;AACA;AACA;wDACA,AACA;;AACA;AACA;AACA;0CACA,AACA;;kCACA;mCACA;AACA;AACA;gCACA,AACA;;iDACA;sBACA;AACA;AACA,AACA;;kBACA;gCACA;6BACA;AACA;AACA,AACA;;gBACA;AACA;AACA,AACA;;8BACA,AACA;;6CACA;iCACA;AACA,AACA;;oCACA;sCACA;iBACA;AACA,AACA;;kCACA;mBACA;sBACA;;AACA;0CACA;sBACA;gDACA;mDACA;AACA;AACA;AACA;AACA;;AACA;4DACA;mCACA;kCACA;2GACA;yEACA;AACA;uBACA;gEACA;0EACA;AACA;AACA,AACA;;kCACA;sBACA;sBACA;AACA,AACA;;AACA;AACA,AACA;;AACA;AACA,AACA;;yDACA;uCACA;kDACA,AACA;;6BACA,AACA;;AACA;AACA;+CACA,AACA;;;0BAEA;gCACA;gCACA;4BACA;0BACA;0BACA;6BACA;gCACA;2BACA;0BACA,AACA,AACA;AAZA;;0CAaA,AACA;;oCACA;gCACA,AACA;;qCACA;0BACA;AACA,AACA;;sDACA;0CACA;uCACA;gCACA;0CACA;;qBAEA;wBACA;yCACA;8BACA,AACA;AALA;mCAMA;yCACA;AACA,AACA;;+BACA;kDACA;AACA;kCACA;wCACA;0DACA;6DACA;oFACA;2EACA;AACA;AACA;AACA,AACA;;YACA;6BACA;sEACA;oCACA;;qBAEA;8BACA;mBACA;qBACA,AACA;AALA;eAMA;0BACA;AACA,AACA;;AACA;2HACA;2CACA;;mBAEA;gCACA;oCACA;kBACA;mCACA;oCACA;wBACA;mBACA;qBACA;sBACA;uBACA;uCACA;4BACA;AAbA,kBAcA;+BACA;sCACA;AACA,AACA;;6BACA;+CACA;AACA,AACA;;iCACA;yBACA;AACA;AACA;wCACA;AACA;4DACA,AACA;;+CACA;gDACA,AACA;;wBACA,AACA;;qCACA;+CACA;AACA;AACA,AACA;;qDACA;8EACA;6FACA,AACA;;kCACA;0DACA;AACA,AACA;;+EACA;gDACA;AACA,AACA;;oCACA,AACA;;mCACA;kEACA,AACA;;0EACA;kCACA;AACA;AACA;AACA;AACA,AACA;;sEACA;kGACA;AACA,AACA;;0CACA;gCACA,kEACA,0BACA;4FACA;iDACA;4DACA,AACA;;+BACA;qCACA;qCACA;AACA;AACA,AACA;AACA,AACA;;2DACA;4CACA;AACA;wEACA;mEACA;6CACA;6DACA;iBACA;AACA,AACA;;gBACA;AACA,AACA;;6DACA;4CACA;AACA;yEACA;mEACA;4CACA;6DACA;iBACA;AACA;gBACA;AACA,AACA;;iDACA;4BACA;+DACA;0BACA;AACA;AACA,AACA;;uCACA;6BACA;AACA,AACA;;2DACA;4CACA;gFACA;yBACA;2CACA;AACA;AACA,AACA;;+DACA;6BACA;kBACA;iBACA;AACA;eACA;AACA,AACA;;8DACA;6BACA;gCACA;iBACA;AACA;eACA;AACA,AACA;;+DACA;gCACA;6CACA;+CACA;iEACA;AACA;AACA;eACA;AACA,AACA;;4DACA;6BACA;yDACA;AACA;eACA;AACA,AACA;;2DACA;6BACA;uEACA;AACA;eACA;AACA,AACA;;gEACA;yBACA;6CACA;+CACA;0DACA;uFAEA;+BACA;cAFA,GAGA;AACA;AACA;AACA,AACA;;aACA;AACA,AACA,0CACA;;;qBAGA;0BACA;oBACA,AACA;AAJA;kGAKA,gHACA;uBACA,AACA;;+CACA;sDACA,wDACA,+CACA;AACA,AACA;;6BACA;+CACA;mBACA;AACA,AACA;;gDACA;yCACA;yCACA;yCACA;yCACA,AACA;;AACA;;0CAEA;0CACA;0CACA;4CACA;4CACA;wDACA;AACA;gDACA;0DACA;AACA,AACA,AACA;AAZA;;AAaA;sEACA;2DACA;uFACA,AACA;;AACA;gGACA;8BACA;AACA,AACA;;gBACA;wCACA;sGACA;mBACA;AACA,wIACA;AACA,AACA;;2CACA;qBACA;AACA,AACA;;AACA;AACA;AACA;AACA;gBACA;iDACA,yCACA,8DACA;wDACA,AACA;;6CACA;gDACA;kDACA,AACA;;qDACA;2DACA;sCACA;AACA;AACA,AACA;;;uBAEA;0BACA;gCACA;gCACA;wCACA;uCACA;uCACA;4CACA;6CACA;0CACA;gDACA;6CACA;8CACA;mCACA;0CACA;uCACA,AACA,AACA;AAlBA;;8BAmBA;;;+BACA,AACA;;0CACA;wDACA;8CACA;kCACA;kDACA;yDACA,AACA;;AACA;AACA;sGACA;gFACA;iDACA;mDACA;qDACA;;gDAEA;AADA,qBAEA;AACA,AACA;;+BACA,AACA;;8DACA;+BACA;AACA;AACA,AACA;;2CACA;2CACA;AACA,AACA;;8CACA;0CACA,AACA;;mFACA;6BACA;sCACA;qCACA;iDACA;uBACA;0CACA;AACA,AACA;;0DACA;gEACA;kCACA;+BACA;AACA,AACA;;6CACA;AACA;AACA;6CACA;yCACA;yCACA;sCACA;gDACA;+BACA;AACA;AACA,AACA;;mBACA;AACA,AACA;;iBACA;AACA,AACA,AACA,AACA;AA5KA;;aA6KA;AACA;;AACA;AACA,AACA,AACA,AACA,AACA;;;;uDACA;;sDAEA;wFACA;8DACA;2BACA,AACA;;qDACA;+BACA;0BACA,AACA;;8CACA;mBACA;AACA,AACA;;qCACA;8FACA;oDACA;yCACA;qBACA;AACA;mBACA;yCACA;AACA,AACA;;sEACA;wEACA;yCACA;qBACA;AACA;AACA;AACA,AACA;;iDACA;4FACA;6CACA;AACA,AACA;;oCACA;uEACA;AACA,AACA;;mDACA;qBACA;kBACA;AACA,AACA;;sDACA;+FACA;qCACA;2BACA;AACA;6CACA;+BACA;AACA;AACA,AACA;;0CACA;6DACA;AACA,AACA;;0CACA;mCACA;AACA,AACA;;sCACA;0CACA;AACA,AACA;;wCACA;iEACA,AACA;;iDACA;uCACA;mBACA;+BACA;AACA;AACA,AACA;;6CACA;0CACA;6BACA;AACA;AACA;AACA,AACA;AApFA;AAqFA;;AACA,iEACA,AACA,oKACA;2GACA,AACA;;qCACA;AACA,AACA;oBAEA;oBACA;gBACA;aACA,AACA,AACA;AANA,0EAOA;;;sBAGA;wBACA;oBACA;sBACA,AACA;AALA;8BAMA;kBACA;oBACA;sBACA;0DACA;sCACA;AACA;0DACA;2BACA;;kCACA,AACA;;;mBACA,CACA;AACA,AACA;;2CACA;AACA,AACA;AAxBA;AAyBA;;AACA,sEACA,qMACA;iBACA;AACA;mHACA;gHACA;qIACA;uJACA;;;kBACA;wIACA;2IACA,AACA;;qCACA,AACA;;0BACA;2FACA;oCACA;eACA;AACA;AACA,AACA;;AACA;gDACA;;kBAEA;gBACA;kBACA,AACA;AAJA;AAKA,AACA;;iDACA;oBACA,AACA;;AACA;;sBACA;iEACA,AACA;;AACA;wBACA;sBACA;AACA;wEACA;4CACA,AACA;;AACA;sCACA;wBACA;8CACA;AACA;iBACA;AACA;2EACA,AACA;;AACA;wDACA;AACA;AACA,AACA;;AACA;kEACA;oEACA;qBACA;AACA,AACA;;AACA;4FACA;6BACA;;AACA;mEACA;4BACA;AACA;qCACA;;AACA;sDACA;8BACA;AACA;AACA;mDACA;4BACA;AACA;AACA,AACA;;oCACA;;AACA;6DACA;yBACA;AACA;qCACA;;AACA;oFACA;2BACA;AACA;AACA;kEACA;yBACA;AACA;AACA;AACA;eACA;AACA,AACA;;gCACA;gCACA;AACA;iEACA;sDACA;AACA;AACA;AACA,AACA;oBAEA;qBACA;2BACA;sBACA;iBACA;oBACA;gBACA;gBACA;cACA;qBACA,AACA,AACA;AAZA,2GAaA;;;sBAGA;qBACA;wBACA;oBACA;oBACA;sBACA,AACA;AAPA;mCAQA;kBACA;oBACA;sBACA;0DACA;sCACA;AACA;0DACA;2BACA;;kCACA,AACA;;;mBACA,CACA;AACA,AACA;;2CACA;AACA,AACA;AA1BA;AA2BA;;AACA,AACA,AACA,AACA,AACA;;;;;AACA,qEACA;;AACA,AACA,AACA,AACA,AACA;;;;yCACA;AACA;;mBAEA;8BACA;mBACA;oBACA;yBACA;uBACA,AACA,AACA;AARA;;AASA;;sBAEA;iBACA;wBACA;iBACA;gBACA,AACA,AACA;AAPA;;AAQA;0BACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;sCACA;sCACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;wDACA;mCACA;AACA,AACA;;AACA,AACA,AACA;;;gCACA;qBACA;wBACA;2DACA;iDACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA;;;;wPACA;0CACA;8BACA,AACA;;+CACA;iCACA;AACA,AACA;;qCACA;8BACA;sCACA;sBACA;yBACA;qBACA;AACA;AACA;AACA,AACA;;8EACA;sEACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;wCACA;gFACA;mDACA;4CACA;AACA;;oBAEA;oBACA,AACA;AAHA;AAIA,AACA;;yCACA,AACA;;sCACA;oCACA;cACA,qCACA,0DACA,gBACA,gBACA,8EACA,QACA,wEACA,OACA,mCACA,yBACA,+BACA,MACA,AACA;;;qDAEA;2CACA,AACA;;uEACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oBACA;oGACA;2CACA;oEACA;yCACA;0CACA;mHACA;mFACA;gCACA;oBACA,AACA;;iEACA;AACA;;;AACA,AACA;;wCACA;2DACA;uGACA;wHACA;qGACA;wFACA;wEACA,AACA;;kEACA;qEACA;0DACA;AACA,AACA;;kGACA;2EACA;mFACA;AACA,AACA;;+DACA;0HACA;0GACA;wCACA;sCACA;AACA;4CACA;4BACA,AACA;;AACA;AACA;AACA;oEACA;oEACA;4CACA;yEACA;oEACA;AACA;iDACA,AACA;;wCACA;0BACA;AACA;AACA,AACA;;AACA;oCACA,AACA;;AACA;AACA;iCACA,AACA;;6CACA;uCACA;AACA;yBACA;AACA;AACA;AACA,AACA;;AACA;2CACA;8EACA;AACA;AACA,AACA;;AACA;AACA,AACA;;0CACA;AACA;AACA;sCACA;uEACA;AACA;yBACA;AACA;AACA;AACA,AACA;;2CACA;AACA,AACA;;+CACA;sCACA;4EACA;AACA;yBACA;AACA;AACA;AACA,AACA;;AACA;gCACA;AACA;AACA,AACA;;AACA;wCACA;mCACA;AACA,AACA;;AACA,AACA;;AACA;iDACA;qCACA;iCACA;AACA;AACA;AACA,AACA;;sCACA;mCACA;oCACA;kCACA;AACA,AACA;;uCACA;oCACA;sCACA;AACA;AACA,AACA;;AACA;gCACA;gCACA;AACA;AACA,AACA;;AACA;iDACA;iCACA;uCACA;mCACA;AACA;AACA;AACA;AACA;6CACA;gDACA;2EACA;AACA;6BACA;AACA;AACA;AACA;AACA;AACA,AACA;;sCACA;mCACA;oCACA;kCACA;AACA,AACA;;yCACA;oCACA;wCACA;AACA;AACA,AACA;;yCACA;AACA;+BACA;AACA;AACA,AACA;;+CACA;iFACA;sCACA;oDACA;2BACA;oCACA;AACA;AACA,AACA;;;2BAEA,AACA,AACA;AAHA;;AAIA;AACA,AACA;;yCACA;AACA;AACA;AACA,AACA;;+BACA;4BACA,AACA;;8BACA;2CACA;sCACA;AACA;AACA,AACA;;wCACA,AACA;;0CACA;uCACA;yCACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;0CACA;iDACA;oCACA;mDACA;yBACA;4CACA;AACA,AACA;;sDACA;6HACA;mEACA;+FACA,AACA;;qEACA;+EACA;uEACA;sFACA;AACA,AACA;;8CACA;6EACA;8CACA;AACA;AACA,AACA;;iDACA;iCACA;AACA,AACA;;AACA,AACA,AACA;;;0DACA;2BACA;AACA;AACA,AACA;;6CACA;AACA;AACA;AACA,AACA;;iCACA;2DACA;4DACA;AACA;AACA;AACA;AACA,AACA;;yCACA;qCACA,AACA;;oCACA;8BACA,+CACA;wCACA;kDACA;AACA;AACA;AACA,AACA,AACA;;8BACA,2CACA;gDACA;8CACA;oEACA;gDACA;yDACA;AACA;AACA;AACA;AACA;AACA,AACA;yBACA;8BACA,2CACA;wCACA;kDACA;AACA;6BACA;AACA;AACA;AACA,AACA;AACA,AACA;;4BACA,qDACA;oCACA;wCACA;AACA;AACA;AACA,AACA,AACA;;4BACA,yDACA;4DACA;wCACA;AACA;AACA;AACA,AACA;AACA,AACA;;+CACA;wCACA;mEACA;AACA;AACA;uCACA;AACA;AACA,AACA;;AACA;gDACA;+DACA;AACA;AACA;AACA;wFACA;AACA;AACA;AACA,AACA;;uEACA;2DACA;oDACA;2CACA;2BACA;2CACA;2CACA;AACA;AACA;2DACA;oDACA;6CACA;2BACA;2CACA;AACA;AACA;AACA,AACA;;wCACA;;qCACA;uDACA;AACA,AACA;;6CACA;4DACA;wCACA;4CACA;AACA;;4BAEA;4BACA,AACA;AAHA;yBAIA;2CACA;AACA,AACA;;gDACA;kEACA;sDACA;4CACA;8CACA;iEACA;4CACA;0CACA;4CACA;uDACA;AACA,AACA;;0DACA;4CACA;AACA;AACA;AACA;AACA;AACA;AACA,AACA;;AACA,AACA;;2DACA;yFACA,AACA;;oBACA;yCACA;0EACA;oCACA;uBACA;sDACA;AACA,AACA;;sFACA,AACA;;AACA;kEACA;AACA;AACA;4BACA;AACA;AACA;AACA,AACA;AA3bA;AA4bA;AACA;AACA;;AACA,AACA;oGAEA,sDACA;;gDAEA;4CACA,AACA;;8BACA;cACA;cACA;cACA,AACA;;+EACA;iCACA;8BACA;gCACA;AACA,AACA;;8BACA;2BACA;6BACA;AACA,AACA;;gCACA;8DACA;kCACA;AACA;gCACA;+BACA;AACA;AACA,AACA;;mGACA;iCACA,AACA;;qBACA;AACA;AACA;mEACA;;;AACA;yCACA;+BACA,AACA;;0EACA;AACA;wCACA;AACA,AACA;;+BACA;iCACA,AACA;;4DACA;6BACA;oDACA;AACA;sDACA;AACA;AACA;sDACA;mBACA;AACA;AACA;AACA,AACA;;gCACA;AACA,AACA;AA/DA;AAgEA,KAnEA;;AAoEA,AACA,AACA,AACA,AACA,AACA;;;;;6EACA;;kBAEA;mDACA;AACA;AACA;AACA;+BACA;AACA;AACA;6DACA;sCACA;AACA,AACA;;gCACA;mCACA;AACA,AACA;;+BACA;mCACA;AACA;AACA,AACA;AArBA;AAsBA,AACA,iDACA;;kBAEA;0BACA;qBACA,AACA;AAJA;AAKA,AACA,sEACA;kDACA;AACA,AACA,yDACA;;kBAEA;+CACA;qBACA,AACA;AAJA;AAKA,AACA,8EACA;;uBAEA,AACA;AAFA;AAGA,AACA,qDACA;;kBAEA;6BACA;qBACA,AACA;AAJA;AAKA,AACA,0EACA;;uBAEA,AACA;AAFA;AAGA;;AACA,AACA,AACA,AACA,AACA;;;;;AACA,4CACA,AACA,0EACA;;kBAEA;8DACA;qBACA,AACA;AAJA;AAKA,AACA,8EACA;;uBAEA,AACA;AAFA;AAGA,AACA,qDACA;;kBAEA;4CACA;qBACA,AACA;AAJA;AAKA,AACA,0EACA;;uBAEA,AACA;AAFA;AAGA,AACA,iDACA;;kBAEA;yCACA;qBACA,AACA;AAJA;AAKA,AACA,sEACA;kDACA;AACA;;AACA,+CACA,AACA;eAEA;WACA,AACA,AACA;AAJA,+HAKA;iBACA;8GACA,AACA;;kBACA;mBACA,AACA;;mDACA;sBACA;sCACA;AACA,AACA;;uBACA,AACA;;kBACA;4EACA,AACA;;6CACA;cACA;AACA,AACA;;gDACA;uEACA;+DACA;+BACA;aACA,AACA;;qCACA;6CACA;AACA;AACA,AACA;;wCACA;oBACA;yBACA;AACA;AACA,AACA;;sCACA;iDACA;yCACA;cACA;AACA;AACA,AACA;;AACA;oDACA;yCACA;oBACA;cACA;AACA;AACA,AACA;;iCACA;qFACA;AACA;AACA,AACA,6CACA;;iBAEA;oBACA;oBACA;iBACA;;oBAEA,AACA;AAFA;qBAGA,AACA;AATA;AAUA,AACA,uCACA;;iBAEA;oBACA;iBACA;;iBAEA;gBACA,AACA;AAHA;qBAIA;iEACA;8CACA;AACA,AACA;AAZA;AAaA,AACA,+CACA;;iBAEA;oBACA;oBACA;;iBAEA;oBACA;gBACA,AACA;AAJA;qBAKA;iEACA;4FACA;AACA,AACA;AAbA;AAcA;;AACA,0CACA,AACA;WAEA;eACA;gBACA;mBACA;8CACA,AACA,AACA;AAPA,yHAQA;iDACA;iBACA,AACA;;0CACA;sBACA;mCACA,AACA;;sDACA;+DACA;+BACA;AACA,AACA;;iBACA;AACA,AACA;;+GACA;kHACA;oDACA,uEACA;8GACA;uEACA,6BACA,AACA;;oDACA,4CACA,0GACA;iDACA;AACA,AACA;;oDACA;uDACA;uIACA;AACA;eACA;AACA,AACA;;uCACA;yCACA;yBACA;AACA,AACA;;2BACA;AACA,AACA;;qCACA;4EACA;wFACA;oCACA;sBACA;AACA;AACA,AACA;;sCACA;8BACA;yBACA;AACA;gCACA;AACA,AACA;;iCACA;mCACA;eACA;AACA,AACA;;wCACA;6CACA;cACA;cACA;kFACA;AACA;AACA,AACA;;gCACA;mCACA;oDACA;AACA;AACA,AACA,2CACA;;+BAEA;kBACA;;oBAEA;mBACA;mBACA,AACA;AAJA;oBAKA;qBACA;0DACA;;kCACA;0BACA;AACA,AACA;AAdA;AAeA;;AACA,wCACA,AACA,mEACA;iBACA;UACA;kBACA,AACA;;0CACA;wBACA;2CACA;2CACA;gCACA;;sBAEA;8BACA,AACA;AAHA;iDAIA;AACA;AACA;0CACA;AACA,AACA;;mCACA;wBACA;;sBAEA,AACA;AAFA;kCAGA;mCACA;gCACA;+DACA;0BACA;uBACA;AACA;AACA;AACA,AACA;;yCACA;;eAEA;qBACA,AACA;AAHA;yCAIA;mCACA;mBACA;AACA,AACA;;mCACA;oBACA;AACA,AACA;;iBACA;AACA,AACA;;oGACA;gDACA;sBACA;AACA;AACA,AACA;;+CACA;YACA;mDACA;wCACA;oBACA;AACA;AACA;AACA,AACA;;oDACA;+DACA,sCACA;sBACA;AACA,AACA;;gCACA;AACA,AACA;;oDACA;wDACA;mCACA;AACA;AACA,AACA;;UACA;yCACA;oBACA;AACA,AACA;;mCACA;mDACA;4CACA;mBACA;AACA;AACA;AACA;AACA,AACA,2CACA;;oBAEA;iBACA;eACA;;kBAEA;gBACA,AACA;AAHA;oBAIA;sBACA;0DACA;sCACA;AACA;mDACA;mDACA,kDACA;oDACA,oDACA;AACA,AACA;AAnBA;AAoBA,AACA,wDACA;;iBAEA;iBACA;0DACA;sCACA;AACA;oBACA;;mBAEA;iBACA;mBACA;+BACA;AACA;sBACA,AACA;AAPA;0CAQA;AACA;AACA;sBACA;uEACA;2BACA;6BACA;yEACA;iCACA;AACA;AACA,AACA;;gDACA;2DACA;;;oBACA;mBACA;4BACA;AACA;AACA,AACA;;kDACA;4BACA;AACA,AACA;;wCACA;iCACA;kBACA;+DACA;sDACA;0BACA;AACA;AACA;AACA,AACA;;uCACA;AACA;AACA,AACA;;4BACA;4CACA;iCACA;AACA,AACA;;AACA;AACA;gCACA;AACA,AACA;AA9DA;AA+DA,AACA,yDACA;;kBAEA;iBACA;wCACA;gFACA;yBACA;uBACA;yBACA;AACA;AACA;AACA,AACA;AAXA;AAYA,AACA,wDACA;;kBAEA;iBACA;+CACA;+DACA,AACA;;AACA;AACA;6DACA;sDACA;sCACA;AACA;qCACA;qBACA;2BACA;AACA;AACA;AACA;AACA,AACA,AACA;AApBA;;kCAqBA;oBACA,8BACA,wCACA,6CACA,uDACA,oDACA,yDACA,sDACA,AACA;AACA;AACA;;AACA,8CACA,AACA;gBAEA;kBACA;kBACA;oBACA;mBACA;iBACA;qBACA;kBACA;iBACA;oBACA;mBACA,AACA,AACA;AAbA,+MAcA;4CACA;yBACA;qBACA;;UACA;wJACA;kGACA,AACA;;+EACA;0BACA,AACA;;kDACA;sBACA;mCACA,AACA;;8DACA;qDACA;AACA,AACA;;qCACA;uCACA;uCACA,AACA;;iDACA;qDACA;qDACA,AACA;;2HACA,AACA;;wBACA;mEACA;AACA,AACA;;wHACA;uBACA;iEACA;AACA,AACA;;uIACA;4DACA;AACA,AACA;;sCACA;2BACA;sFACA;sBACA;AACA;AACA,AACA;;wCACA;6BACA;wFACA;wBACA;AACA;AACA,AACA;;UACA;+EACA;0BACA;sCACA;AACA,AACA;;UACA;+EACA;0BACA;sCACA;AACA,AACA;;qBACA;6BACA;wFACA;qBACA;AACA;AACA,AACA;;4CACA;kEACA;iDACA,+DACA;AACA,AACA;;4CACA;mEACA;iDACA,+DACA;AACA,AACA;;8CACA;uDACA;iDACA,+DACA;AACA,AACA;;8CACA;wDACA;iDACA,+DACA;AACA,AACA;;8CACA;uDACA;iDACA,+DACA;AACA,AACA;;8CACA;wDACA;iDACA,+DACA;AACA,AACA;;4CACA;sCACA;6DACA;AACA,AACA;;4DACA;AACA,AACA;;wCACA;6BACA;wFACA;wBACA;AACA;AACA,AACA;;4CACA;8BACA;yFACA;iCACA;AACA;AACA,AACA;;AACA;6CACA;+BACA;0FACA;kCACA,AACA;;uCACA;AACA;;0BACA;wEACA;gCACA;AACA;AACA;iBACA;AACA;AACA;AACA;AACA,AACA;;AACA;sCACA;4BACA;+DACA,2BACA;2CACA;iBACA;AACA,AACA;;iCACA;4BACA;oBACA;AACA;gDACA;4BACA;AACA;AACA;eACA;AACA,AACA;;wCACA;8BACA;8CACA;6CACA;iBACA;AACA;eACA;AACA,AACA;;wCACA;8BACA;wDACA;AACA,AACA;;iCACA;4BACA;iBACA;AACA,AACA;;2EACA,4BACA;AACA,AACA;;AACA;2FACA;sDACA;+BACA;kBACA;AACA;AACA;uDACA;qCACA;AACA,AACA;;2DACA;yBACA;8EACA;AACA;YACA;AACA,AACA;;6DACA;yBACA;gFACA;AACA;YACA;AACA,AACA;;6DACA;yBACA;gFACA;AACA;YACA;AACA;AACA,AACA;;AACA;yFACA;kDACA;yBACA;;AACA;gBACA;qBACA;qBACA;;AACA;gBACA;qBACA;qBACA;AACA;AACA;AACA,AACA;;oDACA;yBACA;;AACA;gBACA;qBACA;qBACA;;AACA;gBACA;qBACA;qBACA;AACA;AACA;AACA,AACA;;oDACA;yBACA;;AACA;gBACA;qBACA;qBACA;;AACA;gBACA;qBACA;qBACA;AACA;AACA;AACA;AACA,AACA;;sFACA;kCACA;uCACA;yCACA;yCACA;AACA;AACA,AACA;;2FACA;oCACA;2CACA;+CACA;kCACA;gCACA;mDACA;AACA;AACA,AACA;;iDACA;oCACA;kCACA;uDACA;AACA;AACA,AACA;;iDACA;oCACA;kCACA;uDACA;AACA;AACA;AACA,AACA;;yCACA;sBACA;wBACA,AACA;;sBACA,AACA;;sEACA;8BACA;gCACA;kDACA;yBACA;mBACA;sBACA;AACA;iBACA;uBACA;AACA;AACA,AACA;;+CACA;sBACA;8BACA;AACA;mEACA;uBACA;gEACA;sCACA;gDACA;AACA;AACA;AACA,AACA;;2CACA;wBACA;sBACA,AACA;;sBACA,AACA;;sEACA;8BACA;gCACA;kDACA;oCACA;mBACA;sBACA;AACA;iBACA;kCACA;AACA;AACA,AACA;;iDACA;sBACA;8BACA;AACA;8CACA;kCACA;oEACA;sCACA;0CACA;AACA;AACA;AACA,AACA;;2CACA;wBACA,AACA;;sBACA,AACA;;0CACA;gCACA;oBACA;iBACA;6CACA;AACA;AACA,AACA;;iDACA;8BACA;AACA;oEACA;sCACA;0CACA;AACA;AACA;AACA,AACA;AACA,AACA;;gCACA;+BACA,AACA;;yBACA;2CACA;qBACA;eACA;oBACA;uBACA;AACA,AACA;;gDACA;6CACA;kCACA;oCACA;iBACA;AACA;AACA;AACA;AACA;AACA,AACA;;AACA;uCACA;AACA;2CACA;uBACA;AACA,AACA;;2BACA;4BACA;+CACA;AACA,AACA;;8BACA;mDACA;AACA,AACA;;8BACA;mDACA;AACA,AACA;;yCACA;8BACA;gCACA;gCACA;AACA,AACA;;8CACA;sCACA;yBACA;2BACA;2BACA;sCACA;eACA;+BACA;iCACA;iCACA,AACA;;mCACA;mEACA;AACA,AACA;;sEACA;sCACA;iCACA;AACA;gFACA,AACA;;sCACA;iCACA;AACA;gFACA;AACA;AACA,AACA;;6CACA;wCACA;AACA;AACA,AACA;;6CACA;8CACA;AACA,AACA;;yCACA;qDACA;+BACA;4DACA;eACA;AACA,AACA;;8BACA;0DACA,sDACA,oGACA;AACA,AACA;;qDACA,6EACA,AACA;;0CACA;wCACA;+CACA;AACA;AACA,AACA;;0CACA;wCACA;gDACA;AACA;AACA,AACA;;4CACA;0CACA;4CACA;AACA;AACA,AACA;;4CACA;0CACA;6CACA;AACA;AACA,AACA;;4CACA;0CACA;+BACA;AACA;AACA,AACA;;4CACA;0CACA;gCACA;AACA;AACA,AACA;;0CACA;sBACA;oBACA,AACA;;wCACA;sEACA;6EACA;iBACA;0FACA;AACA;AACA;AACA,AACA;;gCACA;oBACA;AACA,AACA;;yCACA;gCACA;mBACA;AACA;AACA;AACA,AACA,0FACA;;mCAEA;kBACA;oBACA;sBACA;eACA;0DACA;0DACA;AACA;0DACA;;kCACA,AACA;;2BACA;0DACA;AACA;AACA,AACA;AAhBA;AAiBA;;AACA,uEACA;;AACA,AACA,AACA,AACA,AACA;;;;gEACA;AACA;6BACA;;qCAEA;kCACA;sBACA;sBACA,MACA,+HACA;AACA,AACA;;;4BAEA;iCACA;iDACA;sCACA,AACA;AALA;AAMA,AACA;AAhBA;AAiBA,AACA,0LACA,uKACA;qCACA;8BACA;qBACA;AACA,AACA;;AACA;gDACA;yCACA;oBACA;AACA,AACA;;uEACA;kDACA;AACA,AACA;;AACA;mEACA,AACA;;AACA;wEACA;sEACA;gCACA;AACA,AACA;;AACA;6EACA,AACA;;AACA;qHACA;uBACA;iDACA;AACA,AACA;;AACA;0CACA,AACA;;AACA;+HACA,AACA;;AACA;iFACA,AACA;;mGACA,AACA;;0GACA,AACA;;2BACA,mEACA,AACA;;0EACA,AACA;;AACA;6GACA,AACA;;AACA;yEACA,AACA;;qEACA,AACA;;AACA,AACA;;AACA;qCACA;qDACA;oEACA;2CACA,sGACA;kDACA;AACA,AACA;;yCACA;AACA,AACA;;AACA;qDACA,AACA;;UACA,AACA;;AACA;AACA;AACA;UACA,AACA;;AACA;AACA;gCACA;iEACA;cACA;AACA;4BACA,AACA;;AACA;gFACA;;6BAEA;yBACA;qBACA,AACA,AACA;AALA;;2BAMA;AACA;oBACA;0CACA;wCACA;sBACA;gCACA;0CACA;uCACA;0BACA;;sBAEA;iBACA;kBACA;0BACA;wBACA;qBACA;wBACA;mBACA,AACA;AATA;;sBAWA;4BACA;8BACA,AACA,AACA;AALA;;sCAMA;0CACA;AACA;+BACA;4BACA;AACA,AACA;;AACA;oCACA;;YAEA;iBACA;gBACA;gBACA;4BACA;eACA;kBACA;0BACA;kBACA,AACA;AAVA;AAWA;yDACA;2CACA;AACA,AACA;;8DACA;iDACA;AACA,AACA;;2CACA;sBACA;4BACA;AACA;AACA,AACA;;iDACA;wBACA;2BACA;sCACA;AACA;AACA,AACA;;kDACA;sCACA;AACA,AACA;;AACA;AACA;iDACA;uBACA;6BACA;eACA;2DACA;AACA;AACA,AACA;;4EACA;wDACA;yEACA;AACA,AACA;;eACA;AACA,AACA;;sEACA;mCACA;uCACA;yCACA;oFACA;AACA;AACA;0DACA;4CACA;+CACA;kDACA;+CACA;qCACA,AACA;;AACA;uDACA;wDACA;;iCAEA;wDACA;iCACA,AACA;AAJA;AAKA,AACA;;4BACA;AACA;AACA;AACA;AACA,AACA;;4CACA,AACA;;AACA;mGACA;sGACA;yCACA;oCACA;0GACA;uBACA;kCACA;AACA;AACA,AACA;;4BACA;kDACA;qCACA,mCACA,wFACA;6EACA;uBACA;oCACA;AACA;AACA;mBACA;AACA;+CACA;AACA;AACA;gCACA;2CACA;AACA;uBACA;AACA;yCACA;2CACA;AACA;AACA,AACA;;AACA;wBACA;8CACA;4CACA;AACA,AACA;;AACA;AACA;wDACA;AACA;kCACA;AACA;AACA,AACA;;+BACA;SACA,AACA;;AACA;6BACA,AACA;;mCACA;mCACA;iCACA;gBACA;AACA,AACA;;AACA;AACA,AACA;;AACA;AACA;qCACA;uFACA;2CACA;AACA,AACA;;AACA;oBACA,AACA;;AACA;UACA,AACA;;qFACA;8CACA;0BACA;WACA;AACA,AACA;;mEACA;4BACA;0BACA;AACA;AACA,AACA;;AACA,AACA;;6CACA;oCACA;AACA,AACA;;+CACA;AACA;qBACA;mBACA,AACA;;mBACA;wEACA;wDACA;sCACA;2CACA;wCACA,AACA;;;iBAEA;kBACA;yDACA;kBACA,AACA,AACA;AANA;;AAOA,AACA;;AACA;AACA;iEACA;;;gBACA;AACA;AACA,AACA;;AACA;2CACA;AACA;8EACA;AACA;AACA,AACA;;kEACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;yFACA;AACA;gBACA;AACA;AACA,AACA;;YACA;YACA;oBACA;;AACA;gBACA,AACA;;AACA;0BACA;AACA;;AACA;+FACA;kBACA;+EACA;iDACA;AACA;;AACA;oEACA;kBACA;+EACA;iDACA;AACA;AACA;8BACA;uCACA;sGACA;yCACA;kDACA;0GACA;uBACA;gDACA;AACA;AACA;AACA,AACA;;AACA,AACA;;2CACA;mBACA;sDACA;+BACA;kDACA;aACA;AACA;AACA,AACA;;0CACA;2FACA;qBACA;mCACA;uGACA;qCACA;8CACA;sCACA;mBACA;4CACA;AACA;AACA;AACA;sDACA;oBACA;mCACA;AACA;+CACA;4CACA;AACA;sBACA;AACA;mBACA;mBACA;AACA,AACA;;AACA;kEACA;AACA;AACA;wFACA;AACA;mCACA;0BACA;AACA;AACA;AACA,AACA;;4BACA,AACA;;gDACA;+BACA;sCACA;iBACA;AACA,AACA;;0BACA;iDACA;+CACA;AACA;AACA;gBACA,AACA;;sBACA;0BACA;AACA;AACA,AACA;;qCACA,AACA;;wBACA;sCACA;2BACA;+CACA;aACA;sBACA;AACA,AACA;;yDACA;oBACA;yBACA,AACA;;yFACA,AACA;;AACA;AACA;yDACA;qBACA,AACA;;+EACA;8BACA;AACA;wCACA;mBACA;8BACA;AACA;iBACA;2CACA;AACA;AACA;AACA,AACA;;0BACA;mBACA;AACA,AACA;;2BACA;AACA;+CACA;mBACA;AACA,AACA;;6CACA;iBACA;AACA,AACA;;yDACA;kCACA;uBACA,AACA;;AACA;AACA;AACA;2BACA;+CACA;AACA,AACA;;8BACA;4BACA;iDACA;AACA,AACA;;AACA;AACA;0CACA;sEACA;0CACA;kEACA,AACA;;8EACA;AACA;AACA;AACA,AACA,8CACA;;oBAEA;iDACA;kEACA;wCACA;AACA,AACA;AANA;AAOA,AACA,2EACA;;;mBAGA;iBACA;kBACA;oBACA;0BACA;kBACA;wBACA;oBACA,AACA;AATA;iBAUA;0DACA;2CACA;AACA;mDACA;oCACA,AACA;;qCACA;wDACA;yCACA;mBACA;AACA,AACA;;+CACA;oCACA;AACA,AACA;;mDACA;2BACA;AACA,AACA;;wDACA;iCACA;0EACA;qCACA;0DACA;kEACA;mBACA;wDACA;AACA;AACA;AACA,AACA;AA3CA;AA4CA,AACA,gIACA;;;iBAGA;iBACA;iBACA,AACA;AAJA;mDAKA;mEACA;8DACA;mDACA;gCACA;4BACA;AACA;AACA,AACA;AAdA;AAeA,AACA,uGACA;UACA;wCACA,AACA;;2CACA;AACA;AACA;+DACA;AACA,AACA;;uCACA;6BACA;;AACA,AACA;;yCACA;2DACA;sEACA;AACA;gIACA;gCACA;mDACA;AACA;eACA;AACA;AACA;;AACA,uHACA;yBACA,+CACA,wIACA,mCACA,0WACA,cACA,aACA,8KACA,uDACA,aACA;AACA;;AACA,iHACA;yBACA,yCACA;AACA;;AACA,yGACA;yBACA,iCACA,0GACA,kDACA,6CACA,gBACA,gCACA;AACA;;AACA,+GACA;yBACA,uCACA,yDACA,6JACA,sFACA,gDACA,WACA,8JACA,uFACA,4CACA,WACA,uEACA,sJACA,gJACA,cACA,YACA;AACA;;AACA,4GACA;yBACA,oCACA,sDACA;AACA;;AACA,mHACA;yBACA,2CACA,yCACA,gGACA,sGACA,mGACA,aACA;AACA;;AACA,4GACA;yBACA,oCACA,gHACA,gBACA,eACA,+PACA,2UACA,6PACA,gBACA,eACA,gEACA,2JACA,gBACA,iBACA,gBACA,0FACA,qGACA,wFACA,kCACA,6CACA,uEACA,gCACA,6CACA,wCACA,0BACA,6CACA,8CACA,0IACA,kBACA,gBACA,iBACA,eACA;AACA;;AACA,8GACA;yBACA,sCACA,gHACA,gBACA,eACA,+PACA,+UACA,iQACA,gBACA,iBACA,gBACA,2FACA,0FACA,kCACA,6CACA,gEACA,gCACA,6CACA,wCACA,0BACA,6CACA,8CACA,8GACA,kBACA,gBACA,iBACA,eACA;AACA;;AACA,6GACA;yBACA,qCACA,gHACA,gBACA,eACA,+PACA,yUACA,6PACA,gBACA,iBACA,gBACA,0FACA,yFACA,kCACA,6CACA,gEACA,gCACA,6CACA,wCACA,0BACA,6CACA,8CACA,8GACA,kBACA,gBACA,iBACA,eACA;AACA;;AACA,mHACA;yBACA,2CACA,yMACA,gCACA,8DACA,+CACA,oMACA,gJACA,kBACA,mJACA,cACA,YACA;AACA;;AACA,0GACA;yBACA,kCACA,iIACA;AACA;;AACA,yGACA;yBACA,iCACA,+NACA,+MACA;AACA;;AACA,mHACA;yBACA,2CACA,yPACA,mQACA,+RACA,uPACA,wPACA;AACA;;AACA,wHACA;yBACA,gDACA,0CACA,wEACA;AACA;;AACA,mHACA;yBACA,2CACA,0CACA,8DACA;AACA;;AACA,4HACA;yBACA,oDACA,0CACA,mCACA,yDACA,mEACA;AACA;;AACA,kHACA;yBACA,0CACA,kCACA,OACA,oCACA,oFACA,8EACA,aACA;AACA;;AACA,sHACA;yBACA,8CACA,kCACA,OACA,oCACA,oFACA,yCACA,6DACA,uEACA,aACA;AACA;;AACA,6GACA;yBACA,qCACA,kCACA,OACA,oCACA,oFACA,oEACA,aACA;AACA;;AACA,6GACA;yBACA,qCACA,yUACA;AACA;;AACA,kHACA;yBACA,0CACA;AACA;;AACA,qHACA;yBACA,6CACA,+BACA,2UACA,aACA;AACA;;AACA,2GACA;yBACA,mCACA,uNACA,2HACA,6PACA,cACA;AACA;;AACA,sGACA;yBACA,8BACA,mGACA,0GACA,YACA;AACA;;AACA,yGACA;yBACA,iCACA,YACA,+IACA,oCACA,kCACA,gDACA,kEACA,mDACA,iBACA,eACA,aACA;AACA;;AACA,mHACA;yBACA,2CACA,uCACA,gBACA,gEACA,qQACA,4BACA,6QACA,oDACA,qSACA,+CACA,gBACA,eACA,8FACA,2QACA,kBACA,+CACA,kGACA,iRACA,kBACA,uEACA,0HACA,+QACA,kBACA,oSACA,gBACA,gEACA,uQACA,4BACA,+QACA,oDACA,uSACA,+CACA,gBACA,iBACA,eACA;AACA;;AACA,uHACA;yBACA,+CACA,cACA,yBACA,oEACA,gDACA;AACA;;AACA,uHACA;yBACA,+CACA,8LACA,2PACA,4HACA,gBACA,YACA;;AACA;;;AACA;;;AACA;;;AACA;;;AACA;;;AACA;;;AACA;;;;ACv8OA,YACA;;AACA,qBACA;;ACHA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,0BACA,kCACA,2CACA;uBACA;AACA;;AACA,yCACA,AACA;cAEA,AACA,AACA;AAHA,uDAKA,yDACA;AACA,AACA;;;iBAEA;kBACA;4DACA,AACA;;AACA;2BACA;oBACA,AACA;;AACA;uEACA;AACA;AACA,AACA;;AACA;;wBAEA;0BACA;yBACA,AACA,AACA;AALA;;AAMA;wBACA;qBACA;qBACA,AACA;;0FACA;qCACA;gCACA,gEACA,gEACA,2DACA,gEACA;wCACA,qGACA;+BACA;yCACA;gDACA;qEACA,gEACA,mEACA;;4EAEA,0DACA,yDACA,8DACA;2EACA,wDACA,2DACA,gEACA,AACA;AATA;gFAUA;yEACA;2EACA;2EACA;cACA;cACA;2BACA,eACA,aACA,eACA,cACA,kBACA,eACA,kBACA,gBACA,AACA;;AACA;mCACA;AACA;AACA,AACA;;AACA;+DACA,AACA;;AACA;mDACA;kDACA;AACA,AACA;;AACA;;4EAEA;AADA,6BAEA,AACA;;AACA,AACA,AACA,AACA;;;;gCACA;8BACA,AACA;;uBACA;AACA;uCACA;sDACA;yEACA;AACA;yCACA;AACA,AACA;;4BACA;gBACA,UACA,sBACA,cACA,OACA,AACA;;iCACA;AACA;AACA,AACA;;AACA;yBACA;uBACA,AACA;;gDACA;gDACA,AACA;;qFACA,AACA;;2EACA,AACA;;AACA;4FACA;AACA;sEACA;6CACA;AACA,AACA;;oCACA,AACA;;4CACA;+BACA;2BACA;mDACA;+BACA;AACA;uCACA;+CACA,AACA;;6CACA;6DACA;iDACA;AACA,AACA;;AACA;mCACA;yBACA;oBACA,AACA;AACA;AACA,AACA;;iCACA;qBACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA;;;;AACA;2DACA;AACA;yCACA;iBACA;4BACA;AACA,AACA;;8BACA,AACA;;mCACA;2BACA;iCACA;AACA;AACA,AACA;;kDACA;AACA;AACA;AACA,AACA;;8BACA,AACA;;AACA,AACA,AACA,AACA;;;;4CACA;oBACA;kCACA;AACA;AACA,AACA;AAnMA;AAoMA,AACA,KA1MA;;ACnBA,AACA;;AACA,uCACA;kBACA;qBACA;;AACA;AACA,6CACA;;AACA,qBACA;;ACVA,AACA;;AACA,mEACA;yCACA;4BACA,AACA;;+BACA;AACA;AACA,AACA;;kCACA,SACA,YACA,AACA;;mCACA;iCACA,AACA;;iCACA;kFACA;kCACA,AACA;;AACA;kCACA;AACA;AACA;mCACA,KACA,sBACA,iBACA,AACA;AACA;AACA;AACA;;AACA;kBAEA,AACA;AAFA;;ACnCA;AACA,AACA;;AACA;AACA;AACA;AACA,4BACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBACA;;AACA,iDACA;;AACA,mEACA;qBACA;;AACA,mBACA;kBACA;AACA,AACA;;AACA;AACA;AACA;AACA,qBACA;0GACA;AACA;8CACA;oCACA;0BACA;2BACA;wBACA;4BACA;4BACA;;gBAEA;sBACA;oBACA;uBACA;sBACA;qBACA;6BACA;0BACA;yBACA;yBACA,AACA;AAXA;4BAYA;+BACA;iDACA;AACA;AACA;gDACA;qCACA;sBACA;wBACA;8BACA;0BACA;gCACA;WACA;8BACA;wDACA,AACA;;;AACA;qEACA;AACA;AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA;AAEA;AACA;AACA;AACA;eACA,AACA;;aACA,AACA;;0BACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;4CACA;mBACA,AACA;;gCACA;kCACA;iBACA;AACA;yBACA,AACA;;AACA;qBACA;8CACA;AACA;mDACA;yCACA;mBACA;yCACA;AACA;AACA;AACA,AACA;;oBACA,AACA;;AACA;AACA;8CACA;8CACA,AACA;;AACA;0EACA;8HACA;uIACA;0EACA;oHACA,AACA;;;eAEA;mBACA;eACA;oBACA,AACA,AACA;AANA;;kDAOA;qEACA;gEACA;8CACA;4BACA;AACA;8CACA,AACA;;6DACA,AACA;;AACA;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;kCACA;mBACA;uDACA;gDACA;qDACA;AACA;eACA;kCACA,sBACA,AACA;;AACA;eACA,AACA;;mCACA;AACA,AACA;;oDACA;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;mCACA;iCACA;6CACA;sCACA,AACA;;oBACA;8BACA;yDACA;0DACA,AACA;;mDACA,AACA;;oCACA,4DACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;qDACA;iCACA;yBACA;iBACA;oBACA;AACA,AACA;;oDACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;kDACA;mBACA;AACA;AACA;uDACA;iBACA;AACA,AACA;;AACA;iCACA;iBACA;oBACA;AACA,AACA;;AACA;AACA;+BACA;iBACA;AACA,AACA;;AACA;YACA;8BACA;mBACA;AACA,AACA;;AACA;sCACA;wBACA;AACA;oBACA;AACA;AACA;AACA;iBACA;AACA,AACA;;2BACA;;4BACA;6DACA,AACA;;8CACA;gCACA;AACA,AACA;;AACA;AACA;;0EACA,AACA;eACA;oCACA;sBACA;iBACA;qCACA;kBACA;AACA;AACA,AACA;;AACA;mCACA;sCACA;qCACA;AACA;AACA;iCACA,AACA;;iCACA;AACA;AACA;4BACA;4BACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;sCACA;wBACA,AACA;;aACA,AACA;;qCACA;iCACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;+DACA;AACA;0BACA;;4BAEA;6BACA;AAFA,aAGA;AACA,AACA;;AACA;sCACA,AACA;;AACA;AACA;AACA;AACA;AACA;YACA;iDACA;uCACA;sBACA;0BACA;kBACA;AACA;AACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;4DACA;AACA;AACA;AACA;mGACA;AACA;AACA,AACA;;;4BAEA;AADA,WAEA,AACA;;2CACA;cACA;AACA;AACA;AACA;cACA;4BACA;wBACA;iBACA;AACA,AACA;;AACA;oBACA,AACA;;;AAEA;AACA;yBACA;4DACA;AAJA,aAKA,AACA;;iDACA;kDACA;;AAEA;2BACA,AACA;AAHA;AAIA,AACA;;AACA;mBACA,AACA;;eACA;AACA,AACA;;yDACA;;6BAEA;AADA,WAEA,AACA;;+BACA;2EACA;4BACA;AACA;eACA;AACA,AACA;;qEACA;+DACA,AACA;;oCACA;oCACA;eACA;AACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;oDACA;AACA;mCACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;uDACA;oCACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;oDACA;mCACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;8BACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;wCACA;AACA;yCACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;2DACA;0CACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;+CACA;sCACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;0DACA;2CACA;sDACA;;AACA,YACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;sEACA;2CACA;4DACA;;AACA,YACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;qDACA;wCACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;8CACA;oBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;0CACA;oBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;kCACA;0CACA;iCACA;6CACA;2CACA;oCACA;AACA;iBACA;AACA;eACA;AACA,AACA;;sCACA;AACA,AACA;;AACA;iCACA;yBACA;2DACA;AACA;AACA,AACA;;2DACA;8BACA;AACA,AACA;;6BACA,AACA;;kDACA;0BACA;qCACA;AACA,AACA;;sCACA;kBACA;qCACA;AACA,AACA;;qBACA;iBACA;mCACA;+BACA,AACA;;uDACA;kBACA;sDACA;wDACA;AACA,AACA;;gEACA,AACA;;4CACA;uBACA;+DACA;qDACA;AACA,AACA;;AACA;wDACA;mBACA;+BACA;+BACA;AACA;iCACA;AACA;AACA,AACA;;gEACA;AACA;iBACA,AACA;;kBACA,cACA,AACA;;6BACA,AACA;;sFACA,AACA;;kCACA;qCACA;yCACA;eACA;yBACA;0BACA;AACA,AACA;;;oCACA;+BACA;AACA,AACA;mCACA;AACA;iCACA;eACA;AACA;AACA;cACA;mEACA;sBACA;AACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;yEACA;mBACA;8BACA;AACA;AACA;AACA;kCACA,AACA;;AACA;AACA;AACA;0CACA,KACA,AACA;;oCACA;yBACA,AACA;;cACA,AACA;;AACA;AACA;cACA;sCACA;sBACA;qBACA;AACA,AACA;;;uCAEA;qBACA,AACA;AAHA;AAIA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;;mBAEA;oCADA,CAEA,AACA;;AACA;AACA;AACA,AACA;;8BACA;2BACA;yCACA,AACA;;AACA;AACA;AACA;6DACA,YACA,AACA;;AACA;AACA;6BACA;wBACA;kDACA;AACA;uBACA;yDACA;oCACA;aACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;8DACA;gDACA;gCACA;kCACA,AACA;;AACA;AACA;AACA;yBACA,AACA;;AACA;AACA;oFACA,oBACA;wFACA,wBACA,AACA;;;oBAEA;;gBAEA;kBACA,AACA,AACA;AAJA;AAFA;AAOA,AACA;;AACA,AACA,AACA;;;0DACA;mBACA,AACA;;mCACA,AACA;;kCACA;;AACA;AACA;AACA;2CACA;kDACA;kCACA;AACA;wCACA;8CACA;kCACA;AACA,AACA;;AACA;AACA;AACA;4BACA;sCACA;mBACA;wCACA;AACA;AACA;AACA,AACA;;kDACA,AACA;;yCACA;uDACA;yFACA;4DACA;;AACA;oBACA;4CACA;kDACA;AACA;8BACA,CAEA,AACA;AAFA;;;AAGA;AACA;oBACA;+GACA;2CACA;0DACA;qDACA;kCACA;AACA;AACA;2FACA;AACA;eACA;+DACA;yDACA;oBACA;4EACA;4BACA;AACA;AACA;yDACA;AACA;eACA;AACA;AACA,AACA;;+CACA;gDACA;0CACA;gEACA;iCACA;oCACA;AACA;aACA;AACA,AACA;;AACA;AACA;qeACA;sDACA;uCACA;AACA,AACA;;wCACA;qCACA;8CACA;iCACA;+CACA;AACA;aACA;AACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;gEACA;mBACA;kDACA,AACA;;mCACA,AACA;;qCACA;;4CAEA;+BACA;eAFA,CAGA;AACA;AACA,AACA;;+DACA;wCACA;qDACA;;AACA,AACA;;AACA;wEACA;;0BAEA;uBACA;+BACA,AACA;AAJA;AAKA,AACA;;0CACA;AACA;aACA,AACA;;qDACA;;AACA;wBACA,AACA;;mDACA;uFACA;sBACA;AACA;AACA;sDACA;+CACA;;0BAEA;8BACA;8BACA,AACA;AAJA;AAKA;AACA,AACA;;gDACA;qDACA;mCACA;AACA,AACA;;qFACA;gEACA;oDACA;kBACA;qBACA;AACA;AACA;yCACA;AACA,AACA;;0CACA;AACA;aACA;AACA,AACA;;AACA;AACA;sDACA;yCACA;sFACA;gFACA;AACA,iBACA;AACA;yEACA;oDACA;AACA;AACA,AACA;;AACA;AACA;AACA;AACA;4BACA;qEACA;6EACA;sDACA;AACA;qCACA;0CACA;6CACA;mDACA,AACA;;+BACA;+CACA;AACA;AACA,AACA;;8DACA;AACA;AACA;sDACA;8DACA,AACA;;AACA;uBACA;AACA;6DACA;AACA,AACA;;+CACA;AACA;aACA;AACA,AACA;;2EACA;AACA;gFACA;;uBAEA;0BACA;wBACA,AACA;AAJA;AAKA,AACA;;8EACA;8CACA;AACA;AACA,AACA;AACA,AACA;;oDACA;AACA;YACA;6CACA;0CACA,AACA;;4BACA;6BACA;6BACA,AACA;;sBACA;AACA;AACA,AACA;;8CACA;mBACA,AACA;;AACA;iDACA;iCACA;4BACA;8CACA;AACA;AACA,AACA;;yCACA;gCACA;kBACA;gBACA,AACA;;YACA;;sCACA;;oBACA;uDACA;AACA,AACA;;6DACA;qCACA;AACA,AACA;;eACA;AACA,AACA;;uDACA;AACA;sCACA,oCACA,AACA;;0BACA;8CACA;AACA;eACA;AACA,AACA;;kEACA;AACA;kCACA;4CACA;AACA;AACA,AACA;;sEACA;oDACA,AACA;;;qBAEA;mBACA,AACA,AACA;AAJA;;aAKA,4BACA,gBACA,mBACA,eACA,QACA,QACA,AACA;AACA,AACA;;kEACA;mBACA;qBACA;uDACA;oDACA;6CACA;uBACA;0BACA;AACA;AACA,AACA;;AACA;iDACA;kFACA;iCACA;AACA;AACA;AACA;qDACA;eACA;AACA,AACA,AACA;;uDACA;wBACA,AACA;;AACA;;0BAEA;wBACA;uBACA;oCACA,AACA,AACA;AANA;;+BAOA;AACA;qGACA;AACA;6CACA;AACA;6CACA,AACA,AACA;;eACA;AACA,AACA;;qGACA;YACA;uGACA,AACA;;mBACA,AACA;;qCACA;0CACA;AACA;AACA;iBACA;iCACA;4BACA;;;wBAGA;sBACA;sBACA,AACA,AACA;AALA;AADA;AAOA,AACA;;mGACA;0GACA,AACA;;;AAEA;;;oBAGA;qBACA;0BACA,AACA,AACA;AALA;AADA;mBAOA;AATA,WAUA,AACA;;AACA;mBACA;AACA,AACA;;8CACA;AACA;AACA;sCACA;0BACA;gDACA;AACA;4BACA;gDACA;sDACA;AACA,AACA;;eACA;AACA,AACA;;4CACA;iFACA;AACA;AACA,AACA;;;;oCAGA,AACA,AACA,AACA;AAJA;AADA;;yCAMA,AACA;;+BACA;8CACA;AACA,AACA;;eACA;AACA,AACA,AACA;;kCACA;iCACA,AACA;;;wBAEA;gCACA;oBACA;AAHA;4BAIA,AACA;;sBACA;6BACA;AACA,AACA;;AACA;6CACA,AACA;;qCACA,AACA;;AACA;gFACA;kFACA,AACA;;AACA;sDACA,AACA;;+DACA;AACA;AACA;;qDAEA,AACA;AAFA;AAGA,AACA;;AACA;kDACA,AACA;;sCACA;AACA;0CACA;AACA,AACA;;AACA;wEACA,AACA;;AACA;gEACA,AACA;;AACA;uEACA,AACA;;oDACA;qDACA;AACA,AACA;;AACA;0CACA;AACA;AACA,AACA;;AACA;qGACA;AACA;AACA,AACA;;mCACA;AACA,AACA;;4EACA;mBACA;iCACA,AACA;;AACA;AACA;AACA;8DACA,AACA;;AACA;gCACA,AACA;;wDACA,AACA;;6BACA,AACA;;;0BAEA;4CACA;2BACA,AACA;AAJA;gCAKA;oCACA;AACA,AACA;;gEACA;;oBAEA;mBACA,sEACA,aACA;yBACA;uCACA,AACA,AACA;AARA;;uBASA;;eAEA;gBACA;gBACA;mBACA;wCACA;;oBAEA;mBACA,AACA;AAHA;wBAIA;AACA;2CACA;;oBAEA;mBACA,AACA;AAHA;uCAIA;iCACA;AACA,AACA;AApBA;AAqBA,AACA;;gDACA;0BACA,AACA;;AACA;YACA,+BACA,qCACA,AACA;;sBACA,AACA;;uBACA;2BACA;sCACA;gCACA;mBACA;AACA;mCACA;mEACA;AACA;AACA,AACA;;0CACA;mDACA;0CACA;AACA;AACA;AACA;AACA;eACA;wBACA;AACA;AACA;wCACA,AACA;;AACA;2BACA;AACA,AACA;;AACA;AACA;wDACA;oCACA;AACA,AACA;;2CACA;+DACA;AACA;mCACA,kCACA,aACA,2CACA,AACA;AACA;AACA,AACA;;0DACA;kCACA;qCACA;eACA;iFACA;AACA;AACA,AACA;AA50CA;;AA60CA;AACA;AACA,wDACA;;AACA,qBACA;;ACz6CA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,AACA;;AACA,mCACA;;AACA,wBACA;;AACA,oBACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,mCACA;qBACA;aACA;AACA;;AACA,UACA;;AACA,qBACA;;AC5BA;AACA,AACA;;AACA,iCACA;;AACA,+BACA;2BACA;AACA;;AACA,8BACA;6BACA;AACA;;AACA,4BACA;qDACA;AACA;;AACA,4BACA;kGACA;AACA;;AACA;;;OACA,CACA;aACA;AACA;;AACA;AACA;AACA,2BACA;mDACA;sBACA,sBACA,yDACA;sBACA;AACA;;AACA,iCACA;aACA,AACA;;mCACA;uBACA;8BACA;uCACA;AACA;AACA;aACA;gBACA;eACA;kCACA;uCACA;AACA;AACA;AACA;AACA;;AACA,qCACA;iBACA;eACA;AACA;uCACA;oBACA;AACA;aACA;AACA;;AACA,gCACA;oEACA;AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,iCACA;yDACA;AACA;;AACA,kCACA;AACA;AACA;oBACA;;yBACA;UACA,AACA;;2BACA;2BACA;+BACA;AACA;AACA;sEACA;8CACA;AACA;+BACA;AACA;AACA;AACA;2CACA;AACA;;AACA,0BACA;kBACA;oCACA;sEACA;AACA;wBACA;AACA;;AACA;AACA;AACA;AACA,2BACA;4BACA;yBACA,AACA;;AACA;8BACA;iCACA;;wBAEA;oBACA;oBACA;8CACA,AACA;AALA;;AAMA,qBACA;2CACA,AACA;;0DACA;AACA;kCACA;+BACA,AACA;;AACA;kCACA;AACA;mCACA,AACA;;oCACA;+BACA;+BACA;sBACA;AACA;iBACA;AACA,AACA;;+EACA,0CACA;aACA;AACA;gFACA;uCACA;4CACA;4BACA;AACA;AACA;AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,oCACA;gCACA;2BACA;gBACA;mBACA;gBACA;sBACA;gCACA;UACA,AACA;;qDACA,AACA;;sCACA;AACA;AACA;AACA;AACA;iHACA;AACA;AACA,AACA;;iBACA,AACA;;uBACA;oBACA;AACA,AACA;;gCACA;AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,uCACA;gBACA;UACA;UACA;UACA;UACA;UACA,AACA;;kCACA;eACA;AACA,AACA;;4BACA;mBACA;4BACA;AACA,AACA;;uBACA;4CACA;kCACA;6CACA;iCACA;AACA;AACA;oDACA;iDACA;4BACA;iCACA;kBACA;6CACA;AACA;AACA;sBACA;AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,iDACA;qBACA;8BACA;iBACA;+BACA;AACA;AACA;;AACA;mBAEA;kBACA;gBACA;gBACA;qBACA;eACA;YACA;mBACA;gBACA;cACA;kBACA;iBACA;aACA;wBACA;2BACA;gBACA;YACA,AACA;AAlBA;;AC9PA,AACA;;AACA,wBACA;;AACA;AACA;AACA,4BACA;;AACA,AACA,AACA,AACA,AACA;;;;;AACA;2BAEA;aACA,AACA;AAHA;;AAIA;AACA;AACA,2BACA;;AACA;AACA,yBACA;;AACA,+BACA;8BACA,oBACA,AACA;;+BACA;AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,qDACA;qBACA;qBACA;0BACA;+BACA,AACA;;AACA,AACA,AACA,AACA;;;;kCACA;AACA;sBACA;AACA,AACA;;AACA,AACA,AACA,AACA;;;;oCACA;uDACA;uCACA;+BACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;gCACA;AACA;mBACA;AACA,AACA;;AACA,AACA,AACA,AACA;;;;oDACA;wBACA;4DACA;AACA;AACA;gCACA;mCACA;gBACA;4EACA;4BACA;0BACA;AACA;AACA;AACA,AACA;;uBACA;gBACA;AACA;AACA,AACA;;8BACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;sEACA;oBACA,AACA;;gCACA;0GACA;AACA;uBACA;AACA;AACA;AACA;6CACA;gCACA;eACA;;mBAEA;oBACA;sBACA,AACA,AACA;AALA;;qBAMA;6BACA;cACA;iCACA;uCACA;wBACA;4BACA;2BACA;AACA;AACA,AACA;;0BACA,AACA;;;oBAEA;uBACA;mBACA;sBACA,AACA;AALA;gCAMA;AACA,AACA;;gCACA;gDACA;AACA,AACA;;eACA;AACA,AACA;;eACA,uBACA;sCACA;AACA;AACA;oCACA;yBACA;mCACA;AACA,AACA;;eACA,yBACA;uCACA;AACA;AACA;yBACA;mCACA;6BACA;AACA,AACA;;sCACA;kCACA;wBACA;mBACA;6BACA;wBACA;uEACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;mCACA;0CACA;gCACA;;mBACA,CACA;iBACA;AACA;AACA;AACA,AACA;;+CACA;6BACA;wBACA;mBACA,AACA;;AACA;AACA;AACA;AACA;sCACA;oCACA;AACA;AACA;qCACA,AACA;;;mBACA,CACA;AACA;AACA,AACA;;yBACA;2BACA;yBACA;aACA;AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,qEACA;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;kCACA;yDACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;6DACA;iKACA;AACA,AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;kDACA;gDACA,AACA;;qBACA;oBACA;oBACA;mCACA;oBACA;YACA;YACA;sDACA,AACA;;sDACA;6CACA;uEACA;;4CAEA;kCACA;8CACA;6CACA;+CACA,AACA;AANA;mDAOA;;2BAEA;kCACA;sBACA;6BACA;+CACA,AACA;AANA;mDAOA;;2BAEA;kCACA;uDACA;6CACA;+CACA,AACA;AANA;iBAOA;AACA;AACA,AACA;;6CACA;2BACA;AACA,AACA;;qBACA;AACA,AACA;;2BACA;iBACA;AACA,AACA;;+DACA;AACA;AACA;AACA;8CACA;AACA,AACA;;;qBAEA;wBACA;iBACA;mBACA,AACA;AALA;AAMA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;oFACA;;iBAEA;kBACA,AACA,AACA;AAJA;;yCAKA;iCACA,AACA;;6BACA;2BACA;AACA,AACA;;0CACA;wDACA;;6BACA,CACA;+FACA;kDACA;uBACA;AACA;AACA;AACA,AACA;;kCACA;8BACA;iBACA;eACA;iCACA;AACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;gEACA;2BACA;oBACA;oBACA;wBACA;YACA;YACA;YACA,AACA;;8GACA;sEACA;AACA;AACA;AACA,AACA;;;mBAEA;oBACA;oBACA;sBACA,AACA,AACA;AANA;;yBAOA;6BACA;iEACA;8BACA;AACA,AACA;;gDACA;gBACA;uEACA;yBACA;AACA,AACA;;gCACA;wBACA;iBACA;+BACA;AACA,AACA;;qBACA;AACA,AACA;;mBACA;AACA;AACA;0BACA;AACA,AACA;;;qBAEA;wBACA;iBACA;mBACA,AACA;AALA;4HAMA;eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;oBACA;qCACA,AACA;;YACA;iDACA;qBACA;mBACA;AACA;oBACA;8BACA;kBACA;AACA;AACA,AACA;;YACA;oEACA;qBACA;mBACA;AACA;oBACA;8BACA;kBACA;AACA;AACA,AACA;;;qBAEA;wBACA;iBACA,AACA;AAJA;AAKA,AACA;;8DACA;yDACA,AACA;;aACA;AACA;;AACA,qBACA;;AC/lBA,AACA,AACA,AACA;;;;gCAEA;yIACA,gEACA,gCACA;;AACA,AACA;;uBACA,AACA;;0CACA;qBACA;6BACA;gDACA;AACA;eACA;AACA,AACA;;+BACA,CACA,aACA,SACA,WACA,SACA,WACA,UACA,WACA,UACA,QACA,SACA,SACA,UACA,SACA,YACA,YACA,AACA,AACA;;6BACA,CACA,WACA,WACA,QACA,YACA,AACA,AACA;;;eAEA;cACA;cACA;cACA;qBACA;mBACA;2BACA;wBACA;2BACA;0BACA;oBACA;2BACA;4BACA;4BACA;0BACA;2BACA;2BACA;wBACA;wBACA;qBACA;yBACA;6BACA;kBACA;oBACA;qBACA;oBACA;eACA;eACA;iBACA;oBACA;qBACA;0BACA;oBACA;sBACA;uBACA;oBACA;yBACA;wBACA;gBACA;iBACA,AACA,AACA;AA1CA;;6DA2CA,gEACA,uGACA,OACA,gGACA,0EACA,4EACA,yEACA,4EACA,OACA,mEACA,4DACA,gDACA,OACA,qDACA,oDACA,gDACA,qDACA,0FACA,8DACA,OACA,0DACA,iEACA,kDACA,iDACA,2DACA,4DACA,qBACA,AACA;;yCACA;2BACA;qCACA;uBACA;AACA;AACA,AACA;;eACA;AACA,AACA,AACA;;AACA,AACA,AACA;;;6DACA;AACA;iDACA;4BACA;iEACA;AACA;qBACA,AACA;;AACA;kBACA;oCACA;iDACA;2EACA;qCACA;AACA,AACA;;eACA;AACA,AACA;;AACA,AACA,AACA;;;4DACA;0CACA;AACA,AACA;;sCACA,AACA;;AACA;;+BAEA;+BACA,AACA,AACA;AAJA;;AAKA,AACA,AACA;;;8DACA;4CACA;AACA,AACA;;yCACA;0CACA;AACA,AACA;;6CACA;0CACA;AACA,AACA;;yDACA;0CACA;AACA,AACA;;uDACA;0CACA;AACA,AACA;;qDACA;0CACA;AACA,AACA;;4EACA;2CACA;yBACA;kBACA;AACA;oDACA,sEACA,AACA;AACA,AACA;;wDACA;uCACA;AACA,AACA;;kDACA;cACA,AACA;;AACA;wBACA;sBACA;sBACA;AACA,AACA;;wDACA;iCACA;AACA;AACA;sCACA;6CACA;6BACA;AACA;AACA,AACA;;8DACA;iCACA;AACA;AACA;sCACA;6CACA;gCACA;AACA;AACA,AACA;;sEACA;yDACA;uDACA;mCACA;AACA;AACA;AACA,AACA;;uCACA;6BACA;6BACA;AACA,AACA;;sCACA;oCACA;uBACA;AACA;+CACA;sBACA;AACA;AACA,AACA;;uCACA;6BACA;6BACA;AACA,AACA;;sCACA;oCACA;uBACA;AACA;+CACA;sBACA;AACA;AACA,AACA;;AACA;+CACA;8EACA;AACA,AACA;;6EACA;uCACA;oCACA;eACA;qCACA;AACA;AACA,AACA;;qDACA;qCACA;0BACA;6BACA,AACA;;0BACA,AACA;;0BACA;6BACA;gDACA;AACA,AACA;;mDACA;qCACA;iCACA;+BACA;+BACA;0BACA;qCACA;yEACA;sDACA;wBACA,AACA;;yCACA;+BACA;AACA;AACA;AACA;AACA;AACA,AACA;;qDACA;qCACA;iCACA;mCACA;0BACA;qCACA;sCACA;uEACA;iCACA;wBACA,AACA;;yCACA;+BACA;mBACA;oBACA;AACA;AACA;AACA;AACA;AACA,AACA;;+CACA;AACA;AACA;8CACA;AACA;;kBAEA;qBACA;wBACA,AACA;AAJA;6BAKA;yCACA;AACA;yCACA;wCACA;6BACA;+CACA;yBACA;uDACA;eACA;AACA;AACA,AACA;;kEACA;AACA;qDACA;YACA;YACA;gFACA;sCACA;AACA;AACA,AACA;;0CACA;4CACA;;6BAEA;wBACA;yBACA;uBACA,AACA;AALA;0CAMA;gDACA,qCACA;sCACA;AACA;AACA,AACA;;eACA;AACA,AACA,AACA;;AACA;qDACA;oBACA;kCACA;gFACA;uCACA;AACA;2BACA,AACA;;AACA;yDACA;iDACA;wBACA;2BACA;AACA;AACA,AACA;;mCACA,AACA;;AACA,AACA,AACA;;;;oBAEA,AACA;;kCACA;+EACA;sEACA;AACA;AACA,AACA;;AACA;2CACA;+CACA;qDACA;wCACA,AACA;;AACA;yDACA;6CACA;uBACA;qBACA;uBAnBA,CAoBA;4FACA;gBACA,oEACA,oCACA,OACA,gDACA,uCACA,kBACA,+BACA,MACA;yBACA,AACA;;yCACA;6DACA;0BACA;yBACA;4DACA;iEACA,AACA;;AACA;yDACA,AACA;;AACA;wCACA;iDACA;iCACA;kCACA;qDACA;iDACA;AACA;mBACA;0CACA;AACA;iBACA;6EACA;AACA;eACA;eACA;eACA;AACA,AACA;;AACA;oCACA;eACA;eACA;eACA;AACA,AACA;;AACA;sCACA;gCACA;iCACA;AACA,AACA;;AACA;sDACA;yBACA;0BACA;0CACA;0CACA;0BACA;AACA;AACA;AACA;0BACA;uEACA;mBACA;AACA;0FACA;eACA,AACA;;AACA;yBACA;iBACA;8BACA;oDACA;qDACA;AACA;iBACA;8BACA;uDACA;AACA;iBACA;8BACA;AACA;AACA;AACA,AACA,AACA;;AACA,AACA;;AACA;iEACA;6BACA;kDACA;eACA,AACA;;iCACA;sDACA;iBACA;yCACA;AACA,AACA;;kCACA;uDACA;iBACA;yCACA;AACA,AACA;;+CACA;iCACA;0CACA;AACA;eACA;eACA;AACA,AACA;;AACA;qCACA;qCACA;eACA;eACA;AACA,AACA;;AACA;sCACA;2CACA;eACA;eACA;AACA,AACA;;AACA;mEACA;eACA;eACA;eACA;AACA,AACA;;AACA;uCACA;sCACA,AACA;;AACA;mCACA;qDACA;oDACA;AACA,AACA;;AACA;4CACA;qCACA;2CACA;oCACA,AACA;;AACA;mCACA;gCACA;+BACA;eACA;mCACA;kCACA,AACA;;uHACA;oHACA;AACA,AACA;;AACA;uCACA;6BACA;eACA;0BACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;gEACA;oBACA;uBACA;+BACA;0BACA;6BACA;eACA;eACA;AACA;aACA;gDACA;qEACA;gCACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;+DACA;oBACA,AACA;;4BACA;+CACA;AACA;AACA,AACA;;gCACA,AACA;;wCACA;wBACA;iBACA;AACA,AACA;;gCACA,AACA;;kCACA,AACA;;eACA;qCACA;0CACA;0CACA,AACA;;AACA,AACA;;eACA;qCACA;8CACA,AACA;;4EACA;uDACA;8DACA;mCACA;8CACA;AACA;yBACA;2BACA;AACA;AACA;AACA;AACA,AACA;;AACA,AACA;;AACA;8HACA;mBACA,AACA,AACA;;;sBACA,AACA;;AACA;oBACA,AACA;;sDACA;AACA;4BACA;mDACA;2CACA;qBACA;sBACA;AACA,AACA;;6CACA;2BACA;mBACA;0DACA;mBACA;qEACA,mEACA;mBACA;6DACA;mBACA;0DACA;AACA;0DACA,AACA;;AACA;uDACA;wBACA;2BACA;mBACA;2CACA;mBACA;qDACA;mBACA;6DACA;AACA;yEACA,AACA;;AACA,AACA;;4BACA;mCACA;0BACA;yBACA;2BACA;AACA;eACA;AACA,AACA;;gDACA;4CACA;yBACA;AACA,AACA;;mCACA;2DACA,gCACA;6CACA;2CACA;AACA,kCACA;2BACA;2BACA;iDACA;AACA;AACA,AACA;mBACA;2CACA;sBACA;AACA;AACA,AACA;;AACA;4DACA;oCACA;uCACA;6BACA;4BACA;+EACA;4EACA,AACA;;sBACA;mBACA;mBACA;2CACA;uCACA;kGACA;6CACA;gGACA;AACA;AACA;AACA;mBACA;2CACA;uCACA;8DACA;6CACA;6DACA;AACA;AACA;AACA;mBACA;2CACA;uCACA;kGACA;6CACA;gGACA;AACA;AACA;AACA;mBACA;AACA;+DACA;oCACA;qCACA,AACA;;+CACA;iCACA;4EACA,iBACA;mCACA;gCACA;AACA,0CACA;mCACA;mCACA;yDACA;AACA;AACA,AACA;2BACA;8BACA;AACA,AACA;yBACA;4BACA;AACA,AACA;;AACA;qEACA;+CACA;yBACA;AACA,AACA;;AACA;AACA,AACA;;AACA,AACA;;gDACA;cACA;gDACA;kCACA;sCACA;qCACA;sCACA;AACA,AACA;;AACA;iDACA;yCACA;mBACA;AACA,AACA;;AACA;6CACA;0CACA;2CACA;qBACA;AACA;AACA,AACA;;+BACA;8BACA,AACA;;AACA;qCACA;kEACA;iBACA;mEACA;AACA,AACA;;AACA;8CACA;gEACA;AACA;+DACA;8BACA,AACA;;AACA;sDACA;wBACA,AACA;;AACA;uCACA;mDACA;AACA,AACA;;AACA;yCACA;iCACA;0BACA;AACA;AACA;AACA,AACA;;;oCAEA;yCACA,AACA;;yDACA;AACA;AACA;AACA,AACA;;+CACA,AACA;;gEACA;8BAXA,CAYA;+DACA;2DACA;2BACA;AACA;AACA;AACA,AACA;;AACA;+BACA;+BACA;AACA;mCACA;qBACA;AACA;oCACA;AACA,AACA;;mCACA,AACA;mBACA;oDACA;qCACA;AACA;0CACA;6CACA;yBACA;8CACA;AACA;AACA;2EACA;6CACA;uBACA;AACA;AACA;AACA,AACA;;gDACA;6BACA,AACA;;AACA;qCACA;0DACA;2DACA;AACA,AACA;;AACA,AACA,AACA;;;0EACA;qCACA;4BACA;sCACA;qCACA;AACA,AACA;;AACA,AACA,AACA;;;2EACA;wCACA;+BACA;sCACA;qCACA;AACA,AACA;;iDACA;sCACA;qCACA;AACA,AACA;;kDACA;sCACA;qCACA;AACA,AACA;;uDACA;sCACA;AACA,AACA;;wDACA;sCACA;AACA,AACA;;+CACA;wBACA;wCACA;qDACA;4DACA;sDACA;qCACA;AACA;mBACA;+BACA;AACA;AACA,AACA;;gDACA;wBACA;wCACA;qDACA;4DACA;sDACA;qCACA;AACA;mBACA;+BACA;AACA;AACA,AACA;;4DACA;yEACA;yCACA;iBACA,AACA;;wBACA;uBACA;4BACA;AACA,AACA;;wDACA;yEACA;iBACA,AACA;;wBACA;uBACA;iCACA;AACA;AACA,AACA;;qBACA;qBACA;qBACA,AACA;;AACA;oEACA;cACA;kDACA;oDACA;2CACA,AACA;;AACA;gDACA;wDACA;AACA;qDACA;8DACA;AACA,AACA;;AACA;8BACA;mCACA;qCACA;AACA,AACA;;kBACA;AACA,AACA;;cACA;yBACA;iBACA;iBACA;iBACA;iBACA;yDACA;mCACA;yCACA;kCACA;oBACA;AACA;iBACA;8DACA;iCACA;2CACA;yDACA;+CACA;oCACA;uCACA;uCACA;mCACA;AACA;iFACA;sDACA;sDACA;iCACA;kDACA;yDACA;sCACA;AACA;qCACA;AACA;sBACA;uBACA;AACA;AACA;iBACA;6DACA;gCACA;iFACA;qDACA;2BACA;0DACA;0DACA;8DACA;oCACA;gDACA;qCACA;4DACA;wDACA;yCACA;AACA;0DACA;yCACA;yCACA;8CACA;oCACA;AACA;sBACA;oDACA;mCACA;4BACA;AACA;AACA;AACA;iBACA;gEACA;wEACA;oCACA;qDACA;wDACA;gCACA;2CACA;AACA;6CACA;uCACA;mCACA;oBACA;AACA;iBACA;gEACA;sCACA;4CACA;oBACA;AACA;iBACA;AACA;AACA;kLACA;AACA,AACA,AACA;;;qEACA;wDACA;yBACA;+DACA;2BACA;qCACA;AACA;kEACA;0CACA;mBACA;8HACA;AACA;AACA,AACA;;AACA;6CACA,AACA;;AACA;uBACA;AACA;AACA,AACA;;AACA;4BACA;AACA;mBACA;oBACA,AACA;;4BACA;qBACA;kBACA;AACA,AACA;;oCACA;AACA;AACA,AACA;;0CACA;AACA,AACA;;AACA,AACA,AACA;;;yCACA;oBACA;yBACA;AACA,AACA;;AACA,AACA,AACA;;;0CACA;sDACA;sCACA;2BACA;mCACA;+BACA;yCACA;+BACA;AACA;0BACA;oDACA;4BACA;oCACA;uBACA;AACA;mBACA;AACA;AACA;aACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;uEACA;oBACA;2BACA;wBACA,AACA;;AACA;wFACA;kCACA;wDACA;yDACA,AACA;;sFACA;gCACA;yDACA,AACA;;wFACA;kCACA,AACA;;AACA;mEACA;sFACA;yDACA;+CACA;oBACA;oCACA;AACA,AACA;;AACA;AACA;eACA;AACA;gBACA;gBACA;AACA;AACA;qEACA;gCACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;4CACA;2BACA;AACA,AACA;;AACA,AACA,AACA;;;2CACA;0BACA;AACA,AACA;;AACA,AACA,AACA;;;oCACA;6CACA;sBACA;AACA;kFACA;AACA;AACA,AACA;;+CACA;0CACA,AACA;;8BACA,AACA;;kCACA,AACA;;oBACA;wDACA;yDACA;8DACA;2DACA;4DACA,AACA;;qCACA;qBACA;AACA,AACA;;0CACA;gBACA;oCACA;uBACA;AACA;AACA,AACA;;uCACA;qBACA;AACA,AACA;;yCACA;qBACA;AACA,AACA;;wCACA;qBACA;AACA,AACA;;iDACA,AACA;;+DACA;AACA,AACA;;AACA,AACA,AACA,AACA;;;;qDACA;yBACA;0BACA;AACA;kGACA;0BACA;AACA,AACA;;4BACA;AACA,AACA;;AACA,AACA,AACA;;;6CACA;iCACA;AACA,AACA;;2BACA,AACA;;wCACA,AACA;;AACA,AACA,AACA;;;mBACA;0GACA;qBACA;eACA;sFACA;iFACA;uBACA;aACA;AACA;AACA,AACA;;yCACA;uEACA;wCACA;AACA;AACA;AACA;AACA;aACA;qBACA;AACA,AACA;;aACA,AACA;MAx2CA;;ACJA;AACA,2BACA;;AACA,6DACA;sEACA;AACA;;AACA,iDACA;;iBACA,AACA;;oFACA;uCACA;gFACA;AACA,AACA;;mCACA;8BACA;sCACA;4DACA;qEACA;2EACA;AACA,0BACA,AACA;;mEACA;AACA;AACA;;;;A/B3BA;;;;;;;;;;;;;AgCAA,0CACA;;AACA;AACA,2CACA;;4BAEA;;2BAEA,AACA,AACA;AAHA;AAFA;AAMA;;AACA,gEACA;;AACA;AACA,uFACA;AACA;8BACA,AACA;;uCACA,AACA;;AACA,AACA;;AACA,AACA;;gCACA;4DACA;oEACA;AACA;oFACA;AACA;mDACA;+BACA;sDACA;AACA;AACA,AACA;;uEACA;AACA,AACA;;kDACA;iDACA,AACA;;gDACA;AACA,AACA;;yCACA;;AACA;2EACA;sDACA;AACA;;AACA;wCACA;AACA;AACA,AACA;;wFACA;oBACA,AACA;;8DACA;0EACA,AACA;;yGACA;;yCAEA;gCACA,AACA,AACA;AAJA;;oDAKA;AACA,AACA;;mGACA;mCACA,AACA;;6CACA;AACA,AACA;;6CACA,AACA;;AACA;AACA;mEACA;AACA,AACA;;;yBAEA;0CADA,CAEA;AACA;AACA;2BACA,AACA;;AACA;uDACA;AACA,AACA;;kGACA;8BACA;yBACA;kCACA;AACA;AACA;AACA;kCACA,AACA;;AACA;AACA;;;;AhC1GA;;;;;;;;;;;;;AiCAA,8DACA;;AACA;AACA,sCACA,CACA;;;;AjCLA;;;;;;;;;;;;;AkCAA,kEACA;;AACA;AACA,0CACA;;oCACA,CACA;AACA;AACA;;;;AlCRA;;;;;;;;;;;;;AmCAA,mEACA;;AACA;AACA,2CACA;;qCACA,CACA;AACA;AACA;;;;AnCRA;;;;;;;;;;;;;AoCAA,qEACA;;AACA,0CACA;;0BAEA;yBACA;oEACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AACA;AApBA;AAqBA;;;;ApCzBA;;;;;;;;;;;;;AqCAA,kEACA;;AACA,+BACA;;0BAEA;2DACA;6CACA;iDACA;uCACA;2CACA;uCACA;AACA;AACA;AACA,AACA;AAXA;AAYA;;;;ArChBA;;;;;;;;;;;;;AsCAA,iEACA;;AACA,8BACA;;0BAEA;uBACA;6BACA;4BACA;8BACA;4BACA;kCACA,AACA;AARA;AASA;;AACA;AACA,6DACA;qBACA,AACA;;iCACA,AACA;;uCACA;AACA;uEACA;wCACA,AACA;;8BACA;AACA;sHACA;+DACA;AACA;+GACA;sEACA;AACA;+GACA;mCACA;AACA;uCACA,GACA;iDAEA;yDACA,AACA;AAHA,6CAIA,AACA;AACA;AACA;2BACA;mEACA;AACA;AACA;AACA;AACA;;;;AtCpDA;;;;;;;;;;;;;AuCAA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA,+DACA;;AACA,4BACA;;0BAEA;yBACA;4BACA;;2BAEA,AACA;AAFA;6BAGA,AACA;AARA;AASA;;;;AvCrBA;;;;;;;;;;;;;AwCAA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,oEACA;;AACA;AACA,2CACA;;0BAEA;yBACA;oEACA;8DACA;mCACA;2DACA;AACA,AACA;;+BACA;AACA;AACA,AACA;AAZA;AAaA;;;;AxCxBA;;;;;;;;;;;;;AyCAA,AACA,AACA;;;AACA;AACA,sCACA;;0BAEA;;2BAEA;4BACA;kCACA;8BACA;iCACA;+BACA;mCACA;8BACA,AACA;AATA;6BAUA;4BACA;8BACA;4BACA;kCACA,AACA;AAjBA;AAkBA;;AACA;AACA,4EACA;qBACA,AACA;;uCACA,AACA;;AACA,AACA;;AACA,AACA;;gCACA;qCACA;qCACA;AACA,AACA;;mCACA;mCACA;AACA,AACA;;kCACA;kCACA;AACA,AACA;;sCACA;;gGAEA;8FACA;0GACA;4FACA;0FACA;gGACA;8FACA,AACA;AARA;uBASA;kDACA;AACA;AACA,AACA;;6CACA;2BACA,AACA;;qCACA;wCACA;6DACA;qCACA;kEACA;qCACA;AACA,AACA;;;uCAEA;oGACA;0BACA;sCACA;wCACA;mDACA;sDACA;6BACA;8DACA;oFACA;AACA;AACA;gDACA;AACA;;uDAEA;sDACA;0CACA,AACA;AAJA;AAKA;AACA;AACA;AAtBA,6CAuBA;mCACA;AACA;yCACA;AACA;+BACA;+BACA;yHACA;AACA;yGACA;mCACA;AACA;yDACA;AACA;AACA;AACA;mBACA;AACA;AACA;;;;AzCpHA;;;;;;;;;;;;;A0CAA,uEACA;;AACA,oCACA;;0BAEA;;+BAEA;2BACA;0BACA,AACA;AAJA;6BAKA;4BACA;8BACA;4BACA;kCACA,AACA;AAZA;AAaA;;AACA;AACA,8CACA;qBACA,AACA;;6CACA,AACA;;iCACA,AACA;;uCACA;;kCAEA,AACA,AACA;AAHA;;8CAIA,AACA;;gDACA;AACA;AACA;;;;A1CpCA;;;;;;;;;;;;;A2CAA,sEACA;;AACA,mCACA;;0BAEA;2DACA;wBACA;wCACA,AACA;;uDACA;qCACA;2BACA;2CACA;AACA,AACA;;yDACA;AACA;AACA;6EACA;iCACA;4CACA,AACA;;kCACA;AACA;AACA,AACA;;0EACA;AACA;AACA;6BACA;wCACA,AACA;;8BACA;AACA,AACA;;iFACA;sCACA;+CACA;qEACA;mCACA;qEACA;AACA,AACA;;AACA;4CACA;AACA;AACA;AACA,AACA;AA7CA;AA8CA;;;;A3ClDA;;;;;;;;;;;;;A4CAA,mEACA;;AACA,gCACA;;0BAEA;;+BAEA;0BACA;2BACA;4BACA;qCACA,AACA;AANA;6BAOA;4BACA;8BACA;4BACA;kCACA,AACA;AAdA;AAeA;;AACA;AACA,0CACA;qBACA,AACA;;iCACA,AACA;;AACA,AACA;;AACA,AACA;;gCACA;gCACA;6CACA;yDACA;AACA;AACA;AACA,AACA;;4CACA;oBACA,AACA;;2BACA,AACA;;+BACA;;sCAEA,AACA;AAFA;AAGA,AACA;;iCACA,AACA;;wCACA;mCACA;qEACA;uBACA;kEACA;AACA,AACA;;uBACA;AACA;AACA;;;;A5C7DA;;;;;;;;;;;;;A6CAA,sEACA;;AACA,mCACA;;0BAEA;;2BAEA;0BACA;2BACA,AACA;AAJA;+DAKA;uEACA;AACA;4BACA;8BACA;4BACA;kCACA;0DACA;AACA;gEACA;iCACA;8BACA;AACA,AACA;;+DACA;0CACA;8BACA;AACA;AACA,AACA;AA1BA;AA2BA;;AACA;AACA,0EACA;qBACA;6BACA,AACA;;iCACA;oCACA;2BACA;wBACA;0BACA,AACA;;AACA;2CACA;gDACA,AACA;;gCACA,uBACA,kCACA,kCACA,+BACA,gCACA,AACA,AACA;;8BACA,2BACA,+CACA,+CACA,4CACA,yCACA,AACA,AACA;;AACA,AACA;;AACA,AACA;;gCACA;uCACA;AACA;mDACA,AACA;;yCACA;AACA,AACA;;uCACA;AACA;6BACA;gCACA,AACA;;2BACA;yBACA;mDACA;AACA;qCACA;wCACA;AACA,AACA;;0EACA;AACA;yBACA;iDACA;AACA;yBACA;iDACA;AACA;yBACA;oEACA;AACA;AACA;AACA,AACA;;AACA,AACA;;8CACA;wCACA;AACA,AACA;;8BACA;wDACA,AACA;;;iCAEA,AACA,AACA;AAHA;;sEAIA,AACA;;yCACA,AACA;;yFACA;qCACA;2CACA,AACA;;sCACA;qCACA;sCACA;AACA;AACA,AACA;;mCACA;iCACA,AACA;;6CACA;uBACA;AACA;AACA,AACA;;iCACA;AACA;kDACA;iCACA;AACA;AACA;;;;;;A7C/IA;;;;;;;;;;;;;A8CAA,qEACA;;AACA,kCACA;;0BAEA;uBACA;+BACA;2BACA;0BACA;iCACA;4BACA;8BACA;gCACA;4BACA;mCACA,AACA;+DACA;0CACA;gFACA;AACA,AACA;;2BACA;AACA;4BACA;8BACA;4BACA;kCACA,AACA;AAxBA;AAyBA;;AACA;AACA,4FACA;qBACA,AACA;;4BACA;gCACA;iCACA,AACA;;AACA,AACA;;AACA;AACA;AACA;6DACA;AACA;AACA,AACA;;AACA,AACA;;gCACA;uCACA;AACA;AACA;uCACA;AACA,AACA;;gCACA;qDACA;AACA,AACA;;AACA;AACA;AACA;AACA;6EACA;6CACA;6DACA;AACA;uBACA;kDACA;AACA,AACA;;gEACA;wDACA;uBACA;uCACA;AACA,AACA;;+BACA;wEACA;0DACA;AACA;AACA,AACA;;AACA;6DACA;AACA,AACA;;kCACA;oBACA;oBACA;oBACA;oBACA,AACA;;6DACA;4CACA;uBACA;8BACA;AACA,AACA;;8DACA;6CACA;uBACA;+BACA;AACA,AACA;;mEACA,AACA;;8DACA;iCACA;kCACA;uBACA;AACA;AACA;6EACA;4DACA;8CACA;+BACA;yCACA;AACA;AACA;AACA,AACA;;uBACA;AACA,AACA;;2CACA;oBACA;oBACA;oBACA;oBACA;oBACA,AACA;;6DACA;4CACA;uBACA;8BACA;AACA,AACA;;mEACA;kDACA;AACA,AACA;;mEACA;kDACA;AACA,AACA;;wEACA,AACA;;gGACA,AACA;;mCACA;gEACA;0CACA;AACA;AACA;AACA,AACA;;4CACA;oBACA;oBACA;oBACA,AACA;;;kCAEA,AACA,AACA;AAHA;;wDAIA,AACA;;kCACA;AACA;4DACA;wDACA;kDACA;AACA;AACA;uBACA;0CACA;AACA,AACA;;kCACA;wCACA;8CACA;AACA;AACA;oEACA;2BACA;8CACA;AACA;AACA,AACA;;kDACA;AACA;qCACA;uBACA;qCACA;AACA,AACA;;gEACA;6DACA;uBACA;AACA;0FACA;AACA,AACA;;sDACA;sCACA,AACA;;wDACA;wCACA;AACA,AACA;;oDACA;yCACA;kDACA;AACA,AACA;;AACA;AACA;sDACA;AACA;qCACA;sCACA;AACA;AACA;AACA;;;;A9ClOA;;;;;;;;;;;;;A+CAA,mEACA;;AACA,gCACA;;0BAEA;;+BAEA;0BACA,AACA;AAHA;6BAIA;4BACA;8BACA;4BACA;kCACA,AACA;AAXA;AAYA;;AACA;AACA,qEACA;qBACA,AACA;;6BACA;iCACA;8BACA,AACA;;AACA,AACA;;AACA,AACA;;gCACA;4CACA;AACA,AACA;;wCACA;8EACA,AACA;;mCACA;gEACA;0CACA;AACA;AACA;AACA,AACA;;;6BAEA;kCACA,AACA;;;kCAEA,AACA,AACA;AAHA;;2BAIA,AACA;;sCACA,AACA;;AAXA;;;;;;;;AAYA;;wCACA;AACA,AACA;;;;;;;;;;;;;;;;;uDACA,AACA;;;;;;;;;AACA;;0CACA;AACA,AACA;;;;;;;;;;;;;;;;yCACA,AACA;;+EACA;sCACA;+BACA,AACA;;AACA;AACA;yCACA;8DACA;AACA;AACA;AACA,AACA;;uCACA;;0BAEA,AACA;AAFA;AAGA;AACA;;;;A/CrFA;;;;;;;;;;;;;AgDAA,mEACA;;AACA,gCACA;;0BAEA;;2BAEA;4BACA;oCACA,AACA;AAJA;6BAKA;4BACA;8BACA;4BACA;kCACA,AACA;AAZA;AAaA;;AACA;AACA,iDACA;qBACA,AACA;;iCACA,AACA;;AACA,AACA;;AACA,AACA;;gCACA;AACA;6DACA;AACA,AACA;;2CACA;oDACA;AACA;AACA;;;;AhDrCA;;;;;;;;;;;;;AiDAA,uEACA;;AACA,oCACA;;0BAEA;;+BAEA;2BACA;4BACA;gCACA,AACA;AALA;6BAMA;4BACA;8BACA;4BACA;kCACA,AACA;AAbA;AAcA;;AACA;AACA,0EACA;qBACA,AACA;;iCACA;4BACA,AACA;;AACA,AACA;;AACA,AACA;;gCACA;8CACA;AACA,AACA;;kCACA;AACA;oCACA;mEACA;AACA;AACA,AACA;;4CACA;oBACA;oBACA;;kCAEA,AACA,AACA;AAHA;;iCAIA,AACA;;2CACA;4GACA,AACA;;wEACA;uBACA;4DACA;AACA,AACA;;yDACA;AACA;yCACA;AACA;AACA;sDACA;AACA;AACA;AACA;AACA;;;;AjDpEA;;;;;;;;;;;;;AkDAA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA,mEACA;;AACA,gCACA;;0BAEA;;4BAEA,AACA;AAFA;6BAGA,AACA;AANA;AAOA;;;;AlDnBA;;;;;;;;;;;;;AmDAA,AACA,AACA,AACA;;;;AACA,wEACA;;AACA,iDACA;;AACA,sDACA;;0BAEA;uBACA;oDACA;qDACA;0CACA;qDACA;qEACA;AACA;AACA;AACA;AACA;oGACA;mEACA,AACA;;AACA;AACA;AACA;6FACA;AACA,AACA;;mEACA;yCACA;AACA,AACA;;+CACA,AACA;;AACA,AACA;;wCACA,AACA;;gEACA;AACA;AACA,AACA;AAlCA;AAmCA;;;;AnD7CA;;;;;;;;;;;;;AoDAA,oEACA;;AACA,iCACA;;0BAEA;2DACA;8DACA;8EACA,AACA;;AACA;oDACA;AACA;AACA,AACA;AAVA;AAWA;;;;ApDfA;;;;;;;;;;;;;AqDAA,iEACA;;AACA,8BACA;;0BAEA;;iCAEA;uCACA;+BACA,AACA;AAJA;6BAKA;4BACA;8BACA;kCACA,AACA;AAXA;AAYA;;AACA;AACA,oEACA;qBACA,AACA;;8BACA;wBACA;mCACA,AACA;;6BACA;sCACA;iCACA,AACA;;qBACA,AACA;;AACA,AACA;;gCACA;6BACA;mDACA;2DACA;6BACA;AACA,AACA;;0DACA;kEACA;6BACA;AACA,AACA;;4BACA;AACA;AACA;AACA;AACA;AACA,AACA;;mCACA;oBACA,AACA;;8CACA,AACA;;oDACA;8CACA;AACA,AACA;;kDACA;AACA;+BACA;uBACA;AACA;yCACA;kCACA;AACA,AACA;;4DACA;oCACA;AACA,AACA;;AACA;AACA;AACA,AACA;;0CACA;AACA;0CACA,AACA;;AACA;AACA;AACA;AACA,AACA;;yCACA;AACA;8CACA;oDACA;8CACA;AACA,AACA;;iCACA,AACA;;4DACA;wCACA;yCACA;AACA;AACA;AACA,AACA;;yCACA;+CACA,AACA;;gEACA;iCACA;AACA,AACA;;4EACA;mFACA;AACA,AACA;;+CACA;8CACA;oCACA;+BACA,AACA;;oDACA;8CACA;AACA,AACA;;0EACA,AACA;;0CACA;kDACA;kEACA;wCACA;gCACA;2BACA;8EACA;AACA,AACA;;4CACA;uBACA;4CACA;AACA,AACA;;uCACA;AACA;AACA;;;;ArD9IA;;;;;;;;;;;;;AsDAA,iEACA;;AACA,8BACA;;0BAEA;;2BAEA;4BACA;0BACA;4BACA;6BACA;sCACA;4BACA,AACA;AARA;+DASA;sCACA,AACA;;sCACA;AACA;qDACA;2BACA;kEACA;AACA,AACA;;2BACA;AACA;4BACA;8BACA;kCACA,AACA;AA1BA;AA2BA;;AACA;AACA,iEACA;qBACA,AACA;;0BACA,AACA;;sCACA,AACA;;AACA,AACA;;AACA,AACA;;gCACA;yCACA;AACA;6DACA;AACA;yCACA;2BACA;kEACA;AACA;0CACA;AACA;AACA;AACA;AACA,AACA;;AACA;AACA;4CACA;4FACA;wDACA;AACA,AACA;;4FACA;wDACA;AACA,AACA;;4FACA;wDACA;AACA,AACA;;4FACA;wDACA;AACA,AACA;;oHACA;2DACA;AACA,AACA;;oHACA;2DACA;AACA;AACA,AACA;;0CACA;oBACA;oBACA;oBACA;oBACA;oBACA,AACA;;qDACA;iCACA;uBACA;2BACA;AACA,AACA;;sDACA;qCACA;AACA,AACA;;AACA;0CACA;AACA;mEACA;sDACA,AACA;;AACA;2EACA;sEACA,AACA;;AACA;4CACA,AACA;;2BACA;AACA,AACA;;AACA;0CACA;AACA;mEACA,AACA;;AACA;2EACA,AACA;;AACA;4CACA,AACA;;2BACA;AACA,AACA;;0BACA;AACA;AACA;;;;AtDzIA;;;;;;;;;;;;;AuDAA,yEACA;;AACA,sCACA;;0BAEA;;8BAEA,AACA;AAFA;2DAGA;oDACA;AACA;oFACA;AACA;kCACA;AACA;AACA;AACA,AACA;AAdA;AAeA;;;;AvDnBA;;;;;;;;;;;;;AwDAA,iEACA;;AACA,8BACA;oDACA;kEACA;4CACA;iDACA;8CACA;AACA,AACA;;8BACA;AACA;AACA;AACA;AACA;;;;AxDfA;;;;;;;;;;;;;AyDAA,oEACA;;AACA,iCACA;oDACA;kEACA;wEACA;iEACA;qDACA;kDACA;AACA,AACA;;kCACA;AACA;2BACA;iEACA;qDACA;kDACA;AACA,AACA;;kCACA;AACA;AACA;AACA;AACA;AACA;;;;AzDzBA;;;;;;;;;;;;;A0DAA,mEACA;;AACA,gCACA;;0BAEA;4DACA;8CACA;mDACA;4BACA;4BACA;4BACA;4BACA,AACA;;4CACA,AACA;;AACA;gCACA;gCACA,AACA;;AACA;4BACA;iEACA;qCACA;gCACA;8DACA;yCACA;yCACA;AACA;AACA,AACA;;AACA;mCACA;8CACA,kBACA,kBACA,oCACA,AACA;4DACA;wDACA;AACA,AACA;;gEACA;+CACA;mCACA;qDACA;AACA;AACA;AACA;AACA,AACA;AA9CA;AA+CA;;;;A1DnDA;;;;;;;;;;;;;A2DAA,qEACA;;AACA,2CACA;;0BAEA;wDACA;AACA;oCACA;0CACA;wDACA;kDACA;2BACA;kDACA;AACA,AACA;;AACA;iDACA;oDACA;iFACA;0CACA;AACA;AACA;0DACA;2CACA;AACA;8CACA;8BACA;AACA;AACA,AACA;AA1BA;AA2BA;;;;A3D/BA;;;;;;;;;;;;;A4DAA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;AACA,iEACA;;AACA,8BACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;sFACA;AACA;0DACA;uDACA;yCACA;2BACA;wCACA;AACA;uBACA;oCACA;AACA;AACA,AACA;;;0BAEA;;2BAEA,AACA;AAFA;4BAGA;6BACA;4DACA;AACA;uEACA;gEACA;AACA,AACA;;AACA;oDACA;4EACA;AACA;AACA;AACA;AACA;+DACA;4DACA;gEACA;mCACA;oFACA;AACA,AACA;;mCACA;+BACA;8DACA;mCACA;AACA;AACA;AACA,AACA;AAlCA;AAmCA;;;;A5D7EA;;;;;;;;;;;;;A6DAA,mEACA;;AACA;AACA,0CACA;;2DAEA;AACA;qCACA,AACA;;AACA;oEACA;4CACA;AACA,AACA;;AACA;sEACA;yCACA;AACA;8CACA;AACA,AACA;;AACA;iEACA;yCACA;AACA,AACA;;oEACA;yCACA;AACA;AACA,AACA;AA1BA;AA2BA;;;;;;A7DhCA;;;;;;;;;;;;;A8DAA;AACA,6DACA;;AACA,0BACA;;0BAEA;;gCAEA;qCACA;iCACA;sCACA;yCACA,AACA;AANA;6BAOA;4BACA;8BACA;kCACA;;kCAEA;mCACA;gCACA,AACA,AACA;AALA;AAbA;AAmBA;;AACA;AACA,gEACA;qBACA;iEACA;;wBAEA;yBACA;2BACA;0BACA,AACA,AACA;AANA;;6BAOA,AACA;;gCACA;8BACA;8BACA,AACA;;AACA,AACA;;AACA,AACA;;gCACA;AACA;wEACA,AACA;;6IACA;AACA;qDACA;yCACA;AACA,AACA;;gCACA,AACA;;AACA;AACA;AACA,AACA;;6CACA;AACA;yDACA;AACA,AACA;;8CACA;AACA;kEACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;0DACA;AACA,AACA;;sCACA;qHACA;AACA;AACA;4CACA;6CACA;AACA,AACA;;wDACA;uBACA;sDACA;6CACA;AACA,AACA;;wDACA;AACA;AACA,AACA;;oCACA;mEACA;wDACA;uBACA;wDACA;AACA;AACA,AACA;;oCACA;oDACA;AACA;AACA;;;;A9DjHA;;;;;;;;;;;;;A+DAA,AACA,AACA;;;AACA,0CACA;;AACA;AACA,gDACA;;qBAEA;;;qCAGA;oCACA;sCACA,AACA,AACA;AALA;AADA;;2BAQA,AACA,AACA;AAHA;AATA;AAaA;;AACA,oEACA;;AACA;AACA,8CACA;iDACA;AACA;;;;A/D5BA;;;;;;;;;;;;;AgEAA,AACA,AACA;;;AACA,0CACA;;AACA;AACA,6CACA;;qBAEA;;;qCAGA;oCACA;sCACA,AACA,AACA;AALA;AADA;;2BAQA,AACA,AACA;AAHA;AATA;AAaA;;AACA,iEACA;;AACA;AACA,2CACA;iDACA;AACA;;;;AhE5BA;;;;;;;;;;;;;AiEAA,+DACA;;AACA;AACA,yCACA;;uBAEA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA;uBACA,AACA,AACA;AAVA;;+CAWA;mEACA;AACA;AACA;;;;AjEnBA;;;;;;;;;;;;;AkEAA,4DACA;;AACA;AACA,sCACA;mDACA;oBACA;0BACA,AACA;;4CACA;AACA;+DACA;gFACA;AACA;AACA,AACA;;uBACA;AACA;AACA;;;;AlElBA;;;;;;;;;;;;;AmEAA,2DACA;;AACA,AACA,AACA,AACA,AACA;;;;;AACA;AACA,qCACA;oCACA;oBACA;oBACA;AACA;+CACA;8DACA;2DACA;mFACA;8DACA;2DACA;uBACA;8DACA;4DACA;AACA,AACA;;uCACA;AACA;AACA;;;;AnE3BA;;;;;;;;;;;;;AoEAA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,qDACA;;AACA,wBACA;sDACA;8BACA;6BACA,AACA;;2BACA;AACA;4DACA;0CACA;AACA,AACA;;6BACA;AACA,AACA;;AACA;wDACA;AACA;AACA;;;;ApE3BA;;;;;;;;;;;;;AqEAA;AACA,4BACA;qCACA;4CACA;+BACA;AACA,AACA;;8BACA;AACA;AACA;;;;;;ArEVA;;;;;;;;;;;;;AsEAA,2BACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;AACA,oDACA;;AACA;AACA,uBACA;0BACA;;0CAEA;UACA;oBACA;YACA;sBACA;qEACA;AACA;eACA,AACA;;AACA,AACA;AAXA;AAYA;AACA;;AC9BA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;AACA,6BACA;mDACA;eACA;8FACA;qBACA;UACA;siBACA,AACA;;8BACA,AACA;;0CACA;8DACA;8DACA;kCACA;kCACA;0EACA;wDACA;qGACA,AACA;;AACA;uBACA;+EACA;qBACA;AACA,AACA;;AACA;uBACA;yGACA;qBACA;AACA,AACA;;kDACA;sCACA;sCACA;kCACA,AACA;;sBACA;oBACA;sBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;AACA,oDACA;oCACA;2BACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA,wBACA,AACA;;AACA;6BAEA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;mCACA,CACA,AACA;;oCACA;kEACA,AACA;;AACA;;qFAEA;4EACA;4EACA,AACA;AAJA;AAKA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;iDACA,CACA,AACA;;2CACA;yCACA,AACA;;AACA;;8EAEA;qEACA,AACA;AAHA;AAIA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;kEACA;uCACA;2CACA,AACA;;AACA;;sBAEA;iBACA,AACA;AAHA;AAIA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;sCACA;2BACA;sCACA;;SACA;eACA,AACA;;AACA;AACA;2DACA;2BACA;0BACA,AACA;;;AACA;;AACA;AACA;;AACA;oEACA;AACA,AACA;;AACA;iEACA,AACA;;mCACA;AACA;AACA,AACA,AACA;;AACA;AACA;AACA;mCACA,AACA;;AACA;AACA;AACA;AACA;0CACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;qDACA;AACA;;;AACA,AACA;;kDACA;0BACA;8DACA,AACA;;AACA;6EACA;6BACA;AACA;AACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;mEACA;kCACA,AACA;;;;AACA;;;AACA;;;AACA;;;AACA;mCACA;;;AACA;AACA;gCACA;;;AACA;AACA;gCACA;;;AACA;AACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;gDACA;wBACA;yBACA;mBACA,AACA;;0EACA;iDACA,AACA;;AACA;AACA;AACA;AACA;oFACA;wDACA;AACA,AACA;;kCACA;AACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;MACA,CACA,AACA;;8BACA;mBACA;qBACA,AACA;;yDACA;0BACA,AACA;;yDACA;6CACA,AACA;;6DACA;AACA;oDACA,AACA;;yBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;+DACA;AACA;SACA;yBACA;kEACA;AACA,AACA;;;6BACA,CACA,AACA;;oCACA,CACA,AACA;+DACA;6BACA,AACA;;AACA;AACA;wCACA,AACA;;uBACA;AACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;4CACA;2BACA,AACA;;sBACA;+DACA;AACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;wCACA;yBACA;kCACA;4BACA,AACA;;qBACA,oEACA,+CACA,kDACA,kFACA,iHACA,AACA,AACA;;6BACA,AACA;YACA;kBACA;AACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;4CACA;2BACA,AACA;;sBACA;;uBAEA;sBACA;uBACA,AACA;AAJA;AAKA,AACA;;YACA;AACA,AACA,AACA,AACA;;AAxoBA;;AAyoBA,AACA;;AACA;AACA;AACA;AACA,yBACA;;AACA;AACA;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA;;;;;;;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;eACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;uCACA;2BACA;oCACA;wBACA;AACA;AACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;2CACA;2BACA;gEACA;wBACA;AACA;AACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;sCAEA,AACA;;2BACA;mBACA,AACA;;SACA;mDACA;4BACA;YACA;;;AACA;AACA,AACA;;uDACA;2CACA;gCACA,AACA;;mCAhBA,CAiBA;2CACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;iEACA;mCACA;qDACA;mEACA;AACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;4CACA;kCACA;yBACA,AACA;YACA;sDACA;sCACA;AACA;cACA;AACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;qCACA;+CACA;+BACA;qBACA;AACA;AACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;+DACA;6CACA,AACA;;kBACA;mBACA;SACA,AACA;;;+CAEA;4BADA,CAEA,AACA;;uCACA;AACA;+BACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;6BACA;wCACA;AACA,AACA;;AA1MA,AACA;AA0MA;AACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;qBACA,AACA,AACA;;AACA,AACA,AACA,AACA;;;;2CACA;kCACA,AACA;;wDACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;6CACA;oBACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;sCACA;4BACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;mDACA;yBACA;0BACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;wCACA;4BACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;uCACA;yBACA;sCACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;kCACA;wCACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;0CACA;kCACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;0CACA;0BACA;gCACA;;SACA;iDACA;qCACA;SACA,AACA;;2CACA;6CACA;oBACA;AACA;AACA,AACA;;6CACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;gDACA;0BACA;gCACA;;SACA;iDACA;wCACA;SACA,AACA;;qEACA;iCACA;sBACA;2BACA;AACA;AACA,AACA;;6CACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;kCACA;wCACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;0CACA;6EACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;8CACA;sBACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;0CACA;8BACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;8CACA;wBACA;yBACA,AACA;;gDACA,AACA;;wFACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;gCACA,CACA,AACA;;sBACA;oBACA,AACA;;6BACA;sCACA;iDACA;AACA;AACA;0BACA;AACA,AACA,AACA;;AA/QA,AACA;;AA+QA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AACA,qCACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;wBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;4BACA,AACA,AACA;;AACA;+CACA,AACA,AACA;;AACA;qGACA,AACA,AACA;;AACA;mBACA,AACA,AACA;;;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;2BACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;sBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;eACA,AACA,AACA,AACA,AACA;;AAhCA,AACA;;AAgCA;AACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA;;;;;AACA,AACA,AACA,AACA,AACA;;;;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;AACA,AACA,AACA,AACA;;;;2CACA;kBACA,AACA;;0BACA;yBACA;0BACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;iCACA;;eAEA;8BACA;8CACA,AACA;AAJA;AAKA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;6CACA;;oCAEA,AACA,AACA;AAHA;;wCAIA;mBACA;uBACA;AACA;yBACA;wBACA;qBACA;AACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;mDACA;0BACA,AACA;;qBACA;aACA,AACA;YACA;2BACA;mCACA,AACA;;mEACA;6DACA;AACA;gCACA;AACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;8DACA;kCACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;gDACA;yBACA;+CACA,AACA;;mCACA;qCACA,AACA;;uCACA;2EACA,AACA;+CACA;4EACA,AACA;YACA;yEACA;AACA;AACA,AACA,AACA;;AA9JA,AACA;;AA8JA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;2BACA;2BACA;wBACA;;SACA;;SACA;kGACA,AACA;;;AAEA;AACA,2BACA,AACA;;AACA;AACA,oBACA,AACA;;AACA;AACA;AACA;+DACA,KACA,MACA,KACA,AACA,KACA,AACA;;AACA;AACA,qBACA;AACA,AACA;;AACA,oCACA,AACA;;AACA,AACA,QA5BA,EA6BA,AACA;;AACA;iCACA,AACA;;AACA;AACA,4BACA;2BACA;AACA,AACA,qBACA,AACA;;AACA,UACA,KACA,KACA,eACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;gCACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;0BAEA;SACA;qBACA;SACA;oBAJA,CAKA,AACA;;6DACA;kCACA;;UACA;;UACA;qCACA;iCACA;wDACA,AACA;;AACA;6BACA;oEACA;+BACA;AACA,AACA;;AACA;uBACA;0DACA;aACA;mEACA;AACA,AACA;;mCACA;AACA,AACA;;AACA;kCACA;gCACA,AACA;;AACA;gBACA;oEACA;+BACA;AACA;AACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;4EACA;iBACA;uGACA,AACA;;AACA;AACA;AACA;wEACA;0CACA;gDACA,AACA;;qBACA;8CACA;2BACA;AACA;uBACA;gDACA;6BACA;AACA;AACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;gFACA;;cAEA;YACA;oCACA,AACA;AAJA;AAKA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;0FACA;;cAEA;YACA;uBACA;eACA,AACA;AALA;AAMA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;8DACA;yEACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;0DACA;uEACA;AACA,AACA,AACA;;AArPA,AACA;;AAqPA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA;;;;;YACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;UACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;2CACA;kCACA,AACA;;8CACA;4CACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;6BACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;oCACA;iBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;gCACA;iBACA;AACA,AACA;;AAnEA,AACA;AAmEA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA;;;;;;aACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;gCACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;sCACA;iBACA;AACA,AACA;;AA7BA,AACA;AA6BA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA;;;;;aACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;aACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;gCACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;sCACA;iBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;oCACA;iBACA;AACA,AACA;;AAhDA,AACA;AAgDA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA;;;;;gCACA;YACA;AACA,AACA;;AAVA,AACA;AAUA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA;;;;;gCACA;YACA;AACA,AACA;;AAVA,AACA;AAUA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,AACA,AACA,AACA,AACA;;;;;2CACA;iDACA;kDACA;6CACA,AACA;;2BACA;4BACA;uBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;6BACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;8CACA;iBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;0CACA;mBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;oCACA;iBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;mCACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;mCACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;wDACA;kBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;kCACA;kCACA;AACA,AACA,AACA;;AApJA,AACA;;AAoJA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,AACA,AACA,AACA,AACA;;;;;2CACA;6DACA,AACA;;qCACA,AACA;;sBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;gCACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;kCACA;iBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;6BACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;iBACA;AACA,AACA;;AA7DA,AACA;AA6DA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,AACA,AACA,AACA,AACA;;;;;2CACA;6DACA,AACA;;AACA;uCACA,AACA;;4BACA;wBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;gCACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;8CACA;iBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;sCACA;iBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;4BACA;wBACA,AACA;;aACA;WACA;+CACA;WACA;oDACA;WACA;sDACA,AACA;;;AACA;qEACA,AACA;;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;uBACA;AACA,AACA,AACA;;AA/FA,AACA;;AA+FA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AACA,AACA,AACA,AACA,AACA;;;;;2CACA;6DACA,AACA;;sCACA;+CACA,AACA;;uBACA;yBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;gCACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;oCACA;iBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;uDACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;iBACA;AACA,AACA,AACA;;AAhFA,AACA;;AAgFA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,AACA,AACA,AACA,AACA;;;;;2CACA;6DACA,AACA;;2CACA;uCACA,AACA;;wBACA;4BACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;gCACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;sCACA;iBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;8CACA;iBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;kBACA;WACA;4CACA;WACA;8CACA,AACA;;;AACA;0EACA,AACA;;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;uBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;wDACA;sFACA;4BACA,AACA;;sBACA;4BACA;AACA;YACA;AACA,AACA,AACA;;AA5GA,AACA;;AA4GA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;AACA,AACA,AACA,AACA,AACA;;;;;2CACA;6DACA,AACA;;oHACA;mCACA;uDACA;4DACA;kDACA;yDACA,AACA;;6BACA;oBACA;iCACA;sCACA;4BACA;mCACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;uBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;oBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;2BACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;uBACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;gCACA;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;gDACA;iBACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;8BACA;oBACA,AACA;;AACA;2FACA;mCACA,AACA;;+BACA;AACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;;oBAEA,AACA;;uCAFA,CAGA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4CACA;2BACA,AACA;;qCACA;AACA;oDACA;AACA;kCACA;0CACA;AACA;+BACA;uCACA;AACA;kCACA;yDACA;AACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA;;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;uDACA;gDACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;iDACA;oDACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;4EACA;qDACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;kEACA;2DACA;wCACA;AACA;YACA;AACA,AACA;;AAtPA,AACA;AAsPA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,AACA,AACA,AACA,AACA;;;;;2CACA;0CACA,AACA;;2BACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;kCACA,AACA;;AA/BA,AACA;AA+BA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;8BACA;iDACA;;SACA;2CACA;kDACA,AACA;;mCAEA,wBACA,+BACA;AAHA,iBAIA;AACA,AACA,AACA;;AACA,AACA,AACA;;;8CACA;6BACA;2BACA;mBACA;SACA,AACA;;wDACA;8BACA,AACA;;;mBAEA;oBACA;qBACA;cACA,AACA;AALA;AAMA,AACA;;YACA;AACA,AACA;;AA9CA,AACA;AA8CA;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;4FACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;mFACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;2CACA;iEACA,AACA;;4BACA;AACA,AACA,AACA;;AACA,AACA,AACA;;;8CACA;6BACA;iCACA;4BACA;2BACA;mBACA;SACA,AACA;;wDACA;yBACA;0CACA,AACA;;AACA;AACA;AACA;;+BAEA;uCADA,CAEA,AACA;;;oBAEA;qBACA;gBACA;qBACA;iBACA,AACA;AANA;AAOA;AACA,AACA;;YACA;AACA,AACA;;AA9EA,AACA;AA8EA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;sFACA,AACA;;AACA,AACA,AACA;;;8CACA;6BACA;2BACA;mBACA;SACA,AACA;;;AAEA;8BACA;;UACA;4BAHA,CAIA,AACA;;;mBAEA;oBACA;qBACA;eACA;iBACA,AACA;AANA;AAOA,AACA;;YACA;AACA,AACA;;AA1CA,AACA;AA0CA;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;yFAEA;4FACA,AACA,AACA;AAJA;;AAKA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;mFACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;2CACA;iEACA,AACA;;4BACA;AACA,AACA,AACA;;AACA,AACA,AACA;;;8CACA;iDACA;iCACA;4BACA;2BACA;mBACA;SACA,AACA;;wBACA;aACA;AACA,AACA;;wDACA;yBACA;0CACA,AACA;;AACA;AACA;AACA;;;WAEA;sCADA,CAEA,AACA;;;oBAEA;qBACA;gBACA;qBACA;iBACA,AACA;AANA;AAOA;AACA,AACA;;YACA;AACA,AACA,AACA;;AA9EA,AACA;;AA8EA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA;;;;;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BACA;;SACA;;SACA;2CACA;;SACA;gDACA,AACA;;;AACA;AACA;iIACA,AACA;;+BAEA;UACA;iBACA,wBACA,QACA,AACA,KACA,AACA,UACA;cACA;cACA,wBACA,QACA,AACA,KACA,AACA,UACA;cACA;8BACA,gBACA,QACA,KACA,AACA,0CACA;AAxBA,iBAyBA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;oBACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;kBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;mBACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;2CACA;iEACA,AACA;;kDACA;yDACA,AACA;;4BACA;mCACA;AACA,AACA,AACA;;AACA,AACA,AACA;;;8CACA;6BACA;4BACA;mCACA;2BACA;mBACA;SACA,AACA;;wDACA;2BACA;iCACA;8BACA;2CACA;;AACA;uCACA;yBACA;8DACA;0CACA,AACA;;mFACA;AACA;AACA,AACA;;AACA;AACA;0CACA;AACA;AACA,AACA;;AACA;AACA;AACA;AACA;qFACA;AACA;AACA,AACA;;AACA;AACA;AACA;yDACA;2DACA;aACA;AACA;4DACA;qBACA;4CACA;AACA;AACA,AACA;;2EACA;+BACA,AACA;;;mBAEA;oBACA;eACA;qBACA;YACA;yBACA;gCACA;oBACA;2BACA,AACA;AAVA;AAWA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;sFACA;sDACA,AACA;;2BACA;gDACA;iDACA;uEACA;0EACA,AACA;;0CACA;cACA;AACA;AACA,AACA;;YACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;gGACA;oBACA;cACA;AACA,AACA;;kBACA;yBACA;gCACA;gCACA;AACA,AACA;;cACA;uBACA;uBACA;cACA;AACA,AACA;;sBACA;sCACA;4CACA;aACA;AACA,AACA;;aACA;AACA,AACA;;AAxSA,AACA;AAwSA;AACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;AACA;;AAGA,AACA,AACA,AACA,AACA,AACA;;;;;;0BACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;oBACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;mCACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;aACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;;;;;0DACA;AACA,oDACA,0FACA;+EACA;sCACA,AACA;OACA;aACA;AACA,AACA;;YACA;AACA,AACA,AACA;;gEACA;+EACA;0CACA,AACA;;0BACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;gEACA;kEACA,AACA;;yDACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;;;;;4GACA;iIACA;AACA,AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;sHACA;uCACA;sDACA;YACA;aACA;AACA;AACA,AACA;;AArJA,AACA;AAqJA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;AACA,uFACA;6DACA;AACA;;AACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;AACA,mFACA;mCACA;YACA;AACA;sDACA;cACA;6BACA;wDACA;AACA;2FACA;AACA;;AACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;AACA,kFACA;;AACA;kBACA;kBACA;8BACA;gBACA;4BACA;sCACA;AACA;0BACA;gBACA;0BACA;sCACA;AACA;0BACA;gBACA;0BACA;sCACA;AACA;0BACA;gBACA;2BACA;sCACA;AACA;0BACA;gBACA;8BACA;AACA;AACA;YACA;AACA,AACA;;6CACA;eACA;uCACA;6BACA;AACA;sBACA;oBACA;AACA;sBACA;0BACA;AACA;uBACA;0BACA;AACA;0BACA;0BACA;AACA;YACA;AACA,AACA;;gFACA;mEACA;iCACA;qCACA;eACA;wBACA;2BACA;AACA;6DACA;AACA;mCACA;YACA;AACA;sDACA;2BACA;AACA;sBACA;yCACA;qBACA;AACA;0DACA;qBACA;AACA;AACA;mCACA;YACA;AACA;qBACA;iDACA;oBACA;AACA;mCACA;YACA;AACA;AACA;cACA;qBACA;mBACA;AACA;uCACA;4CACA;mGACA;AACA;yDACA;AACA;uBACA;qBACA;kCACA;AACA;sBACA;kCACA;AACA;sBACA;yDACA;sDACA;6CACA;AACA;2DACA;oFACA;YACA;aACA;AACA;AACA;yBACA;iCACA;qDACA;kDACA;yCACA;AACA;4DACA;iFACA;YACA;aACA;AACA;AACA;sCACA;kCACA;kDACA;sCACA;AACA;AACA;mCACA;YACA;AACA;cACA;6BACA;wDACA;AACA;2FACA;AACA;;AACA,UACA;AACA;;;;AvE77HA;;;;;;;;;;;;;AwEAA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;AACA,6DACA;;AACA;AACA,uCACA;6CACA;0CACA;+FACA,AACA;;6EACA;mGACA,AACA;;8CACA;AACA;qEACA;AACA,AACA;;8DACA;AACA,AACA;;uBACA;AACA;AACA;;;;AxE/BA;;;;;;;;;;;;;AyEAA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;AACA,4DACA;;AACA;AACA,+BACA;kCACA;oDACA;AACA;AACA;;;;AzEfA;;;;;;;;;;;;;A0EAA,mEACA;;AACA;AACA,0CACA;kCACA;+CACA;AACA;AACA;;;;A1ERA;;;;;;;;;;;;;A2EAA,0DACA;;AACA;AACA,2DACA;6BAEA,uBACA;;4CAGA,AACA,AACA,AACA;AAJA;AADA,aAHA;AASA;;;;A3EdA;;;;;;;;;;;;;A4EAA,0DACA;;AACA;AACA,sCACA;uBACA;2BACA,AACA;;+BACA,AACA;;AACA,AACA;;AACA,AACA;;gCACA;AACA;AACA,AACA;;+BACA;kCACA;iCACA;qCACA;uBACA;AACA;2DACA;yDACA;yCACA;AACA;AACA,AACA;;gCACA;AACA,AACA;;mBACA;AACA;;;;A5ElCA;;;;;;;;;;;;;A6EAA,AACA,AACA,AACA;;;;AACA,0DACA;;AACA;AACA,uCACA;AACA;;AAEA;iCACA;AACA;gCACA,AACA,AACA;AANA;;;AAQA;iCACA;AACA;gCACA,AACA;AALA;AAMA;;;;A7EvBA;;;;;;;;;;;;;A8EAA,2DACA;;AACA,4BACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;wDACA;qFACA,AACA;;sEACA;wCACA,AACA;;AACA;2DACA;AACA;2EACA;0EACA;8DACA;uDACA;AACA,AACA;;uDACA;uDACA;AACA,AACA;;uGACA;uDACA;AACA,AACA;;wDACA;kHACA;0FACA;oEACA;AACA,AACA;;2DACA;AACA;AACA;AACA;AACA,AACA;;wCACA;AACA;AACA,AACA;;uBACA;AACA,AACA;;6DACA;oCACA,AACA;;uDACA;mFACA,2CACA;2EACA;+CACA;AACA;AACA;AACA,AACA;;uBACA;AACA,AACA;;4DACA;AACA;6BACA;gCACA,AACA;;wBACA;yBACA;iEACA;AACA;qCACA;wCACA;AACA,AACA;;qFACA;AACA;yBACA;0DACA;AACA;yBACA;sDACA;AACA;yBACA;wEACA;AACA;AACA;AACA,AACA;;AACA,AACA;;8EACA;wBACA;yBACA;mEACA;AACA;yBACA;iEACA;AACA;yBACA;6DACA;AACA;yBACA;4DACA;AACA;AACA;AACA,AACA;;AACA;AACA;;;;A9EpHA;;;;;;;;;;;;;A+EAA,4DACA;;AACA,6BACA;2EACA;AACA;oCACA;2CACA;2CACA,AACA;;8CACA,AACA;;qCACA;8CACA;AACA,AACA;;iDACA;6DACA;AACA,AACA;;qDACA;kEACA;8CACA;+CACA;AACA;2BACA;6CACA;wDACA;iEACA;mCACA;0DACA;AACA;AACA;AACA;AACA,AACA;;mDACA;uDACA;AACA,AACA;;AACA;qDACA;iFACA;AACA,AACA;;iDACA;2EACA;AACA,AACA;;AACA;iEACA;AACA,AACA;;6DACA;+CACA;sDACA,AACA;;+DACA;yCACA;uDACA;AACA;AACA,AACA;;iDACA;0EACA;6CACA;kEACA;AACA;AACA;AACA;AACA,AACA;;mEACA;kCACA;0EACA;0CACA;AACA;uBACA;mEACA;0CACA;AACA;AACA,AACA;;0BACA;AACA,AACA;;+EACA;sCACA;AACA;8EACA;sEACA;mEACA;+DACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;A/ElGA;;;;;;;;;;;;;AgFAA,0DACA;;AACA;AACA,mCACA;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;mDACA;oBACA;oBACA;oBACA;oBACA,AACA;;AACA;yBACA,AACA;;AACA;8FACA;wCACA;AACA;iEACA;AACA;sEACA;4DACA;qEACA,AACA;;AACA;4FACA;4EACA;AACA;mCACA;AACA;4EACA;gEACA;AACA;AACA;AACA,AACA;;yCACA;0EACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA;;;;+CACA;4DACA;2IACA;2CACA;oDACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA;;;;8CACA;AACA;qCACA;0BACA,AACA;;wEACA;wEACA;AACA;AACA;8DACA;wEACA;8GACA;mEACA;sDACA;AACA;qEACA;AACA;6CACA;AACA;AACA,AACA;;+CACA;yHACA;iEACA;8DACA;2EACA;8DACA;AACA;AACA;AACA;AACA,AACA;;uBACA;AACA,AACA;;AACA,AACA,AACA;;;uCACA;AACA;4CACA;AACA;AACA;;;;AhF5GA;;;;;;;;;;;;;AiFAA,6DACA;;AACA,8BACA;gDACA;yCACA;mDACA;uCACA,AACA;;8EACA;AACA;AACA;;;;AjFXA;;;;;;;;;;;;;AkFAA,6DACA;;AACA;AACA,8BACA;sBACA;gEACA;sBACA;AACA,AACA;;;;wCAGA;4CACA;wCACA,AACA;AAJA;;;+BAOA;8BACA,uEACA,uCACA,wCACA;0CACA,AACA;AAPA;;sCASA;qCACA;2CACA;sCACA;qCACA;oCACA;mCACA,AACA;AARA;;+BAUA;sCACA,AACA;AAHA;;qCAKA;2CACA;sCACA;qCACA,AACA;AALA;;mCAOA;mCACA;8BACA;8BACA;oCACA,AACA;AANA;;+BAQA,AACA;AAFA;;+BAIA,AACA;AAFA;;0CAIA;yCACA;kDACA;+CACA,AACA;AALA;;yCAOA;2CACA,AACA,AACA;AAJA;AA/CA;;;qCAsDA,AACA;AAFA;uCAGA;uCACA,AACA,AACA;AAPA;AA1DA;AAkEA;;;;AlF5EA;;;;;;;;;;;;;AmFAA,kEACA;;AACA;AACA,kEACA;mCACA,AACA;;AACA,AACA;;2DACA;AACA;kEACA;+DACA;0CACA;qEACA;AACA;AACA;6EACA;0DACA;kDACA;gEACA;AACA;gDACA;AACA;AACA;AACA;AACA;AACA,AACA;;6CACA;oBACA;AACA;6CACA;0HACA;uBACA;4GACA;AACA;;;mBACA;6DACA;mDACA;iCACA;6BACA;qGACA;AACA;6BACA;qGACA;AACA;6BACA;AACA;AACA;;kDAEA;0DACA;AAFA,gCAGA;AACA;AACA;AACA,AACA;;iCACA;+DACA;AACA;AACA,AACA;;gDACA;AACA;AACA;+CACA;kCACA;oEACA;wEACA;AACA;AACA;AACA;gEACA;uCACA;4CACA;sCACA;oEACA;uBACA;AACA;AACA;AACA;;;;;;AnFjFA;;;;;;;;;;;;;AoFAA,6DACA;;AACA;AACA,uCACA;gDACA;oEACA;6FACA;+BACA;mGACA;AACA;2BACA;AACA;AACA,AACA;;mDACA;gGACA;6FACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;8DACA;AACA;6CACA;0DACA;oBACA;oBACA,AACA;;8DACA;AACA;AACA;0CACA;8DACA;+CACA;AACA;AACA;uBACA;AACA;uCACA;AACA,AACA;;uBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;4DACA;oBACA,AACA;;8HACA;2BACA;uBACA;;kCAEA,AACA,AACA;AAHA;;kCAIA;AACA,AACA;;uBACA;AACA,AACA;;0DACA;yCACA;mEACA;+CACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;gDACA;2CACA;oCACA;oBACA,AACA;;AACA;uDACA;+FACA;AACA,AACA;;uBACA;AACA;AACA;;;;ApFrGA;;;;;;;;;;;;;AqFAA,2DACA;;AACA;AACA,0CACA;mCACA;mCACA;yCACA,AACA;;;AACA;;;oBACA,AACA;;AACA;0CACA,AACA;;uEACA,AACA;;kCACA;AACA;2CACA;AACA;;2EAEA;kCACA;kCACA,AACA;AAJA;AAKA;uBACA;AACA;oFACA;AACA,AACA;;uBACA;AACA,AACA;;4DACA;oBACA;oBACA,AACA;;kCACA;8DACA;gDACA;kCACA,AACA;;AACA;kDACA;mEACA;AACA,AACA;;sEACA,AACA;;uBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;6EACA;kCACA,AACA;;+BACA;AACA;4DACA;AACA,AACA;;sDACA;+JACA;uBACA;wCACA;2EACA;AACA,AACA;;wCACA;2EACA;AACA;AACA,AACA;;AACA;qFACA;AACA,AACA;;mBACA;AACA;;;;ArFtFA;;;;;;;;;;;;;AsFAA,8DACA;;AACA;AACA,qEACA;AACA;AACA;AACA;8DACA;2CACA;iDACA;oDACA;kCACA;AACA;yCACA;AACA;AACA,AACA;;mDACA;oDACA;AACA;AACA;yCACA;AACA,AACA;;oDACA;AACA;AACA;yCACA;AACA,AACA;;oDACA;AACA;AACA;8CACA;AACA;yCACA;AACA,AACA;;oDACA;AACA;AACA;8CACA;AACA;yCACA;AACA;AACA,AACA;;oDACA;4DACA;AACA;8DACA;AACA;gGACA;kEACA;AACA;AACA;8CACA;uBACA;gGACA;kEACA;AACA;AACA;8CACA;uBACA;sGACA;kEACA;AACA;AACA;8CACA;AACA;sGACA;kEACA;AACA;AACA;8CACA;AACA;0DACA;kEACA;AACA;AACA;uEACA;kDACA;8EACA;kDACA;AACA;AACA;uBACA;AACA;qCACA;AACA,AACA;;AACA;8CACA;gDACA;iCACA;4DACA;AACA;AACA,AACA;;qCACA;sCACA,AACA;;6DACA;wDACA;+EACA;yDACA;AACA;AACA;2DACA;qDACA,AACA;;AACA;AACA;yFACA;6DACA;mCACA;wDACA;AACA;kCACA;2BACA;AACA;AACA;AACA;AACA;;;;AtF5HA;;;;;;;;;;;;;AuFAA,4DACA;;AACA;AACA;AACA;;2CACA,4BACA,sCACA,wBACA,AACA;;4BACA;qBACA,AACA;;2BACA;+EACA;yFACA,AACA;;AACA;;0CACA;;;0CACA;;kDACA;kDACA;oDACA;AACA;AACA,AACA;;AACA;kDACA;qDACA;qCACA;AACA;AACA,AACA;;;AACA;;8CACA;AACA,AACA;;;AACA;;AACA;0CACA;;;;;;;AACA;;iCACA;AACA;;;;;;;;;;;;;;;AACA;AACA;;;;AvF5CA;;;;;;;;;;;;;AwFAA,0DACA;;AACA,2BACA;4DACA;oBACA,AACA;;+EACA;AACA;2BACA;AACA,AACA;;AACA;wCACA,sBACA,+CACA,mBACA,AACA;;4CACA;2BACA;AACA,AACA;;AACA;8DACA;AACA;uCACA;AACA,AACA;;gDACA;mDACA;wDACA;AACA,AACA;;wCACA;AACA,AACA;;kDACA;4DACA;AACA,AACA;;qCACA,AACA;;uBACA;AACA,AACA;;kFACA;AACA;+CACA;qEACA;AACA;0EACA;2CACA;AACA;AACA;AACA;AACA,AACA;;+CACA;AACA;;;wBACA;AACA,AACA;;2DACA;2BACA;2CACA;wBACA,AACA;;uBACA;AACA,AACA;;gEACA;0BACA;iDACA;oBACA,AACA;;;mCAEA;6BACA;2BACA;8BACA;2BACA,AACA,AACA;AAPA;;sDAQA;qCACA;0CACA,AACA;;2FACA;qDACA;6DACA;+CACA;2DACA;6CACA;gEACA;gDACA;+BACA;6CACA;AACA;2BACA;yCACA;AACA;AACA,AACA;;uBACA;AACA,AACA;;8DACA;wBACA;oBACA,AACA;;0BACA;AACA;qCACA;uBACA;8BACA;AACA,AACA;;AACA;sCACA;6CACA,AACA;;oEACA;AACA;AACA;AACA,AACA;;+BACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;sDACA;yBACA;4CAEA;4BACA;6BACA,AACA,AACA;AALA;AAMA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;+CACA;mCACA;AACA,AACA;;qDACA;0kEACA;wEACA;oCACA,AACA;;AACA;qCACA;uDACA;8CACA;AACA;AACA;+CACA;AACA;AACA;AACA;;;;AxFxKA;;;;;;;;;;;;;AyFAA,AACA,AACA,AACA,AACA;;;;;AACA,+DACA;;AACA;AACA,uCACA;iDACA;wCACA;AACA,AACA;;0CACA;8BACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;wEACA;+DACA,AACA;;oBACA;uCACA,AACA;;oDACA;gCACA;0DACA;2BACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;mFACA;oBACA;oBACA;oBACA,AACA;;oBACA;8BACA;6CACA;mCACA,AACA;;2CACA;gCACA;wDACA;2BACA;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;iEACA;oDACA,AACA;;0DACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;4EACA;8BACA;6CACA;gCACA,AACA;;iEACA;AACA,AACA;;mBACA;AACA;;;;;;;;AzF1FA;;;;;;;;;;;;;A0FAA,wFACA;yGACA;;sBAEA;4BACA,AACA;AAHA;AAIA;;AACA,AACA,AACA,AACA;;;;YACA;AACA;;2BACA;2BACA;yBACA;yBACA;wBACA;6BACA;AACA,AACA;;AACA,AACA,AACA,AACA;;;;;YACA;AACA,AACA,AACA,AACA;;;;;AACA;;mCACA;+BACA;6BACA;uEACA;4BACA;gCACA;AACA,AACA;;AACA,AACA,AACA,AACA;;;;;;;;gEACA;sDACA;yCACA;AACA,AACA;;AACA,AACA,AACA;;;;;;qDACA;AACA;;iCAEA;iCACA;8BACA;8BACA;8BACA;mCACA,AACA,AACA;AARA;;AASA;;iCAEA;iCACA;iCACA;+BACA;+BACA,AACA;AANA;AAOA,AACA;;;;;;AACA,AACA,AACA,AACA;;;;;YACA;;AACA;;4BACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;6DACA;;gCAEA;8BACA;gCACA,AACA,AACA;AALA;;+CAMA;+CACA;4DACA;+BACA;4FACA;AACA;AACA;AACA,AACA,AACA;;;;;;YACA;AACA;;wBACA;AACA,AACA;;AACA,AACA,AACA,AACA;;;;;YACA;;AACA;;4CACA;6BACA,AACA;;4CACA;kCACA;mCACA;qCACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;AACA;;;AACA;kDACA;2FACA;sDACA;uCACA;uCACA;AACA;AACA,AACA;;;;;;;;A1F9IA;;;;;;;;;;;;;A2FAA,2CACA;;AACA;AACA,6CACA;;qBAEA;;;qCAGA;oCACA;sCACA,AACA,AACA;AALA;AADA;;2BAQA,AACA,AACA;AAHA;AATA;AAaA;;AACA,kEACA;;AACA,mGACA;AACA,qFACA,yCACA;qBACA,AACA;;0CACA,AACA,AACA;;AACA;AACA,AACA;;AACA,AACA;;4BACA;AACA;qCACA;AACA;mBACA;AACA,AACA;;sCACA;AACA,AACA,AACA,AACA;;;;mCACA,CACA,WACA,WACA,wBACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;2EACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;2DACA;AACA;mBACA;AACA,AACA;AACA;;;;A3FxEA;;;;;;;;;;;;;A4FAA,6DACA;;AACA;AACA,6EACA;kCAEA,mBACA;;yBAGA;4BACA;;8BAEA,AACA;AAFA;wEAGA;wDACA;sCACA;mFACA;iEACA;6CACA;AACA;AACA,AACA;;;qCAEA;4CACA,AACA;AAHA;AAIA,AACA;AApBA;;4BAsBA;;4BAEA,AACA,AACA;AAHA;AAFA;;4BAOA;;4BAEA,AACA,AACA;AAHA;AAFA;;6BAOA;4CACA;yBACA,AACA;AAJA;;4CAMA;yBACA;wEACA;0DACA,AACA;;8EACA;0DACA;qDACA;AACA;AACA,AACA;;+BACA;AACA,AACA;AAdA;;6BAgBA,AACA,AACA,AACA,AACA;AALA;AAtDA,aAHA;;2BA+DA;6BACA;sCACA;gCACA,AACA;;AACA,AACA;;8BACA;uDACA,AACA;;;qCAEA;8BACA;6BACA;0BACA,AACA;AALA;AAMA,AACA;;0DACA;oBACA;8DACA,AACA;;sCACA;yDACA;AACA,AACA;;8DACA,AACA;;uBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;AACA;;;;;uBAEA;iCACA;0BACA;0DACA;iCACA;AALA,mCAMA;2BACA;mBACA;AACA,AACA;;yCACA;AACA;uBACA,sCACA,6CACA,2CACA,+CACA,AACA;AACA,AACA;;mBACA;AACA;;;;A5F1IA;;;;;;;;;;;;;A6FAA,0CACA;;AACA;AACA,4CACA;;qBAEA;;;qCAGA;oCACA;sCACA,AACA,AACA;AALA;AADA;;2BAQA,AACA,AACA;AAHA;AATA;AAaA;;AACA,gEACA;;AACA,kGACA;AACA,oFACA,yCACA;qBACA,AACA;;0CACA,AACA,AACA;;AACA;AACA,AACA;;AACA,AACA;;4BACA;AACA;qCACA;AACA;mBACA;AACA,AACA;;sCACA;AACA,AACA,AACA,AACA;;;;mCACA,CACA,WACA,WACA,wBACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;2EACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;2DACA;AACA;mBACA;AACA,AACA;AACA;;;;A7FxEA;;;;;;;;;;;;;A8FAA,4DACA;;AACA;AACA,6EACA;kCAEA,mBACA;;yBAGA;4BACA;;8BAEA,AACA;AAFA;wEAGA;wDACA;sCACA;mFACA;iEACA;6CACA;AACA;AACA,AACA;;;qCAEA;4CACA,AACA;AAHA;AAIA,AACA;AApBA;;4BAsBA;;4BAEA,AACA,AACA;AAHA;AAFA;;4BAOA;;4BAEA,AACA,AACA;AAHA;AAFA;;6BAOA;4CACA;yBACA,AACA;AAJA;;4CAMA;yBACA;wEACA;0DACA,AACA;;8EACA;0DACA;qDACA;AACA;AACA,AACA;;+BACA;AACA,AACA;AAdA;;6BAgBA,AACA,AACA,AACA,AACA;AALA;AAtDA,aAHA;;2BA+DA;6BACA;sCACA;gCACA,AACA;;AACA,AACA;;8BACA;uDACA,AACA;;;qCAEA;8BACA;6BACA;0BACA,AACA;AALA;AAMA,AACA;;0DACA;oBACA;8DACA,AACA;;sCACA;yDACA;AACA,AACA;;8DACA,AACA;;uBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;AACA;;;;;uBAEA;iCACA;0BACA;0DACA;iCACA;AALA,mCAMA;2BACA;mBACA;AACA,AACA;;yCACA;AACA;uBACA,sCACA,6CACA,2CACA,+CACA,AACA;AACA,AACA;;mBACA;AACA;;;;A9F1IA;;;;;;;;;;;;;A+FAA,+DACA;;AACA,4BACA;mCACA;8DACA;AACA;AACA;;;;A/FPA;;;;;;;;;;;;;AgGAA,6DACA;;AACA;AACA,+CACA;yCACA;;AAEA;uDACA;oDACA,AACA;;iDACA;4FACA;AACA,AACA;;wCACA;AACA;sDACA;2BACA;AACA;qCACA;AACA,AACA;;2BACA;AACA,AACA,AACA;AApBA;;kCAsBA,mBACA;;2BAGA;wEACA;gDACA;AACA,AACA;AALA;;2BAOA;6BACA,AACA;AAHA;;yBAKA;4BACA;wEACA;wDACA;sCACA,AACA;;mFACA;iEACA;6CACA;AACA;AACA,AACA;;;qCAEA;4CACA,AACA;AAHA;AAIA,AACA;AAlBA;;4BAoBA;yBACA;6BACA,AACA;AAJA;;4BAMA;yBACA;iCACA,AACA;AAJA;;4BAMA;;4BAEA,AACA;AAFA;iCAGA,AACA;AANA;;4BAQA;yBACA;iCACA,AACA;AAJA;;4BAMA;yBACA,AACA;AAHA;;4BAKA;yBACA,AACA;AAHA;;4BAKA;yBACA,AACA;AAHA;;yBAKA,AACA,AACA,AACA,AACA;AALA;AAhEA,aAHA;;mBAyEA;AACA;;;;AhGrGA;;;;;;;;;;;;;AiGAA,kEACA;;AACA;AACA,sCACA;sCAEA,wBACA;;6BAGA,AACA;AAFA;;yBAIA;4BACA;wEACA;wDACA;sCACA,AACA;;mFACA;iEACA;6CACA;AACA;AACA,AACA;;;qCAEA;4CACA,AACA;AAHA;AAIA,AACA;AAlBA;;4BAoBA;yBACA;6BACA,AACA,AACA,AACA,AACA;AAPA;AAvBA,aAHA;;mBAkCA;AACA;;;;AjGxCA;;;;;;;;;;;;;AkGAA,qEACA;;AACA,qCACA;;0BAEA;;4BAEA;0BACA,AACA;AAHA;6BAIA;4BACA;8BACA;kCACA,AACA;AAVA;AAWA;;AACA,qGACA;AACA,yFACA,yCACA;qBACA,AACA;;0BACA;4BACA;8BACA,AACA;;sCACA;;mFAEA;+FACA;sCACA;qCACA;AAJA,6CAKA;mCACA;qIACA;oEACA;AACA;AACA;mBACA;AACA,AACA;;kCACA;;oCAEA;2CACA,AACA;AAHA;AAIA,AACA;;yCACA;oBACA,AACA;;qDACA;sGACA,AACA;;sCACA;mEACA;4CACA;AACA;AACA;AACA;AACA;AACA;;;;AlG9DA;;;;;;;;;;;;;AmGAA,wEACA;;AACA;AACA,wCACA;;0BAEA;4BACA;6BACA;4BACA;8BACA;kCACA;;0BAEA,AACA,AACA;AAHA;AAPA;AAWA;;AACA;AACA,6DACA;qBACA,AACA;;qEACA;8CACA,AACA;;8BACA,AACA;;oCACA;gCACA;yCACA;qDACA;AACA;AACA;;;;AnGhCA;;;;;;;;;;;;;AoGAA,8EACA;;AACA;AACA,8CACA;;0BAEA;yBACA;6BACA;4EACA;oDACA;wCACA;AACA;AACA;4BACA;8BACA,AACA;AAXA;AAYA;;AACA;AACA,qDACA;qBACA;AACA;uEACA,AACA;;gEACA;4BACA;uBACA;AACA;AACA;;;;ApG7BA;;;;;;;;;;;;;AqGAA,+EACA;;AACA;AACA,+CACA;;0BAEA;6BACA;4BACA;yBACA;4BACA;8BACA,AACA;AAPA;AAQA;;AACA;AACA,sDACA;qBACA;AACA;uEACA,AACA;;gEACA;4BACA;uBACA;AACA;AACA;;;;ArGzBA;;;;;;;;;;;;;AsGAA,iEACA;;AACA,iCACA;;0BAEA;;0BAEA;8BACA;6BACA;gCACA,AACA;AALA;6BAMA;4BACA;8BACA;kCACA,AACA;AAZA;AAaA;;AACA;AACA,kCACA;qBACA;gBACA,AACA;;yBACA;AACA;0CACA,AACA;;oCACA;qEACA;AACA;wCACA;2BACA;wCACA;oEACA;+BACA;4DACA;AACA;AACA;uBACA;AACA;mCACA;AACA;AACA;AACA;;;;AtG5CA;;;;;;;;;;;;;AuGAA,0EACA;;AACA,iCACA;;0BAEA;;iCAEA;iCACA;0BACA,AACA;AAJA;6BAKA;4BACA;8BACA;kCACA,AACA;AAXA;AAYA;;AACA;AACA,qEACA;qBACA;8CACA,AACA;;AACA;4DACA;mCACA,AACA;;AACA,AACA;;AACA,AACA;;gCACA;AACA;AACA,AACA;;AACA;AACA;+CACA;sEACA;AACA,AACA;;2CACA;8DACA;wBACA;wBACA;wBACA,AACA;;iCACA;wEACA;mCACA,AACA;;AACA;sFACA,AACA;;+BACA;AACA;6BACA;qCACA;AACA;6BACA;oDACA;mDACA;AACA;6BACA;mEACA;mDACA;AACA;6BACA;oDACA;+DACA;iFACA;AACA;6BACA;+GACA;AACA,AACA,AACA;;;oDACA;qCACA;AACA;AACA;AACA;;;;AvGjFA;;;;;;;;;;;;;AwGAA,2EACA;;AACA,2CACA;;0BAEA;;0BAEA,AACA;AAFA;6BAGA;4BACA;8BACA;kCACA,AACA;AATA;AAUA;;AACA;AACA,qEACA;qBACA;kGACA,AACA;;yBACA,AACA;;+BACA;kDACA;AACA;AACA;uEACA;0CACA;AACA,AACA;;0CACA;AACA;AACA;0GACA;AACA;AACA;AACA;;;;AxGrCA;;;;;;;;;;;;;AyGAA,wEACA;;AACA,kHACA;AACA,kGACA,yDACA;;0BAEA;yBACA;;4BAEA;4BACA;+BACA;6BACA;iCACA;kCACA,AACA;AAPA;6BAQA;2DACA;+BACA;mCACA,AACA;;oCACA;yCACA;;oDAEA;0DACA;0DACA;0DACA;4DACA,AACA;AANA;iDAOA;iDACA;6CACA;kDACA;4CACA;4CACA;mDACA;+CACA,AACA;;iCACA;sCACA,AACA;;AACA,AACA;;AACA,AACA;;wCACA;mEACA;AACA;AACA;mCACA;AACA;AACA,AACA;;+CACA;4BACA;4BACA,AACA;;qDACA;AACA;AACA;AACA;kEACA;+HACA;4EACA;AACA;AACA,AACA;;wCACA;qDACA;sEACA;8CACA;AACA;+BACA;gDACA;AACA;AACA,AACA;;6CACA;gCACA;AACA;AACA,AACA;;gDACA;sCACA;uCACA;wDACA;2DACA;4BACA;wCACA;6CACA;4BACA;4BACA;4BACA;4BACA;4BACA;4BACA;4CACA;gDACA,AACA;;8DACA;uGACA;wGACA;AACA,AACA;;gCACA,AACA;;8GACA,AACA;;gFACA;AACA;+EACA;uHACA;AACA;AACA,AACA;;+CACA;+IACA;AACA,AACA;;0DACA,AACA;;sHACA,AACA;;oDACA,AACA;;4DACA;4DACA;AACA;yGACA;kDACA;AACA,AACA;;AACA;oDACA;iDACA;AACA,AACA;;AACA;AACA;mGACA;uDACA;AACA,AACA;;6CACA;AACA;AACA,AACA;;+CACA;8DACA;4DACA;AACA,AACA;;AACA;AACA;AACA;;+EAEA,AACA;;2GACA,AACA;;uDAJA,CAKA,AACA;;iEACA;6EACA;AACA;8DACA;0HACA;mEACA;AACA;AACA,AACA;;6DACA;AACA;yHACA;kEACA;AACA;AACA,AACA;;2DACA,AACA;;iDACA;4HACA,qCACA;+EACA;AACA;iHACA;8DACA;AACA;AACA,AACA;;yDACA;AACA;AACA;AACA,AACA;;qHACA;wDACA,AACA;;gEACA;wEACA;0DACA;AACA;sHACA;+DACA;AACA;AACA,AACA;;yDACA;AACA;qHACA;8DACA;AACA;AACA,AACA;;;+FAEA;8CACA;AAFA,sEAGA;+EACA;AACA;iHACA;8DACA;AACA;AACA,AACA;;qDACA;AACA,AACA;;iDACA;AACA;AACA,AACA;;6EACA;0CACA,AACA;;2DACA;0JACA;mCACA;0JACA;AACA,AACA;;0CACA,AACA;;sGACA;wEACA;+DACA,AACA;;0EACA;uJACA;oEACA;2FACA;+CACA;iGACA;AACA;AACA,AACA;;2FACA;+FACA;0DACA;AACA;AACA,AACA;;iDACA;AACA;AACA;AACA,AACA;;AACA;0DACA;sGACA,AACA;;AACA;AACA;AACA;AACA;AACA;iEACA;wEACA;4EACA;8EACA;AACA;4EACA;uCACA;4EACA;AACA;AACA,AACA;;yGACA;2CACA;0CACA;kGACA,AACA;;gFACA,AACA;;oDACA;mEACA;uCACA;AACA;mGACA;6EACA;wDACA;+CACA;wDACA;AACA,AACA;;kGACA,AACA;;+FACA;0GACA;AACA,AACA;;oIACA;yDACA;AACA,AACA;;qFACA;2CACA;yEACA;AACA;AACA;AACA,AACA;;AACA;AACA;6GACA;4HACA;AACA,AACA;;iDACA,AACA;;8CACA;AACA;AACA,AACA;;iDACA;sEACA;sDACA,AACA;;oDACA;AACA;iDACA;8EACA;AACA;+CACA;AACA;6DACA;+EACA;AACA;AACA,AACA;;qDACA;0FACA;oEACA;AACA;AACA,AACA;;kDACA;iEACA;gEACA;4BACA,AACA;;4CACA;sEACA;oEACA;+BACA;mGACA;iGACA;AACA,AACA;;AACA;AACA;4FACA;yFACA;AACA,AACA;;8BACA;AACA;AACA,AACA;AAtXA;AAuXA;;;;AzG9XA;;;;;;;;;;;;;A0GAA,4EACA;;AACA;AACA,2EACA;;0BAEA;;0BAEA;6BACA;4BACA;oCACA;oCACA,AACA;AANA;2DAOA;wEACA;4BACA;sCACA;;kCAEA;kCACA;mCACA;kCACA,AACA,AACA;AANA;;gEAOA;yEACA,AACA;;+BACA;AACA;mFACA;2DACA;wCACA;qEACA;AACA;AACA;4BACA;kCACA;8BACA,AACA;AAlCA;AAmCA;;AACA;AACA,mDACA;qBACA,AACA;;8BACA,AACA;;AACA,AACA;;oCACA;AACA;mFACA;0GACA;AACA;AACA;AACA;AACA,AACA;;oDACA;AACA;uFACA;uDACA;0GACA;AACA;AACA,AACA;;AACA;uFACA;uDACA;0GACA;AACA;AACA;AACA,AACA;;4DACA;AACA;AACA;;;;A1G7EA;;;;;;;;;;;;;A2GAA,iFACA;;AACA;AACA,iDACA;;0BAEA;6BACA;4BACA;4EACA;yDACA;AACA,AACA;AAPA;AAQA;;;;A3GbA;;;;;;;;;;;;;A4GAA,6EACA;;AACA;AACA,6CACA;;0BAEA;6BACA;4BACA;4EACA;yDACA;AACA,AACA;AAPA;AAQA;;;;A5GbA;;;;;;;;;;;;;A6GAA,qEACA;;AACA,qCACA;;0BAEA;uBACA;4BACA;0BACA;+BACA;8BACA;iCACA,AACA;6BACA;4BACA;8BACA;kCACA,AACA;AAbA;AAcA;;AACA;AACA,wHACA;qBACA,AACA;;;6BAEA,AACA,AACA,CAHA;;+BAIA;kCACA;+BACA;mCACA,AACA;;AACA,AACA;;AACA,AACA;;gCACA;6CACA;kDACA;uBACA;8BACA;AACA,AACA;;kCACA,AACA;;AACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA;;;;;6CACA;+EACA;AACA;kFACA;mDACA;AACA;AACA;AACA;AACA;AACA,AACA;;+CACA;oBACA;oBACA,AACA;;8EACA;AACA;qDACA,AACA;;;sCAEA,AACA,AACA;AAHA;;yCAIA;AACA;8CACA,AACA;;AACA;8EACA;6BACA;AACA;AACA;uBACA;yBACA;AACA;AACA;AACA,AACA;;qCACA;iCACA;uBACA;uBACA;4DACA;AACA;AACA,AACA;;sDACA;+EACA,AACA;;AACA;6EACA;AACA,AACA;;4CACA;wCACA,AACA,AACA;;AACA;AACA;qCACA;AACA;AACA;AACA,AACA;;yCACA;oBACA,AACA;;iCACA,AACA;;0BACA;gCACA,AACA;;sDACA;+CACA;AACA;uBACA;AACA;gCACA;AACA,AACA;;gEACA,AACA;;uBACA;AACA,AACA;;yCACA;AACA;AACA;8DACA;wEACA;AACA,AACA;;iEACA;uEACA;AACA,AACA;;0DACA;uEACA;AACA,AACA;;iEACA;uEACA;AACA,AACA;;0DACA;uEACA;AACA,AACA;;oEACA;wEACA;AACA,AACA;;oEACA;wEACA;AACA,AACA;;+DACA,AACA;;;4EAEA;0FACA;qCACA;AAHA,6CAIA;mCACA;AACA;AACA;mBACA;AACA;AACA;;;;A7GtLA;;;;;;;;;;;;;A8GAA;AAEA;AACA,AACA,mBAHA;;AAIA;AACA,wBACA,AACA;;AACA;AACA,AACA;;;;A9GXA;;;;;;;;;;;;;A+GAA,0CACA;;;;A/GDA;;;;;;;;;;;;;AgHAA,yCACA;;;;AhHDA;;;;;;;;;;;;;AiHAA,0CACA;;AACA;AACA,2CACA;;qBAEA;;;qCAGA;oCACA;sCACA,AACA,AACA;AALA;AADA;;2BAQA,AACA,AACA;AAHA;AATA;AAaA;;AACA,gEACA;;AACA,kGACA;AACA,oFACA,yCACA;qBACA,AACA;;0CACA,AACA,AACA;;AACA;AACA,AACA;;AACA,AACA;;4BACA;AACA;qCACA;AACA;mBACA;AACA,AACA;;sCACA;AACA,AACA,AACA,AACA;;;;mCACA,CACA,WACA,WACA,wBACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;2EACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;2DACA;AACA;mBACA;AACA,AACA;AACA;;;;AjHxEA;;;;;;;;;;;;;AkHAA,4DACA;;AACA;AACA,6EACA;kCAEA,mBACA;;yBAGA;4BACA;;8BAEA,AACA;AAFA;wEAGA;wDACA;sCACA;mFACA;iEACA;6CACA;AACA;AACA,AACA;;;qCAEA;4CACA,AACA;AAHA;AAIA,AACA;AApBA;;4BAsBA;;4BAEA,AACA,AACA;AAHA;AAFA;;4BAOA;;4BAEA,AACA,AACA;AAHA;AAFA;;6BAOA;4CACA;yBACA,AACA;AAJA;;4CAMA;yBACA;wEACA;0DACA,AACA;;8EACA;0DACA;qDACA;AACA;AACA,AACA;;+BACA;AACA,AACA;AAdA;;6BAgBA,AACA,AACA,AACA,AACA;AALA;AAtDA,aAHA;;2BA+DA;6BACA;sCACA;gCACA,AACA;;AACA,AACA;;8BACA;uDACA,AACA;;;qCAEA;8BACA;6BACA;0BACA,AACA;AALA;AAMA,AACA;;0DACA;oBACA;8DACA,AACA;;sCACA;yDACA;AACA,AACA;;8DACA,AACA;;uBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;AACA;;;;;uBAEA;iCACA;0BACA;0DACA;iCACA;AALA,mCAMA;2BACA;mBACA;AACA,AACA;;yCACA;AACA;uBACA,sCACA,6CACA,2CACA,+CACA,AACA;AACA,AACA;;mBACA;AACA;;;;AlH1IA;;;;;;;;;;;;;AmHAA;AAEA;AACA,AACA,mBAHA;;AAIA;AACA,wBACA,AACA;;AACA;AACA,AACA;;;;AnHXA;;;;;;;;;;;;;AoHAA,6CACA;;;;ApHDA;;;;;;;;;;;;;AqHAA,4CACA;;;;ArHDA;;;;;;;;;;;;;AsHAA,6CACA;;AACA;AACA,+CACA;;qBAEA;;;qCAGA;oCACA;sCACA,AACA,AACA;AALA;AADA;;2BAQA,AACA,AACA;AAHA;AATA;AAaA;;AACA,mEACA;;AACA,qGACA;AACA,uFACA,yCACA;qBACA,AACA;;0CACA,AACA,AACA;;AACA;AACA,AACA;;AACA,AACA;;4BACA;AACA;qCACA;AACA;mBACA;AACA,AACA;;sCACA;AACA,AACA,AACA,AACA;;;;mCACA,CACA,WACA,WACA,wBACA;AACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;2EACA;AACA;AACA,AACA;;AACA,AACA,AACA;;;2DACA;AACA;mBACA;AACA,AACA;AACA;;;;AtHxEA;;;;;;;;;;;;;AuHAA,+DACA;;AACA;AACA,6EACA;kCAEA,mBACA;;yBAGA;4BACA;;8BAEA,AACA;AAFA;wEAGA;wDACA;sCACA;mFACA;iEACA;6CACA;AACA;AACA,AACA;;;qCAEA;4CACA,AACA;AAHA;AAIA,AACA;AApBA;;4BAsBA;;4BAEA,AACA,AACA;AAHA;AAFA;;4BAOA;;4BAEA,AACA,AACA;AAHA;AAFA;;6BAOA;4CACA;yBACA,AACA;AAJA;;4CAMA;yBACA;wEACA;0DACA,AACA;;8EACA;0DACA;qDACA;AACA;AACA,AACA;;+BACA;AACA,AACA;AAdA;;6BAgBA,AACA,AACA,AACA,AACA;AALA;AAtDA,aAHA;;2BA+DA;6BACA;sCACA;gCACA,AACA;;AACA,AACA;;8BACA;uDACA,AACA;;;qCAEA;8BACA;6BACA;0BACA,AACA;AALA;AAMA,AACA;;0DACA;oBACA;8DACA,AACA;;sCACA;yDACA;AACA,AACA;;8DACA,AACA;;uBACA;AACA,AACA;;AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA,AACA;;;;;;;;;;;;;;;;;AACA;;;;;uBAEA;iCACA;0BACA;0DACA;iCACA;AALA,mCAMA;2BACA;mBACA;AACA,AACA;;yCACA;AACA;uBACA,sCACA,6CACA,2CACA,+CACA,AACA;AACA,AACA;;mBACA;AACA","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","angular.module('app.activities', [\n    // Angular dependencies\n    'ngCookies',\n\n    // 3rd party\n    'ui.bootstrap',\n    'ui.select',\n\n    // tuanchego dependencies\n    'app.activities.services',\n]);\n","angular.module('app.brand', [\n    // Angular dependencies\n    'ngCookies',\n\n    // 3rd party\n    'ui.bootstrap',\n    'ui.select',\n\n    // local dependencies\n    'app.brand.services',\n]);\n","angular.module('app.home', [\n    // Angular dependencies\n    'ngCookies',\n\n    // 3rd party\n    'ui.bootstrap',\n    'ui.select',\n\n    // local dependencies\n    'app.home.services',\n]);\n","angular.module('app.utils', []);\n","angular.module('app.base', [\n    'ui.bootstrap',\n]);\n","/**\n * app.directives is a container for all global lily related Angular directives\n */\nangular.module('app.directives', []);\n","angular.module('app.filters', []);\n","angular.module('app.services', []);\n","angular.module('app.brand.directives', []);\n","angular.module('app.brand.services', ['ngResource']);\n","angular.module('app.home.directives', []);\n","angular.module('app.home.services', ['ngResource']);\n","angular.module('app.users.filters', []);\n","angular.module('app.users.services', ['ngResource']);\n","angular.module('app.utils.directives', []);\n","// Include libraries.\nvar Raven = require('raven-js');\n\nwindow.sprintf = require('sprintf-js').sprintf;\n\nrequire('angular-xeditable');\nrequire('angular-ui-bootstrap');\nrequire('sweetalert2');\nrequire('angular-elastic');\nrequire('ui-select');\n\n/**\n * App Module is the entry point for Lily related Angular code\n */\nangular.module('app', [\n    'angular.filter',\n    'ui.router',\n    'ui.bootstrap',\n    'ui.select',\n    'ngResource',\n    'ngSanitize',\n    'ncy-angular-breadcrumb',\n    'xeditable',\n    'angular-cache',\n    //'ngFileUpload',\n    'monospaced.elastic',\n\n    // Modules\n    'app.base',\n    'app.templates',\n    'app.home',\n    'app.brand',\n    'app.cars',\n    'app.sellcar',\n\n    // Directives\n    'app.directives',\n    'app.utils.directives',\n\n    // Services\n    'app.services',\n\n    // Filters\n    'app.filters',\n]);\n\nangular.module('app').config(appConfig);\n\nappConfig.$inject = [\n    '$breadcrumbProvider',\n    '$controllerProvider',\n    '$httpProvider',\n    '$resourceProvider',\n    '$urlRouterProvider',\n];\nfunction appConfig($breadcrumbProvider, $controllerProvider, $httpProvider, $resourceProvider, $urlRouterProvider) {\n    // Don't strip trailing slashes from calculated URLs, because Django needs them.\n    $breadcrumbProvider.setOptions({\n        templateUrl: 'base/breadcrumbs.html',\n        includeAbstract: true,\n    });\n    $controllerProvider.allowGlobals();\n    $httpProvider.defaults.xsrfCookieName = 'csrftoken';\n    $httpProvider.defaults.xsrfHeaderName = 'X-CSRFToken';\n    $resourceProvider.defaults.stripTrailingSlashes = false;\n    $urlRouterProvider.otherwise('/');\n\n    swal.setDefaults({\n        confirmButtonClass: 'btn btn-primary',\n        cancelButtonClass: 'btn btn-default',\n        buttonsStyling: false,\n    });\n}\n\n// Global exception handler.\nangular.module('app').factory('$exceptionHandler', ['$log', function($log) {\n    return function(exception) {\n        if (window.debug) {\n            // Log to console when developing.\n            $log.error(exception);\n        } else {\n            // Otherwise send to Sentry.\n            Raven.captureException(exception);\n        }\n    };\n}]);\n\n/* Init global settings and run the app. */\nangular.module('app').run(runApp);\n\nrunApp.$inject = ['$rootScope', '$state', 'editableOptions', 'HLMessages', 'HLSockets', 'HLNotifications'];\nfunction runApp($rootScope, $state, editableOptions, HLMessages, HLSockets, HLNotifications, UserTeams) {\n    $rootScope.$state = $state; // State to be accessed from view.\n    $rootScope.currentUser = currentUser;\n    $rootScope.messages = HLMessages;\n    window.messages = HLMessages;\n\n    // Get tenant name to set custom dimension for GA.\n    /*Tenant.query({}, function(tenant) {\n        ga('set', 'dimension1', tenant.name);\n    });*/\n\n    // Get team name to set custom dimension for GA.\n    /*UserTeams.mine(function(teams) {\n        if (teams[0]) {\n            ga('set', 'dimension2', teams[0].name);\n        }\n    });*/\n\n    editableOptions.theme = 'bs3';\n\n    /*new window.Intercom('boot', {\n        app_id: intercomAppId,\n        user_id: currentUser.id,\n        name: currentUser.fullName,\n        email: currentUser.email,\n        company: currentUser.company,\n        widget: {\n            activator: '#IntercomDefaultWidget',\n        },\n    });*/\n\n    // Only setup if we're in the live app.\n    /*if (!window.debug) {\n        // Setup Raven for global JS error logging.\n        Raven.config(window.sentryPublicDsn).addPlugin(require('raven-js/plugins/angular'), angular).install();\n        Raven.setUserContext({\n            id: currentUser.id,\n        });\n    }*/\n}\n","/*!\n * ui-select\n * http://github.com/angular-ui/ui-select\n * Version: 0.19.3 - 2016-08-17T06:16:41.345Z\n * License: MIT\n */\n\n\n(function () { \n\"use strict\";\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n        case KEY.ALT:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey || e.altKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isHorizontalMovement: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownPosition: 'auto',\n  removeSelected: true,\n  resetSearchInput: true,\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          element.append(clone);\n        });\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}]);\n\nuis.directive('uiSelectChoices',\n  ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$window',\n  function(uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $window) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-choices');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/choices.tpl.html';\n    },\n\n    compile: function(tElement, tAttrs) {\n\n      if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n      // var repeat = RepeatParser.parse(attrs.repeat);\n      var groupByExp = tAttrs.groupBy;\n      var groupFilterExp = tAttrs.groupFilter;\n\n      if (groupByExp) {\n        var groups = tElement.querySelectorAll('.ui-select-choices-group');\n        if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n        groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n      }\n\n      var parserResult = RepeatParser.parse(tAttrs.repeat);\n\n      var choices = tElement.querySelectorAll('.ui-select-choices-row');\n      if (choices.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n      }\n\n      choices.attr('ng-repeat', parserResult.repeatExpression(groupByExp))\n             .attr('ng-if', '$select.open'); //Prevent unnecessary watches when dropdown is closed\n    \n\n      var rowsInner = tElement.querySelectorAll('.ui-select-choices-row-inner');\n      if (rowsInner.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n      }\n      rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n\n      // If IE8 then need to target rowsInner to apply the ng-click attr as choices will not capture the event. \n      var clickTarget = $window.document.addEventListener ? choices : rowsInner;\n      clickTarget.attr('ng-click', '$select.select(' + parserResult.itemName + ',$select.skipFocusser,$event)');\n      \n      return function link(scope, element, attrs, $select) {\n\n       \n        $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n\n        $select.disableChoiceExpression = attrs.uiDisableChoice;\n        $select.onHighlightCallback = attrs.onHighlight;\n\n        $select.dropdownPosition = attrs.position ? attrs.position.toLowerCase() : uiSelectConfig.dropdownPosition;        \n\n        scope.$on('$destroy', function() {\n          choices.remove();\n        });\n\n        scope.$watch('$select.search', function(newValue) {\n          if(newValue && !$select.open && $select.multiple) $select.activate(false, true);\n          $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n          if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n            $select.refresh(attrs.refresh);\n          } else {\n            $select.items = [];\n          }\n        });\n\n        attrs.$observe('refreshDelay', function() {\n          // $eval() is needed otherwise we get a string instead of a number\n          var refreshDelay = scope.$eval(attrs.refreshDelay);\n          $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n        });\n      };\n    }\n  };\n}]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl',\n  ['$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig', '$parse', '$injector', '$window',\n  function($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $injector, $window) {\n\n  var ctrl = this;\n\n  var EMPTY_SEARCH = '';\n\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.paste = uiSelectConfig.paste;\n  ctrl.resetSearchInput = uiSelectConfig.resetSearchInput;\n\n  ctrl.removeSelected = uiSelectConfig.removeSelected; //If selected item(s) should be removed from dropdown list\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.search = EMPTY_SEARCH;\n\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.items = []; //All available choices\n\n  ctrl.open = false;\n  ctrl.focus = false;\n  ctrl.disabled = false;\n  ctrl.selected = undefined;\n\n  ctrl.dropdownPosition = 'auto';\n\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.clickTriggeredSelect = false;\n  ctrl.$filter = $filter;\n  ctrl.$element = $element;\n\n  // Use $injector to check for $animate and store a reference to it\n  ctrl.$animate = (function () {\n    try {\n      return $injector.get('$animate');\n    } catch (err) {\n      // $animate does not exist\n      return null;\n    }\n  })();\n\n  ctrl.searchInput = $element.querySelectorAll('input.ui-select-search');\n  if (ctrl.searchInput.length !== 1) {\n    throw uiSelectMinErr('searchInput', \"Expected 1 input.ui-select-search but got '{0}'.\", ctrl.searchInput.length);\n  }\n\n  ctrl.isEmpty = function() {\n    return angular.isUndefined(ctrl.selected) || ctrl.selected === null || ctrl.selected === '' || (ctrl.multiple && ctrl.selected.length === 0);\n  };\n\n  function _findIndex(collection, predicate, thisArg){\n    if (collection.findIndex){\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput() {\n    if (ctrl.resetSearchInput) {\n      ctrl.search = EMPTY_SEARCH;\n      //reset activeIndex\n      if (ctrl.selected && ctrl.items.length && !ctrl.multiple) {\n        ctrl.activeIndex = _findIndex(ctrl.items, function(item){\n          return angular.equals(this, item);\n        }, ctrl.selected);\n      }\n    }\n  }\n\n    function _groupsFilter(groups, groupNames) {\n      var i, j, result = [];\n      for(i = 0; i < groupNames.length ;i++){\n        for(j = 0; j < groups.length ;j++){\n          if(groups[j].name == [groupNames[i]]){\n            result.push(groups[j]);\n          }\n        }\n      }\n      return result;\n    }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  ctrl.activate = function(initSearchValue, avoidReset) {\n    if (!ctrl.disabled  && !ctrl.open) {\n      if(!avoidReset) _resetSearchInput();\n\n      $scope.$broadcast('uis:activate');\n\n      ctrl.open = true;\n\n      ctrl.activeIndex = ctrl.activeIndex >= ctrl.items.length ? 0 : ctrl.activeIndex;\n\n      // ensure that the index is set to zero for tagging variants\n      // that where first option is auto-selected\n      if ( ctrl.activeIndex === -1 && ctrl.taggingLabel !== false ) {\n        ctrl.activeIndex = 0;\n      }\n\n      var container = $element.querySelectorAll('.ui-select-choices-content');\n      var searchInput = $element.querySelectorAll('.ui-select-search');\n      if (ctrl.$animate && ctrl.$animate.on && ctrl.$animate.enabled(container[0])) {\n        var animateHandler = function(elem, phase) {\n          if (phase === 'start' && ctrl.items.length === 0) {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('removeClass', searchInput[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          } else if (phase === 'close') {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('enter', container[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          }\n        };\n\n        if (ctrl.items.length > 0) {\n          ctrl.$animate.on('enter', container[0], animateHandler);\n        } else {\n          ctrl.$animate.on('removeClass', searchInput[0], animateHandler);\n        }\n      } else {\n        $timeout(function () {\n          ctrl.focusSearchInput(initSearchValue);\n          if(!ctrl.tagging.isActivated && ctrl.items.length > 1) {\n            _ensureHighlightVisible();\n          }\n        });\n      }\n    }\n    else if (ctrl.open && !ctrl.searchEnabled) {\n      // Close the selection if we don't have search enabled, and we click on the select again\n      ctrl.close();\n    }\n  };\n\n  ctrl.focusSearchInput = function (initSearchValue) {\n    ctrl.search = initSearchValue || ctrl.search;\n    ctrl.searchInput[0].focus();\n  };\n\n  ctrl.findGroupByName = function(name) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      return group.name === name;\n    })[0];\n  };\n\n  ctrl.parseRepeatAttr = function(repeatAttr, groupByExp, groupFilterExp) {\n    function updateGroups(items) {\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.groups = [];\n      angular.forEach(items, function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = ctrl.findGroupByName(groupName);\n        if(group) {\n          group.items.push(item);\n        }\n        else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n      if(groupFilterExp){\n        var groupFilterFn = $scope.$eval(groupFilterExp);\n        if( angular.isFunction(groupFilterFn)){\n          ctrl.groups = groupFilterFn(ctrl.groups);\n        } else if(angular.isArray(groupFilterFn)){\n          ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n        }\n      }\n      ctrl.items = [];\n      ctrl.groups.forEach(function(group) {\n        ctrl.items = ctrl.items.concat(group.items);\n      });\n    }\n\n    function setPlainItems(items) {\n      ctrl.items = items;\n    }\n\n    ctrl.setItemsFn = groupByExp ? updateGroups : setPlainItems;\n\n    ctrl.parserResult = RepeatParser.parse(repeatAttr);\n\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = ctrl.parserResult.itemName;\n\n    //If collection is an Object, convert it to Array\n\n    var originalSource = ctrl.parserResult.source;\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    var createArrayFromObject = function(){\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v){\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    };\n\n    if (ctrl.parserResult.keyName){ // Check for (key,value) syntax\n      createArrayFromObject();\n      ctrl.parserResult.source = $parse('$uisSource' + ctrl.parserResult.filters);\n      $scope.$watch(originalSource, function(newVal, oldVal){\n        if (newVal !== oldVal) createArrayFromObject();\n      }, true);\n    }\n\n    ctrl.refreshItems = function (data){\n      data = data || ctrl.parserResult.source($scope);\n      var selectedItems = ctrl.selected;\n      //TODO should implement for single mode removeSelected\n      if (ctrl.isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length) || !ctrl.multiple || !ctrl.removeSelected) {\n        ctrl.setItemsFn(data);\n      }else{\n        if ( data !== undefined && data !== null ) {\n          var filteredItems = data.filter(function(i) {\n            return angular.isArray(selectedItems) ? selectedItems.every(function(selectedItem) {\n              return !angular.equals(i, selectedItem);\n            }) : !angular.equals(i, selectedItems);\n          });\n          ctrl.setItemsFn(filteredItems);\n        }\n      }\n      if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n        $scope.calculateDropdownPos();\n      }\n\n      $scope.$broadcast('uis:refresh');\n    };\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n    $scope.$watchCollection(ctrl.parserResult.source, function(items) {\n      if (items === undefined || items === null) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else {\n        if (!angular.isArray(items)) {\n          throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n        } else {\n          //Remove already selected items (ex: while searching)\n          //TODO Should add a test\n          ctrl.refreshItems(items);\n\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ctrl.ngModel.$modelValue)) {\n            ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n        }\n      }\n    });\n\n  };\n\n  var _refreshDelayPromise;\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  ctrl.refresh = function(refreshAttr) {\n    if (refreshAttr !== undefined) {\n\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (_refreshDelayPromise) {\n        $timeout.cancel(_refreshDelayPromise);\n      }\n      _refreshDelayPromise = $timeout(function() {\n        $scope.$eval(refreshAttr);\n      }, ctrl.refreshDelay);\n    }\n  };\n\n  ctrl.isActive = function(itemScope) {\n    if ( !ctrl.open ) {\n      return false;\n    }\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive =  itemIndex == ctrl.activeIndex;\n\n    if ( !isActive || itemIndex < 0 ) {\n      return false;\n    }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  };\n\n  var _isItemSelected = function (item) {\n    return (ctrl.selected && angular.isArray(ctrl.selected) &&\n        ctrl.selected.filter(function (selection) { return angular.equals(selection, item); }).length > 0);\n  };\n\n  var disabledItems = [];\n\n  function _updateItemDisabled(item, isDisabled) {\n    var disabledItemIndex = disabledItems.indexOf(item);\n    if (isDisabled && disabledItemIndex === -1) {\n      disabledItems.push(item);\n    }\n\n    if (!isDisabled && disabledItemIndex > -1) {\n      disabledItems.splice(disabledItemIndex, 1);\n    }\n  }\n\n  function _isItemDisabled(item) {\n    return disabledItems.indexOf(item) > -1;\n  }\n\n  ctrl.isDisabled = function(itemScope) {\n\n    if (!ctrl.open) return;\n\n    var item = itemScope[ctrl.itemProperty];\n    var itemIndex = ctrl.items.indexOf(item);\n    var isDisabled = false;\n\n    if (itemIndex >= 0 && (angular.isDefined(ctrl.disableChoiceExpression) || ctrl.multiple)) {\n\n      if (item.isTag) return false;\n\n      if (ctrl.multiple) {\n        isDisabled = _isItemSelected(item);\n      }\n\n      if (!isDisabled && angular.isDefined(ctrl.disableChoiceExpression)) {\n        isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression));\n      }\n\n      _updateItemDisabled(item, isDisabled);\n    }\n\n    return isDisabled;\n  };\n\n\n  // When the user selects an item with ENTER or clicks the dropdown\n  ctrl.select = function(item, skipFocusser, $event) {\n    if (item === undefined || !_isItemDisabled(item)) {\n\n      if ( ! ctrl.items && ! ctrl.search && ! ctrl.tagging.isActivated) return;\n\n      if (!item || !_isItemDisabled(item)) {\n        // if click is made on existing item, prevent from tagging, ctrl.search does not matter\n        ctrl.clickTriggeredSelect = false;\n        if($event && $event.type === 'click' && item)\n          ctrl.clickTriggeredSelect = true;\n\n        if(ctrl.tagging.isActivated && ctrl.clickTriggeredSelect === false) {\n          // if taggingLabel is disabled and item is undefined we pull from ctrl.search\n          if ( ctrl.taggingLabel === false ) {\n            if ( ctrl.activeIndex < 0 ) {\n              if (item === undefined) {\n                item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              }\n              if (!item || angular.equals( ctrl.items[0], item ) ) {\n                return;\n              }\n            } else {\n              // keyboard nav happened first, user selected from dropdown\n              item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if ( ctrl.activeIndex === 0 ) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if ( item === undefined ) return;\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if ( ctrl.tagging.fct !== undefined && typeof item === 'string' ) {\n                item = ctrl.tagging.fct(item);\n                if (!item) return;\n              // if item type is 'string', apply the tagging label\n              } else if ( typeof item === 'string' ) {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel,'').trim();\n              }\n            }\n          }\n          // search ctrl.selected for dupes potentially caused by tagging and return early if found\n          if (_isItemSelected(item)) {\n            ctrl.close(skipFocusser);\n            return;\n          }\n        }        \n        _resetSearchInput();\n        $scope.$broadcast('uis:select', item);\n\n        var locals = {};\n        locals[ctrl.parserResult.itemName] = item;\n\n        $timeout(function(){\n          ctrl.onSelectCallback($scope, {\n            $item: item,\n            $model: ctrl.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        if (ctrl.closeOnSelect) {\n          ctrl.close(skipFocusser);\n        }\n      }\n    }\n  };\n\n  // Closes the dropdown\n  ctrl.close = function(skipFocusser) {\n    if (!ctrl.open) return;\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) ctrl.ngModel.$setTouched();\n    ctrl.open = false;\n    _resetSearchInput();\n    $scope.$broadcast('uis:close', skipFocusser);\n\n  };\n\n  ctrl.setFocus = function(){\n    if (!ctrl.focus) ctrl.focusInput[0].focus();\n  };\n\n  ctrl.clear = function($event) {\n    ctrl.select(undefined);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  };\n\n  // Toggle dropdown\n  ctrl.toggle = function(e) {\n    if (ctrl.open) {\n      ctrl.close();\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      ctrl.activate();\n    }\n  };\n\n  // Set default function for locked choices - avoids unnecessary\n  // logic if functionality is not being used\n  ctrl.isLocked = function () {\n    return false;\n  };\n\n  $scope.$watch(function () {\n    return angular.isDefined(ctrl.lockChoiceExpression) && ctrl.lockChoiceExpression !== \"\";\n  }, _initaliseLockedChoices);\n\n  function _initaliseLockedChoices(doInitalise) {\n    if(!doInitalise) return;\n\n    var lockedItems = [];\n\n    function _updateItemLocked(item, isLocked) {\n      var lockedItemIndex = lockedItems.indexOf(item);\n      if (isLocked && lockedItemIndex === -1) {\n        lockedItems.push(item);\n        }\n\n      if (!isLocked && lockedItemIndex > -1) {\n        lockedItems.splice(lockedItemIndex, 0);\n      }\n    }\n\n    function _isItemlocked(item) {\n      return lockedItems.indexOf(item) > -1;\n    }\n\n    ctrl.isLocked = function (itemScope, itemIndex) {\n      var isLocked = false,\n          item = ctrl.selected[itemIndex];\n\n      if(item) {\n        if (itemScope) {\n          isLocked = !!(itemScope.$eval(ctrl.lockChoiceExpression));\n          _updateItemLocked(item, isLocked);\n        } else {\n          isLocked = _isItemlocked(item);\n        }\n      }\n\n      return isLocked;\n    };\n  }\n\n\n  var sizeWatch = null;\n  var updaterScheduled = false;\n  ctrl.sizeSearchInput = function() {\n\n    var input = ctrl.searchInput[0],\n        container = ctrl.searchInput.parent().parent()[0],\n        calculateContainerWidth = function() {\n          // Return the container width only if the search input is visible\n          return container.clientWidth * !!input.offsetParent;\n        },\n        updateIfVisible = function(containerWidth) {\n          if (containerWidth === 0) {\n            return false;\n          }\n          var inputWidth = containerWidth - input.offsetLeft - 10;\n          if (inputWidth < 50) inputWidth = containerWidth;\n          ctrl.searchInput.css('width', inputWidth+'px');\n          return true;\n        };\n\n    ctrl.searchInput.css('width', '10px');\n    $timeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(function() {\n          if (!updaterScheduled) {\n            updaterScheduled = true;\n            $scope.$$postDigest(function() {\n              updaterScheduled = false;\n              if (updateIfVisible(calculateContainerWidth())) {\n                sizeWatch();\n                sizeWatch = null;\n              }\n            });\n          }\n        }, angular.noop);\n      }\n    });\n  };\n\n  function _handleDropDownSelection(key) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex < ctrl.items.length - 1) { ctrl.activeIndex++; }\n        break;\n      case KEY.UP:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex > 0 || (ctrl.search.length === 0 && ctrl.tagging.isActivated && ctrl.activeIndex > -1)) { ctrl.activeIndex--; }\n        break;\n      case KEY.TAB:\n        if (!ctrl.multiple || ctrl.open) ctrl.select(ctrl.items[ctrl.activeIndex], true);\n        break;\n      case KEY.ENTER:\n        if(ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)){\n          ctrl.select(ctrl.items[ctrl.activeIndex], ctrl.skipFocusser); // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n        } else {\n          ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        }\n        break;\n      case KEY.ESC:\n        ctrl.close();\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  // Bind to keyboard shortcuts\n  ctrl.searchInput.on('keydown', function(e) {\n\n    var key = e.which;\n\n    if (~[KEY.ENTER,KEY.ESC].indexOf(key)){\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    // if(~[KEY.ESC,KEY.TAB].indexOf(key)){\n    //   //TODO: SEGURO?\n    //   ctrl.close();\n    // }\n\n    $scope.$apply(function() {\n\n      var tagged = false;\n\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        if(!_handleDropDownSelection(key) && !ctrl.searchEnabled) {\n          e.preventDefault();\n          e.stopPropagation();\n        }\n        if ( ctrl.taggingTokens.isActivated ) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            if ( ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode] ) {\n              // make sure there is a new value to push via tagging\n              if ( ctrl.search.length > 0 ) {\n                tagged = true;\n              }\n            }\n          }\n          if ( tagged ) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode],'').trim();\n              if ( ctrl.tagging.fct ) {\n                newItem = ctrl.tagging.fct( newItem );\n              }\n              if (newItem) ctrl.select(newItem, true);\n            });\n          }\n        }\n      }\n\n    });\n\n    if(KEY.isVerticalMovement(key) && ctrl.items.length > 0){\n      _ensureHighlightVisible();\n    }\n\n    if (key === KEY.ENTER || key === KEY.ESC) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n  });\n\n  ctrl.searchInput.on('paste', function (e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    data = ctrl.search + data;\n\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var items = [];\n        for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {  // split by first token that is contained in data\n          var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i];\n          if (data.indexOf(separator) > -1) {\n            items = data.split(separator);\n            break;  // only split by one token\n          }\n        }\n        if (items.length === 0) {\n          items = [data];\n        }\n        var oldsearch = ctrl.search;\n        angular.forEach(items, function (item) {\n          var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n          if (newItem) {\n            ctrl.select(newItem, true);\n          }\n        });\n        ctrl.search = oldsearch || EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  });\n\n  ctrl.searchInput.on('tagged', function() {\n    $timeout(function() {\n      _resetSearchInput();\n    });\n  });\n\n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  function _ensureHighlightVisible() {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container.querySelectorAll('.ui-select-choices-row');\n    if (choices.length < 1) {\n      throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n    }\n\n    if (ctrl.activeIndex < 0) {\n      return;\n    }\n\n    var highlighted = choices[ctrl.activeIndex];\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0)\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      else\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n    }\n  }\n\n  var onResize = $$uisDebounce(function() {\n    ctrl.sizeSearchInput();\n  }, 50);\n\n  angular.element($window).bind('resize', onResize);\n\n  $scope.$on('$destroy', function() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n    angular.element($window).off('resize', onResize);\n  });\n}]);\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$compile', '$parse', '$timeout',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $compile, $parse, $timeout) {\n\n  return {\n    restrict: 'EA',\n    templateUrl: function(tElement, tAttrs) {\n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      return theme + (angular.isDefined(tAttrs.multiple) ? '/select-multiple.tpl.html' : '/select.tpl.html');\n    },\n    replace: true,\n    transclude: true,\n    require: ['uiSelect', '^ngModel'],\n    scope: true,\n\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    compile: function(tElement, tAttrs) {\n\n      // Allow setting ngClass on uiSelect\n      var match = /{(.*)}\\s*{(.*)}/.exec(tAttrs.ngClass);\n      if(match) {\n        var combined = '{'+ match[1] +', '+ match[2] +'}';\n        tAttrs.ngClass = combined;\n        tElement.attr('ng-class', combined);\n      }\n\n      //Multiple or Single depending if multiple attribute presence\n      if (angular.isDefined(tAttrs.multiple))\n        tElement.append('<ui-select-multiple/>').removeAttr('multiple');\n      else\n        tElement.append('<ui-select-single/>');\n\n      if (tAttrs.inputId)\n        tElement.querySelectorAll('input.ui-select-search')[0].id = tAttrs.inputId;\n\n      return function(scope, element, attrs, ctrls, transcludeFn) {\n\n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            $select.focusInput.attr('tabindex', value);\n            element.removeAttr('tabindex');\n          });\n        }\n\n        scope.$watch(function () { return scope.$eval(attrs.searchEnabled); }, function(newVal) {\n          $select.searchEnabled = newVal !== undefined ? newVal : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('limit', function() {\n          //Limit the number of selections allowed\n          $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n        });\n\n        scope.$watch('removeSelected', function() {\n            var removeSelected = scope.$eval(attrs.removeSelected);\n            $select.removeSelected = removeSelected !== undefined ? removeSelected : uiSelectConfig.removeSelected;\n        });\n\n        attrs.$observe('disabled', function() {\n          // No need to use $eval() (thanks to ng-disabled) since we already get a boolean instead of a string\n          $select.disabled = attrs.disabled !== undefined ? attrs.disabled : false;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)){\n          $timeout(function(){\n            $select.setFocus();\n          });\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)){\n          scope.$on(attrs.focusOn, function() {\n              $timeout(function(){\n                $select.setFocus();\n              });\n          });\n        }\n\n        function onDocumentClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], e.target);\n          } else {\n            contains = element[0].contains(e.target);\n          }\n\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(e.target).controller('uiSelect'); //To check if target is other ui-select\n              skipFocusser = targetController && targetController !== $select; //To check if target is other ui-select\n              if (!skipFocusser) skipFocusser =  ~focusableControls.indexOf(e.target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n            $select.close(skipFocusser);\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        // See Click everywhere but here event http://stackoverflow.com/questions/12931369\n        $document.on('click', onDocumentClick);\n\n        scope.$on('$destroy', function() {\n          $document.off('click', onDocumentClick);\n        });\n\n        // Move transcluded elements to their correct position in main template\n        transcludeFn(scope, function(clone) {\n          // See Transclude in AngularJS http://blog.omkarpatil.com/2012/11/transclude-in-angularjs.html\n\n          // One day jqLite will be replaced by jQuery and we will be able to write:\n          // var transcludedElement = clone.filter('.my-class')\n          // instead of creating a hackish DOM element:\n          var transcluded = angular.element('<div>').append(clone);\n\n          var transcludedMatch = transcluded.querySelectorAll('.ui-select-match');\n          transcludedMatch.removeAttr('ui-select-match'); //To avoid loop in case directive as attr\n          transcludedMatch.removeAttr('data-ui-select-match'); // Properly handle HTML5 data-attributes\n          if (transcludedMatch.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-match but got '{0}'.\", transcludedMatch.length);\n          }\n          element.querySelectorAll('.ui-select-match').replaceWith(transcludedMatch);\n\n          var transcludedChoices = transcluded.querySelectorAll('.ui-select-choices');\n          transcludedChoices.removeAttr('ui-select-choices'); //To avoid loop in case directive as attr\n          transcludedChoices.removeAttr('data-ui-select-choices'); // Properly handle HTML5 data-attributes\n          if (transcludedChoices.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-choices but got '{0}'.\", transcludedChoices.length);\n          }\n          element.querySelectorAll('.ui-select-choices').replaceWith(transcludedChoices);\n\n          var transcludedNoChoice = transcluded.querySelectorAll('.ui-select-no-choice');\n          transcludedNoChoice.removeAttr('ui-select-no-choice'); //To avoid loop in case directive as attr\n          transcludedNoChoice.removeAttr('data-ui-select-no-choice'); // Properly handle HTML5 data-attributes\n          if (transcludedNoChoice.length == 1) {\n            element.querySelectorAll('.ui-select-no-choice').replaceWith(transcludedNoChoice);\n          }\n        });\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody !== undefined ? appendToBody : uiSelectConfig.appendToBody) {\n          scope.$watch('$select.open', function(isOpen) {\n            if (isOpen) {\n              positionDropdown();\n            } else {\n              resetDropdown();\n            }\n          });\n\n          // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n          // it might stick around when the user routes away or the select field is otherwise removed\n          scope.$on('$destroy', function() {\n            resetDropdown();\n          });\n        }\n\n        // Hold on to a reference to the .ui-select-container element for appendToBody support\n        var placeholder = null,\n            originalWidth = '';\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n\n          // Now move the actual dropdown element to the end of the body\n          $document.find('body').append(element);\n\n          element[0].style.position = 'absolute';\n          element[0].style.left = offset.left + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n        }\n\n        function resetDropdown() {\n          if (placeholder === null) {\n            // The dropdown has not actually been display yet, so there's nothing to reset\n            return;\n          }\n\n          // Move the dropdown element back to its original location in the DOM\n          placeholder.replaceWith(element);\n          placeholder = null;\n\n          element[0].style.position = '';\n          element[0].style.left = '';\n          element[0].style.top = '';\n          element[0].style.width = originalWidth;\n\n          // Set focus back on to the moved element\n          $select.setFocus();\n        }\n\n        // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var dropdown = null,\n            directionUpClassName = 'direction-up';\n\n        // Support changing the direction of the dropdown if there isn't enough space to render it.\n        scope.$watch('$select.open', function() {\n\n          if ($select.dropdownPosition === 'auto' || $select.dropdownPosition === 'up'){\n            scope.calculateDropdownPos();\n          }\n\n        });\n\n        var setDropdownPosUp = function(offset, offsetDropdown){\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.top = (offsetDropdown.height * -1) + 'px';\n          element.addClass(directionUpClassName);\n\n        };\n\n        var setDropdownPosDown = function(offset, offsetDropdown){\n\n          element.removeClass(directionUpClassName);\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n\n        };\n\n        var calculateDropdownPosAfterAnimation = function() {\n          // Delay positioning the dropdown until all choices have been added so its height is correct.\n          $timeout(function() {\n            if ($select.dropdownPosition === 'up') {\n              //Go UP\n              setDropdownPosUp();\n            } else {\n              //AUTO\n              element.removeClass(directionUpClassName);\n\n              var offset = uisOffset(element);\n              var offsetDropdown = uisOffset(dropdown);\n\n              //https://code.google.com/p/chromium/issues/detail?id=342307#c4\n              var scrollTop = $document[0].documentElement.scrollTop || $document[0].body.scrollTop; //To make it cross browser (blink, webkit, IE, Firefox).\n\n              // Determine if the direction of the dropdown needs to be changed.\n              if (offset.top + offset.height + offsetDropdown.height > scrollTop + $document[0].documentElement.clientHeight) {\n                //Go UP\n                setDropdownPosUp(offset, offsetDropdown);\n              }else{\n                //Go DOWN\n                setDropdownPosDown(offset, offsetDropdown);\n              }\n            }\n\n            // Display the dropdown once it has been positioned.\n            dropdown[0].style.opacity = 1;\n          });\n        };\n\n        var opened = false;\n        \n        scope.calculateDropdownPos = function() {\n          if ($select.open) {\n            dropdown = angular.element(element).querySelectorAll('.ui-select-dropdown');\n\n            if (dropdown.length === 0) {\n              return;\n            }\n\n           // Hide the dropdown so there is no flicker until $timeout is done executing.\n           if ($select.search === '' && !opened) {\n              dropdown[0].style.opacity = 0;\n              opened = true;\n           }\n\n            if (!uisOffset(dropdown).height && $select.$animate && $select.$animate.on && $select.$animate.enabled(dropdown)) {\n              var needsCalculated = true;\n\n              $select.$animate.on('enter', dropdown, function (elem, phase) {\n                if (phase === 'close' && needsCalculated) {\n                  calculateDropdownPosAfterAnimation();\n                  needsCalculated = false;\n                }\n              });\n            } else {\n              calculateDropdownPosAfterAnimation();\n            }\n          } else {\n            if (dropdown === null || dropdown.length === 0) {\n              return;\n            }\n\n            // Reset the position of the dropdown.\n            dropdown[0].style.opacity = 0;\n            dropdown[0].style.position = '';\n            dropdown[0].style.top = '';\n            element.removeClass(directionUpClassName);\n          }\n        };\n      };\n    }\n  };\n}]);\n\nuis.directive('uiSelectMatch', ['uiSelectConfig', function(uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-match');\n\n      var parent = tElement.parent();\n      // Gets theme attribute from parent (ui-select)\n      var theme = getAttribute(parent, 'theme') || uiSelectConfig.theme;\n      var multi = angular.isDefined(getAttribute(parent, 'multiple'));\n\n      return theme + (multi ? '/match-multiple.tpl.html' : '/match.tpl.html');      \n    },\n    link: function(scope, element, attrs, $select) {\n      $select.lockChoiceExpression = attrs.uiLockChoice;\n      attrs.$observe('placeholder', function(placeholder) {\n        $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n      });\n\n      function setAllowClear(allow) {\n        $select.allowClear = (angular.isDefined(allow)) ? (allow === '') ? true : (allow.toLowerCase() === 'true') : false;\n      }\n\n      attrs.$observe('allowClear', setAllowClear);\n      setAllowClear(attrs.allowClear);\n\n      if($select.multiple){\n        $select.sizeSearchInput();\n      }\n\n    }\n  };\n\n  function getAttribute(elem, attribute) {\n    if (elem[0].hasAttribute(attribute))\n      return elem.attr(attribute);\n\n    if (elem[0].hasAttribute('data-' + attribute))\n      return elem.attr('data-' + attribute);\n\n    if (elem[0].hasAttribute('x-' + attribute))\n      return elem.attr('x-' + attribute);\n  }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr','$timeout', function(uiSelectMinErr, $timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope','$timeout', function($scope, $timeout){\n\n      var ctrl = this,\n          $select = $scope.$select,\n          ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$evalAsync(function(){ ngModel = $scope.ngModel; });\n\n      ctrl.activeMatchIndex = -1;\n\n      ctrl.updateModel = function(){\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function(){\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        if($select.refreshItems){\n          $select.refreshItems();\n        }\n        if($select.sizeSearchInput){\n          $select.sizeSearchInput();\n        }\n      };\n\n      // Remove item from multiple select\n      ctrl.removeChoice = function(index){\n\n        // if the choice is locked, don't remove it\n        if($select.isLocked(null, index)) return false;\n\n        var removedChoice = $select.selected[index];\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = removedChoice;\n\n        $select.selected.splice(index, 1);\n        ctrl.activeMatchIndex = -1;\n        $select.sizeSearchInput();\n\n        // Give some time for scope propagation.\n        $timeout(function(){\n          $select.onRemoveCallback($scope, {\n            $item: removedChoice,\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        ctrl.updateModel();\n\n        return true;\n      };\n\n      ctrl.getPlaceholder = function(){\n        //Refactor single?\n        if($select.selected && $select.selected.length) return;\n        return $select.placeholder;\n      };\n\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n\n      //Input that will handle focus\n      $select.focusInput = $select.searchInput;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function(value) {\n        return !value || value.length === 0;\n      };\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n            result,\n            resultMultiple = [];\n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          resultMultiple.unshift(result);\n        }\n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function(list, value){\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if($select.parserResult.trackByExp){\n                var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n                var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n                if(propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName){\n                  if(matches && matches.length>0 && result[matches[1]] == value[matches[1]]){\n                      resultMultiple.unshift(list[p]);\n                      return true;\n                  }\n                }\n            }\n            if (angular.equals(result,value)){\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])){\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])){\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function(){ return ngModel.$modelValue; }, function(newValue, oldValue) {\n        if (oldValue != newValue){\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ngModel.$modelValue)) {\n            ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function() {\n        // Make sure that model value is array\n        if(!angular.isArray(ngModel.$viewValue)){\n          // Have tolerance for null or undefined values\n          if(angular.isUndefined(ngModel.$viewValue) || ngModel.$viewValue === null){\n            ngModel.$viewValue = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        $selectMultiple.refreshComponent();\n        scope.$evalAsync(); //To force $digest\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        if($select.selected.length >= $select.limit) {\n          return;\n        }\n        $select.selected.push(item);\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndex = -1;\n      });\n\n      scope.$watch('$select.disabled', function(newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      $select.searchInput.on('keydown', function(e) {\n        var key = e.which;\n        scope.$apply(function() {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if(KEY.isHorizontalMovement(key)){\n            processed = _handleMatchSelection(key);\n          }\n          if (processed  && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        });\n      });\n      function _getCaretPosition(el) {\n        if(angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(key){\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n            length = $select.selected.length,\n            // none  = -1,\n            first = 0,\n            last  = length-1,\n            curr  = $selectMultiple.activeMatchIndex,\n            next  = $selectMultiple.activeMatchIndex+1,\n            prev  = $selectMultiple.activeMatchIndex-1,\n            newIndex = curr;\n\n        if(caretPosition > 0 || ($select.search.length && key == KEY.RIGHT)) return false;\n\n        $select.close();\n\n        function getNewActiveMatchIndex(){\n          switch(key){\n            case KEY.LEFT:\n              // Select previous/first item\n              if(~$selectMultiple.activeMatchIndex) return prev;\n              // Select last item\n              else return last;\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if(!~$selectMultiple.activeMatchIndex || curr === last){\n                $select.activate();\n                return false;\n              }\n              // Select next/last item\n              else return next;\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              if(~$selectMultiple.activeMatchIndex){\n                if($selectMultiple.removeChoice(curr)) {\n                  return prev;\n                } else {\n                  return curr;\n                }\n                \n              } else {\n                // If nothing yet selected, select last item\n                return last;  \n              }              \n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice($selectMultiple.activeMatchIndex);\n                return curr;\n              }\n              else return false;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if(!$select.selected.length || newIndex === false) $selectMultiple.activeMatchIndex = -1;\n        else $selectMultiple.activeMatchIndex = Math.min(last,Math.max(first,newIndex));\n\n        return true;\n      }\n\n      $select.searchInput.on('keyup', function(e) {\n\n        if ( ! KEY.isVerticalMovement(e.which) ) {\n          scope.$evalAsync( function () {\n            $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          });\n        }\n        // Push a \"create new\" item into array if there is a search string\n        if ( $select.tagging.isActivated && $select.search.length > 0 ) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which) ) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          // taggingLabel === false bypasses all of this\n          if ($select.taggingLabel === false) return;\n\n          var items = angular.copy( $select.items );\n          var stashArr = angular.copy( $select.items );\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n          if ( $select.tagging.fct !== undefined) {\n            tagItems = $select.$filter('filter')(items,{'isTag': true});\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            if ( items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.tagging.fct($select.search);\n            // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            if (\n              stashArr.some(function (origItem) {\n                 return angular.equals(origItem, newItem);\n              }) ||\n              $select.selected.some(function (origItem) {\n                return angular.equals(origItem, newItem);\n              })\n            ) {\n              scope.$evalAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n              return;\n            }\n            if (newItem) newItem.isTag = true;\n          // handle newItem string and stripping dupes in tagging string context\n          } else {\n            // find any tagging items already in the $select.items array and store them\n            tagItems = $select.$filter('filter')(items,function (item) {\n              return item.match($select.taggingLabel);\n            });\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            item = items[0];\n            // remove existing tag item if found (should only ever be one tag item)\n            if ( item !== undefined && items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.search+' '+$select.taggingLabel;\n            if ( _findApproxDupe($select.selected, $select.search) > -1 ) {\n              return;\n            }\n            // verify the the tag doesn't match the value of an existing item from\n            // the searched data set or the items already selected\n            if ( _findCaseInsensitiveDupe(stashArr.concat($select.selected)) ) {\n              // if there is a tag from prev iteration, strip it / queue the change\n              // and return early\n              if ( hasTag ) {\n                items = stashArr;\n                scope.$evalAsync( function () {\n                  $select.activeIndex = 0;\n                  $select.items = items;\n                });\n              }\n              return;\n            }\n            if ( _findCaseInsensitiveDupe(stashArr) ) {\n              // if there is a tag from prev iteration, strip it\n              if ( hasTag ) {\n                $select.items = stashArr.slice(1,stashArr.length);\n              }\n              return;\n            }\n          }\n          if ( hasTag ) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if ( dupeIndex > -1 ) {\n            items = items.slice(dupeIndex+1,items.length-1);\n          } else {\n            items = [];\n            if (newItem) items.push(newItem);\n            items = items.concat(stashArr);\n          }\n          scope.$evalAsync( function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n\n            if ($select.isGrouped) {\n              // update item references in groups, so that indexOf will work after angular.copy\n              var itemsWithoutTag = newItem ? items.slice(1) : items;\n              $select.setItemsFn(itemsWithoutTag);\n              if (newItem) {\n                // add tag item as a new group\n                $select.items.unshift(newItem);\n                $select.groups.unshift({name: '', items: [newItem], tagging: true});\n              }\n            }\n          });\n        }\n      });\n      function _findCaseInsensitiveDupe(arr) {\n        if ( arr === undefined || $select.search === undefined ) {\n          return false;\n        }\n        var hasDupe = arr.filter( function (origItem) {\n          if ( $select.search.toUpperCase() === undefined || origItem === undefined ) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if(angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i <tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ( $select.tagging.fct === undefined ) {\n              // search the array for the match\n              if ( tempArr[i]+' '+$select.taggingLabel === needle ) {\n              dupeIndex = i;\n              }\n            // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ( angular.equals(mockObj, needle) ) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n\n      $select.searchInput.on('blur', function() {\n        $timeout(function() {\n          $selectMultiple.activeMatchIndex = -1;\n        });\n      });\n\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Needed so the uiSelect can detect the transcluded content\n                tElement.addClass('ui-select-no-choice');\n      \n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }\n        };\n    }]);\n\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        var locals = {},\n            result;\n        locals[$select.parserResult.itemName] = inputValue;\n        result = $select.parserResult.modelMapper(scope, locals);\n        return result;\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result === inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          $select.focusser.prop('disabled', false);\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      scope.$on('uis:activate', function () {\n        focusser.prop('disabled', true); //Will reactivate it on .close()\n      });\n\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n\n      //Input that will handle focus\n      $select.focusInput = focusser;\n\n      element.parent().append(focusser);\n      focusser.bind(\"focus\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = true;\n        });\n      });\n      focusser.bind(\"blur\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = false;\n        });\n      });\n      focusser.bind(\"keydown\", function(e){\n\n        if (e.which === KEY.BACKSPACE) {\n          e.preventDefault();\n          e.stopPropagation();\n          $select.select(undefined);\n          scope.$apply();\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          e.preventDefault();\n          e.stopPropagation();\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.bind(\"keyup input\", function(e){\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser.val()); //User pressed some regular key, so we pass it to the search input\n        focusser.val('');\n        scope.$digest();\n\n      });\n\n\n    }\n  };\n}]);\n\n// Make multiple matches sortable\nuis.directive('uiSelectSort', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', function($timeout, uiSelectConfig, uiSelectMinErr) {\n  return {\n    require: ['^^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n      if (scope[attrs.uiSelectSort] === null) {\n        throw uiSelectMinErr('sort', 'Expected a list to sort');\n      }\n\n      var $select = ctrls[0];\n      var $ngModel = ctrls[1];\n\n      var options = angular.extend({\n          axis: 'horizontal'\n        },\n        scope.$eval(attrs.uiSelectSortOptions));\n\n      var axis = options.axis;\n      var draggingClassName = 'dragging';\n      var droppingClassName = 'dropping';\n      var droppingBeforeClassName = 'dropping-before';\n      var droppingAfterClassName = 'dropping-after';\n\n      scope.$watch(function(){\n        return $select.sortable;\n      }, function(newValue){\n        if (newValue) {\n          element.attr('draggable', true);\n        } else {\n          element.removeAttr('draggable');\n        }\n      });\n\n      element.on('dragstart', function(event) {\n        element.addClass(draggingClassName);\n\n        (event.dataTransfer || event.originalEvent.dataTransfer).setData('text', scope.$index.toString());\n      });\n\n      element.on('dragend', function() {\n        removeClass(draggingClassName);\n      });\n\n      var move = function(from, to) {\n        /*jshint validthis: true */\n        this.splice(to, 0, this.splice(from, 1)[0]);\n      };\n\n      var removeClass = function(className) {\n        angular.forEach($select.$element.querySelectorAll('.' + className), function(el){\n          angular.element(el).removeClass(className);\n        });\n      };\n\n      var dragOverHandler = function(event) {\n        event.preventDefault();\n\n        var offset = axis === 'vertical' ? event.offsetY || event.layerY || (event.originalEvent ? event.originalEvent.offsetY : 0) : event.offsetX || event.layerX || (event.originalEvent ? event.originalEvent.offsetX : 0);\n\n        if (offset < (this[axis === 'vertical' ? 'offsetHeight' : 'offsetWidth'] / 2)) {\n          removeClass(droppingAfterClassName);\n          element.addClass(droppingBeforeClassName);\n\n        } else {\n          removeClass(droppingBeforeClassName);\n          element.addClass(droppingAfterClassName);\n        }\n      };\n\n      var dropTimeout;\n\n      var dropHandler = function(event) {\n        event.preventDefault();\n\n        var droppedItemIndex = parseInt((event.dataTransfer || event.originalEvent.dataTransfer).getData('text'), 10);\n\n        // prevent event firing multiple times in firefox\n        $timeout.cancel(dropTimeout);\n        dropTimeout = $timeout(function() {\n          _dropHandler(droppedItemIndex);\n        }, 20);\n      };\n\n      var _dropHandler = function(droppedItemIndex) {\n        var theList = scope.$eval(attrs.uiSelectSort);\n        var itemToMove = theList[droppedItemIndex];\n        var newIndex = null;\n\n        if (element.hasClass(droppingBeforeClassName)) {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index - 1;\n          } else {\n            newIndex = scope.$index;\n          }\n        } else {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index;\n          } else {\n            newIndex = scope.$index + 1;\n          }\n        }\n\n        move.apply(theList, [droppedItemIndex, newIndex]);\n\n        $ngModel.$setViewValue(Date.now());\n\n        scope.$apply(function() {\n          scope.$emit('uiSelectSort:change', {\n            array: theList,\n            item: itemToMove,\n            from: droppedItemIndex,\n            to: newIndex\n          });\n        });\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('drop', dropHandler);\n      };\n\n      element.on('dragenter', function() {\n        if (element.hasClass(draggingClassName)) {\n          return;\n        }\n\n        element.addClass(droppingClassName);\n\n        element.on('dragover', dragOverHandler);\n        element.on('drop', dropHandler);\n      });\n\n      element.on('dragleave', function(event) {\n        if (event.target != element) {\n          return;\n        }\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('dragover', dragOverHandler);\n        element.off('drop', dropHandler);\n      });\n    }\n  };\n}]);\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\nuis.directive('uisOpenClose', ['$parse', '$timeout', function ($parse, $timeout) {\n  return {\n    restrict: 'A',\n    require: 'uiSelect',\n    link: function (scope, element, attrs, $select) {\n      $select.onOpenCloseCallback = $parse(attrs.uisOpenClose);\n\n      scope.$watch('$select.open', function (isOpen, previousState) {\n        if (isOpen !== previousState) {\n          $timeout(function () {\n            $select.onOpenCloseCallback(scope, {\n              isOpen: isOpen\n            });\n          });\n        }\n      });\n    }\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr','$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n    \n    var source = match[5], \n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items \n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }      \n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      } \n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups track by $group.name';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bootstrap/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content ui-select-dropdown dropdown-menu\\\" role=\\\"listbox\\\" ng-show=\\\"$select.open && $select.items.length > 0\\\"><li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"><div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div><div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\" role=\\\"option\\\"><span class=\\\"ui-select-choices-row-inner\\\"></span></div></li></ul>\");\n$templateCache.put(\"bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><span ng-repeat=\\\"$item in $select.selected track by $index\\\"><span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span uis-transclude-append=\\\"\\\"></span></span></span></span>\");\n$templateCache.put(\"bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open && $select.searchEnabled\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"><span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left\\\" ng-class=\\\"{\\'ui-select-allow-clear\\': $select.allowClear && !$select.isEmpty()}\\\" ng-transclude=\\\"\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i> <a ng-show=\\\"$select.allowClear && !$select.isEmpty() && ($select.disabled !== true)\\\" aria-label=\\\"{{ $select.baseTitle }} clear\\\" style=\\\"margin-right: 10px\\\" ng-click=\\\"$select.clear($event)\\\" class=\\\"btn btn-xs btn-link pull-right\\\"><i class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></i></a></span></div>\");\n$templateCache.put(\"bootstrap/no-choice.tpl.html\",\"<ul class=\\\"ui-select-no-choice dropdown-menu\\\" ng-show=\\\"$select.items.length == 0\\\"><li ng-transclude=\\\"\\\"></li></ul>\");\n$templateCache.put(\"bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control\\\" ng-class=\\\"{open: $select.open}\\\"><div><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" ondrop=\\\"return false;\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap dropdown\\\" ng-class=\\\"{open: $select.open}\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"form-control ui-select-search\\\" ng-class=\\\"{ \\'ui-select-search-hidden\\' : !$select.searchEnabled }\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-show=\\\"$select.open\\\"><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"select2/choices.tpl.html\",\"<ul tabindex=\\\"-1\\\" class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"><li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group) }\\\"><div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div><ul role=\\\"listbox\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group) }\\\"><li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $select.isActive(this), \\'select2-disabled\\': $select.isDisabled(this)}\\\"><div class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div></li></ul></li></ul>\");\n$templateCache.put(\"select2/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span uis-transclude-append=\\\"\\\"></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a></li></span>\");\n$templateCache.put(\"select2/match.tpl.html\",\"<a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-transclude=\\\"\\\"></span> <abbr ng-if=\\\"$select.allowClear && !$select.isEmpty()\\\" class=\\\"select2-search-choice-close\\\" ng-click=\\\"$select.clear($event)\\\"></abbr> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span></a>\");\n$templateCache.put(\"select2/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"><div class=\\\"dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled}\\\"><ul class=\\\"select2-choices\\\"><span class=\\\"ui-select-match\\\"></span><li class=\\\"select2-search-field\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" style=\\\"width: 34px;\\\" ondrop=\\\"return false;\\\"></li></ul><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open || $select.items.length === 0}\\\"><div class=\\\"ui-select-choices\\\"></div></div></div>\");\n$templateCache.put(\"select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled, \\'select2-container-active\\': $select.focus, \\'select2-allowclear\\': $select.allowClear && !$select.isEmpty()}\\\"><div class=\\\"ui-select-match\\\"></div><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"><div class=\\\"search-container\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled, \\'select2-search\\':$select.searchEnabled}\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"ui-select-search select2-input\\\" ng-model=\\\"$select.search\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div></div>\");\n$templateCache.put(\"selectize/choices.tpl.html\",\"<div ng-show=\\\"$select.open\\\" class=\\\"ui-select-choices ui-select-dropdown selectize-dropdown single\\\"><div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"><div class=\\\"ui-select-choices-group optgroup\\\" role=\\\"listbox\\\"><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div><div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\"><div class=\\\"option ui-select-choices-row-inner\\\" data-selectable=\\\"\\\"></div></div></div></div></div>\");\n$templateCache.put(\"selectize/match.tpl.html\",\"<div ng-hide=\\\"$select.searchEnabled && ($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\"><span ng-show=\\\"!$select.searchEnabled && ($select.isEmpty() || $select.open)\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty() || $select.open\\\" ng-transclude=\\\"\\\"></span></div>\");\n$templateCache.put(\"selectize/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice selectize-dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"><div class=\\\"selectize-dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.isEmpty() && !$select.open\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");}]);","require('./dist/select.js');\nmodule.exports = 'ui.select';\n","/*!\nangular-xeditable - 0.5.0\nEdit-in-place for angular.js\nBuild date: 2016-10-27 \n*/\n/**\n * Angular-xeditable module \n *\n */\nangular.module('xeditable', [])\n\n\n/**\n * Default options. \n *\n * @namespace editable-options\n */\n//todo: maybe better have editableDefaults, not options...\n.value('editableOptions', {\n  /**\n   * Theme. Possible values `bs3`, `bs2`, `default`.  \n   * Default is `default`\n   * \n   * @var {string} theme\n   * @memberOf editable-options\n   */  \n  theme: 'default',\n  /**\n   * Icon Set. Possible values `font-awesome`, `default`.  \n   * Default is `default`\n   * \n   * @var {string} icon set\n   * @memberOf editable-options\n   */  \n  icon_set: 'default',\n  /**\n   * Whether to show buttons for single editable element.  \n   * Possible values `right`, `no`.  \n   * Default is `right`\n   * \n   * @var {string} buttons\n   * @memberOf editable-options\n   */    \n  buttons: 'right',\n  /**\n   * Default value for `blur` attribute of single editable element.  \n   * Can be `cancel|submit|ignore`.  \n   * Default is `cancel`\n   * \n   * @var {string} blurElem\n   * @memberOf editable-options\n   */\n  blurElem: 'cancel',\n  /**\n   * Default value for `blur` attribute of editable form.  \n   * Can be `cancel|submit|ignore`.  \n   * Default is `ignore`.\n   * \n   * @var {string} blurForm\n   * @memberOf editable-options\n   */\n  blurForm: 'ignore',\n  /**\n   * How input elements get activated. Possible values: `focus|select|none`.  \n   * Default is `focus`\n   *\n   * @var {string} activate\n   * @memberOf editable-options\n   */\n  activate: 'focus',\n  /**\n   * Whether to disable x-editable. Can be overloaded on each element.  \n   * Default is `false`\n   *\n   * @var {boolean} isDisabled\n   * @memberOf editable-options\n   */\n   isDisabled: false,\n  \n  /**\n   * Event, on which the edit mode gets activated. \n   * Can be any event.  \n   * Default is `click`\n   *\n   * @var {string} activationEvent\n   * @memberOf editable-options\n   */\n  activationEvent: 'click',\n\n  /**\n   * The default title of the submit button.  \n   * Default is `Submit`\n   *\n   * @var {string} submitButtonTitle\n   * @memberOf editable-options\n   */\n  submitButtonTitle: 'Submit',\n\n  /**\n   * The default aria label of the submit button.  \n   * Default is `Submit`\n   *\n   * @var {string} submitButtonAriaLabel\n   * @memberOf editable-options\n   */\n  submitButtonAriaLabel: 'Submit',\n\n  /**\n   * The default title of the cancel button.  \n   * Default is `Cancel`\n   *\n   * @var {string} cancelButtonTitle\n   * @memberOf editable-options\n   */\n  cancelButtonTitle: 'Cancel',\n\n  /**\n   * The default aria label of the cancel button.  \n   * Default is `Cancel`\n   *\n   * @var {string} cancelButtonAriaLabel\n   * @memberOf editable-options\n   */\n  cancelButtonAriaLabel: 'Cancel',\n\n  /**\n   * The default title of the clear button.  \n   * Default is `Clear`\n   *\n   * @var {string} clearButtonTitle\n   * @memberOf editable-options\n   */\n  clearButtonTitle: 'Clear',\n\n  /**\n   * The default aria label of the clear button.  \n   * Default is `Clear`\n   *\n   * @var {string} clearButtonAriaLabel\n   * @memberOf editable-options\n   */\n  clearButtonAriaLabel: 'Clear',\n\n  /**\n   * Whether to display the clear button.  \n   * Default is `false`\n   *\n   * @var {boolean} displayClearButton\n   * @memberOf editable-options\n   */\n  displayClearButton: false\n});\n\n/*\n Angular-ui bootstrap datepicker\n http://angular-ui.github.io/bootstrap/#/datepicker\n */\nangular.module('xeditable').directive('editableBsdate', ['editableDirectiveFactory',\n    function(editableDirectiveFactory) {\n        return editableDirectiveFactory({\n            directiveName: 'editableBsdate',\n            inputTpl: '<div></div>',\n            render: function() {\n                /** This basically renders a datepicker as in the example shown in\n                 **  http://angular-ui.github.io/bootstrap/#/datepicker\n                 **  The attributes are all the same as in the bootstrap-ui datepicker with e- as prefix\n                 **/\n                this.parent.render.call(this);\n\n                var inputDatePicker = angular.element('<input type=\"text\" class=\"form-control\" data-ng-model=\"$parent.$data\"/>');\n\n                inputDatePicker.attr('uib-datepicker-popup', this.attrs.eDatepickerPopupXEditable || 'yyyy/MM/dd' );\n                inputDatePicker.attr('is-open', this.attrs.eIsOpen);\n                inputDatePicker.attr('date-disabled', this.attrs.eDateDisabled);\n                inputDatePicker.attr('uib-datepicker-popup', this.attrs.eDatepickerPopup);\n                inputDatePicker.attr('year-range', this.attrs.eYearRange || 20);\n                inputDatePicker.attr('show-button-bar', this.attrs.eShowButtonBar || true);\n                inputDatePicker.attr('current-text', this.attrs.eCurrentText || 'Today');\n                inputDatePicker.attr('clear-text', this.attrs.eClearText || 'Clear');\n                inputDatePicker.attr('close-text', this.attrs.eCloseText || 'Done');\n                inputDatePicker.attr('close-on-date-selection', this.attrs.eCloseOnDateSelection || true);\n                inputDatePicker.attr('datepicker-append-to-body', this.attrs.eDatePickerAppendToBody || false);\n                inputDatePicker.attr('date-disabled', this.attrs.eDateDisabled);\n                inputDatePicker.attr('name', this.attrs.eName);\n                inputDatePicker.attr('on-open-focus', this.attrs.eOnOpenFocus || true);\n                inputDatePicker.attr('ng-readonly', this.attrs.eReadonly || false);\n\n                if (this.attrs.eNgChange) {\n                    inputDatePicker.attr('ng-change', this.attrs.eNgChange);\n                    this.inputEl.removeAttr('ng-change');\n                }\n\n                if (this.attrs.eStyle) {\n                    inputDatePicker.attr('style', this.attrs.eStyle);\n                    this.inputEl.removeAttr('style');\n                }\n\n                this.scope.dateOptions = {\n                    formatDay:  this.attrs.eFormatDay || 'dd',\n                    formatMonth: this.attrs.eFormatMonth || 'MMMM',\n                    formatYear: this.attrs.eFormatYear || 'yyyy',\n                    formatDayHeader: this.attrs.eFormatDayHeader || 'EEE',\n                    formatDayTitle: this.attrs.eFormatDayTitle || 'MMMM yyyy',\n                    formatMonthTitle: this.attrs.eFormatMonthTitle || 'yyyy',\n                    showWeeks: this.attrs.eShowWeeks ? this.attrs.eShowWeeks.toLowerCase() === 'true' : true,\n                    startingDay: this.attrs.eStartingDay || 0,\n                    minMode: this.attrs.eMinMode || 'day',\n                    maxMode: this.attrs.eMaxMode || 'year',\n                    initDate: this.scope.$eval(this.attrs.eInitDate) || new Date(),\n                    datepickerMode: this.attrs.eDatepickerMode || 'day',\n                    maxDate: this.scope.$eval(this.attrs.eMaxDate) || null,\n                    minDate: this.scope.$eval(this.attrs.eMinDate) || null\n                };\n\n                var showCalendarButton = angular.isDefined(this.attrs.eShowCalendarButton) ? this.attrs.eShowCalendarButton : \"true\";\n\n                //See if calendar button should be displayed\n                if (showCalendarButton === \"true\") {\n                    var buttonDatePicker = angular.element('<button type=\"button\" class=\"btn btn-default\"><i class=\"glyphicon glyphicon-calendar\"></i></button>');\n                    var buttonWrapper = angular.element('<span class=\"input-group-btn\"></span>');\n\n                    buttonDatePicker.attr('ng-click', this.attrs.eNgClick);\n\n                    buttonWrapper.append(buttonDatePicker);\n\n                    this.inputEl.append(buttonWrapper);\n                } else {\n                    //If no calendar button, display calendar popup on click of input field\n                    inputDatePicker.attr('ng-click', this.attrs.eNgClick);\n                }\n\n                inputDatePicker.attr('datepicker-options', \"dateOptions\");\n\n                this.inputEl.prepend(inputDatePicker);\n\n                this.inputEl.removeAttr('class');\n                this.inputEl.removeAttr('ng-click');\n                this.inputEl.removeAttr('is-open');\n                this.inputEl.removeAttr('init-date');\n                this.inputEl.removeAttr('datepicker-popup');\n                this.inputEl.removeAttr('required');\n                this.inputEl.removeAttr('ng-model');\n                this.inputEl.removeAttr('date-picker-append-to-body');\n                this.inputEl.removeAttr('name');\n                this.inputEl.attr('class','input-group');\n            }\n\t});\n}]);\n/*\nAngular-ui bootstrap editable timepicker\nhttp://angular-ui.github.io/bootstrap/#/timepicker\n*/\nangular.module('xeditable').directive('editableBstime', ['editableDirectiveFactory',\n  function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n      directiveName: 'editableBstime',\n      inputTpl: '<uib-timepicker></uib-timepicker>',\n      render: function() {\n        this.parent.render.call(this);\n\n        // timepicker can't update model when ng-model set directly to it\n        // see: https://github.com/angular-ui/bootstrap/issues/1141\n        // so we wrap it into DIV\n        var div = angular.element('<div class=\"well well-small\" style=\"display:inline-block;\"></div>');\n\n        // move ng-model to wrapping div\n        div.attr('ng-model', this.inputEl.attr('ng-model'));\n        this.inputEl.removeAttr('ng-model');\n\n        // move ng-change to wrapping div\n        if(this.attrs.eNgChange) {\n          div.attr('ng-change', this.inputEl.attr('ng-change'));\n          this.inputEl.removeAttr('ng-change');\n        }\n\n        // wrap\n        this.inputEl.wrap(div);\n      }\n    });\n}]);\n//checkbox\nangular.module('xeditable').directive('editableCheckbox', ['editableDirectiveFactory',\n  function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n      directiveName: 'editableCheckbox',\n      inputTpl: '<input type=\"checkbox\">',\n      render: function() {\n        this.parent.render.call(this);\n        if(this.attrs.eTitle) {\n          this.inputEl.wrap('<label></label>');\n          this.inputEl.parent().append('<span>' + this.attrs.eTitle + '</span>');\n        }\n      },\n      autosubmit: function() {\n        var self = this;\n        self.inputEl.bind('change', function() {\n          setTimeout(function() {\n            self.scope.$apply(function() {\n              self.scope.$form.$submit();\n            });\n          }, 500);\n        });\n      }\n    });\n}]);\n\n// checklist\nangular.module('xeditable').directive('editableChecklist', [\n  'editableDirectiveFactory',\n  'editableNgOptionsParser',\n  function(editableDirectiveFactory, editableNgOptionsParser) {\n    return editableDirectiveFactory({\n      directiveName: 'editableChecklist',\n      inputTpl: '<span></span>',\n      useCopy: true,\n      render: function() {\n        this.parent.render.call(this);\n        var parsed = editableNgOptionsParser(this.attrs.eNgOptions);\n        var ngChangeHtml = '';\n        var ngChecklistComparatorHtml = '';\n\n        if (this.attrs.eNgChange) {\n          ngChangeHtml = ' ng-change=\"' +  this.attrs.eNgChange + '\"';\n        }\n\n        if (this.attrs.eChecklistComparator) {\n          ngChecklistComparatorHtml = ' checklist-comparator=\"' +  this.attrs.eChecklistComparator + '\"';\n        }\n        \n        var html = '<label ng-repeat=\"'+parsed.ngRepeat+'\">'+\n          '<input type=\"checkbox\" checklist-model=\"$parent.$parent.$data\" checklist-value=\"'+parsed.locals.valueFn+'\"' +\n            ngChangeHtml + ngChecklistComparatorHtml + '>'+\n          '<span ng-bind=\"'+parsed.locals.displayFn+'\"></span></label>';\n\n        this.inputEl.removeAttr('ng-model');\n        this.inputEl.removeAttr('ng-options');\n        this.inputEl.removeAttr('ng-change');\n        this.inputEl.removeAttr('checklist-comparator');\n        this.inputEl.html(html);\n      }\n    });\n}]);\n\nangular.module('xeditable').directive('editableCombodate', ['editableDirectiveFactory', 'editableCombodate',\n  function(editableDirectiveFactory, editableCombodate) {\n    return editableDirectiveFactory({\n      directiveName: 'editableCombodate',\n      inputTpl: '<input type=\"text\">',\n      render: function() {\n        this.parent.render.call(this);\n\n        var options = {\n          value: new Date(this.scope.$data)\n        };\n        var self = this;\n        angular.forEach([\"format\", \"template\", \"minYear\", \"maxYear\", \"yearDescending\", \"minuteStep\", \"secondStep\", \"firstItem\", \"errorClass\", \"customClass\", \"roundTime\", \"smartDays\"], function(name) {\n\n          var attrName = \"e\" + name.charAt(0).toUpperCase() + name.slice(1);\n          if (attrName in self.attrs) {\n            options[name] = self.attrs[attrName];\n          }\n        });\n\n        var combodate = editableCombodate.getInstance(this.inputEl, options);\n        combodate.$widget.find('select').bind('change', function(e) {\n          self.scope.$data = (new Date(combodate.getValue())).toISOString();\n        });\n      }\n    });\n  }\n]);\n\n/*\nInput types: text|password|email|tel|number|url|search|color|date|datetime|datetime-local|time|month|week|file\n*/\n\n(function() {\n\n  var camelCase = function(dashDelimitedString) {\n    return dashDelimitedString.toLowerCase().replace(/-(.)/g, function(match, word) {\n      return word.toUpperCase();\n    });\n  };\n\n  var types = 'text|password|email|tel|number|url|search|color|date|datetime|datetime-local|time|month|week|file'.split('|');\n\n  //todo: datalist\n  \n  // generate directives\n  angular.forEach(types, function(type) {\n    var directiveName = camelCase('editable' + '-' + type);\n    angular.module('xeditable').directive(directiveName, ['editableDirectiveFactory',\n      function(editableDirectiveFactory) {\n        return editableDirectiveFactory({\n          directiveName: directiveName,\n          inputTpl: '<input type=\"'+type+'\">',\n          render: function() {\n            this.parent.render.call(this);\n\n            //Add bootstrap simple input groups\n            if (this.attrs.eInputgroupleft || this.attrs.eInputgroupright) {\n              this.inputEl.wrap('<div class=\"input-group\"></div>');\n\n              if (this.attrs.eInputgroupleft) {\n                var inputGroupLeft = angular.element('<span class=\"input-group-addon\">' + this.attrs.eInputgroupleft + '</span>');\n                this.inputEl.parent().prepend(inputGroupLeft);\n              }\n\n              if (this.attrs.eInputgroupright) {\n                var inputGroupRight = angular.element('<span class=\"input-group-addon\">' + this.attrs.eInputgroupright + '</span>');\n                this.inputEl.parent().append(inputGroupRight);\n              }\n            }\n\n            // Add label to the input\n            if (this.attrs.eLabel) {\n              var label = angular.element('<label>' + this.attrs.eLabel + '</label>');\n              if (this.attrs.eInputgroupleft || this.attrs.eInputgroupright) {\n                this.inputEl.parent().parent().prepend(label);\n              } else {\n                this.inputEl.parent().prepend(label);\n              }\n            }\n            \n            // Add classes to the form\n            if (this.attrs.eFormclass) {\n              this.editorEl.addClass(this.attrs.eFormclass);\n            }\n          }\n        });\n    }]);\n  });\n\n  //`range` is bit specific\n  angular.module('xeditable').directive('editableRange', ['editableDirectiveFactory', '$interpolate',\n    function(editableDirectiveFactory, $interpolate) {\n      return editableDirectiveFactory({\n        directiveName: 'editableRange',\n        inputTpl: '<input type=\"range\" id=\"range\" name=\"range\">',\n        render: function() {\n          this.parent.render.call(this);\n          this.inputEl.after('<output>' + $interpolate.startSymbol() + '$data' + $interpolate.endSymbol()  + '</output>');\n        }        \n      });\n  }]);\n\n}());\n\n\n/*\n Tags input directive for AngularJS\n https://github.com/mbenford/ngTagsInput\n */\nangular.module('xeditable').directive('editableTagsInput', ['editableDirectiveFactory', 'editableUtils',\n  function(editableDirectiveFactory, editableUtils) {\n    var dir = editableDirectiveFactory({\n        directiveName: 'editableTagsInput',\n        inputTpl: '<tags-input></tags-input>',\n        render: function () {\n            this.parent.render.call(this);\n            this.inputEl.append(editableUtils.rename('auto-complete', this.attrs.$autoCompleteElement));\n            this.inputEl.removeAttr('ng-model');\n            this.inputEl.attr('ng-model', '$parent.$data');\n        }\n    });\n\n    var linkOrg = dir.link;\n\n    dir.link = function (scope, el, attrs, ctrl) {\n        var autoCompleteEl = el.find('editable-tags-input-auto-complete');\n\n        attrs.$autoCompleteElement = autoCompleteEl.clone();\n\n        autoCompleteEl.remove();\n\n        return linkOrg(scope, el, attrs, ctrl);\n    };\n\n    return dir;\n}]);\n// radiolist\nangular.module('xeditable').directive('editableRadiolist', [\n  'editableDirectiveFactory',\n  'editableNgOptionsParser',\n  '$interpolate',\n  function(editableDirectiveFactory, editableNgOptionsParser, $interpolate) {\n    return editableDirectiveFactory({\n      directiveName: 'editableRadiolist',\n      inputTpl: '<span></span>',\n      render: function() {\n        this.parent.render.call(this);\n        var parsed = editableNgOptionsParser(this.attrs.eNgOptions);\n        var ngChangeHtml = '';\n\n        if (this.attrs.eNgChange) {\n          ngChangeHtml = 'ng-change=\"' +  this.attrs.eNgChange + '\"';\n        }\n\n        var html = '<label data-ng-repeat=\"'+parsed.ngRepeat+'\">'+\n          '<input type=\"radio\" data-ng-disabled=\"::' +\n            this.attrs.eNgDisabled +\n            '\" data-ng-model=\"$parent.$parent.$data\" data-ng-value=\"' + $interpolate.startSymbol() +\n            '::' + parsed.locals.valueFn + $interpolate.endSymbol() +'\"' +\n            ngChangeHtml + '>'+\n          '<span data-ng-bind=\"::'+parsed.locals.displayFn+'\"></span></label>';\n\n        this.inputEl.removeAttr('ng-model');\n        this.inputEl.removeAttr('ng-options');\n        this.inputEl.removeAttr('ng-change');\n        this.inputEl.html(html);\n      },\n      autosubmit: function() {\n        var self = this;\n        self.inputEl.bind('change', function() {\n          setTimeout(function() {\n            self.scope.$apply(function() {\n              self.scope.$form.$submit();\n            });\n          }, 500);\n        });\n      }\n    });\n}]);\n\n//select\nangular.module('xeditable').directive('editableSelect', ['editableDirectiveFactory',\n  function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n      directiveName: 'editableSelect',\n      inputTpl: '<select></select>',\n      render: function() {\n        this.parent.render.call(this);\n\n        if (this.attrs.ePlaceholder) {\n          var placeholder = angular.element('<option value=\"\">' + this.attrs.ePlaceholder + '</option>');\n          this.inputEl.append(placeholder);\n        }\n      },\n      autosubmit: function() {\n        var self = this;\n        self.inputEl.bind('change', function() {\n          self.scope.$apply(function() {\n            self.scope.$form.$submit();\n          });\n        });\n      }\n    });\n}]);\n//textarea\nangular.module('xeditable').directive('editableTextarea', ['editableDirectiveFactory',\n  function(editableDirectiveFactory) {\n    return editableDirectiveFactory({\n      directiveName: 'editableTextarea',\n      inputTpl: '<textarea></textarea>',\n      addListeners: function() {\n        var self = this;\n        self.parent.addListeners.call(self);\n        // submit textarea by ctrl+enter even with buttons\n        if (self.single && self.buttons !== 'no') {\n          self.autosubmit();\n        }\n      },\n      autosubmit: function() {\n        var self = this;\n        self.inputEl.bind('keydown', function(e) {\n          if ((e.ctrlKey || e.metaKey) && (e.keyCode === 13)) {\n            self.scope.$apply(function() {\n              self.scope.$form.$submit();\n            });\n          }\n        });\n      }\n    });\n}]);\n\n/*\n AngularJS-native version of Select2 and Selectize\n https://github.com/angular-ui/ui-select\n */\nangular.module('xeditable').directive('editableUiSelect',['editableDirectiveFactory', 'editableUtils',\n    function(editableDirectiveFactory, editableUtils) {\n        var dir = editableDirectiveFactory({\n            directiveName: 'editableUiSelect',\n            inputTpl: '<ui-select></ui-select>',\n            render: function () {\n                this.parent.render.call(this);\n                this.inputEl.append(editableUtils.rename('ui-select-match', this.attrs.$matchElement));\n                this.inputEl.append(editableUtils.rename('ui-select-choices', this.attrs.$choicesElement));\n                this.inputEl.removeAttr('ng-model');\n                this.inputEl.attr('ng-model', '$parent.$parent.$data');\n            }\n        });\n\n        var linkOrg = dir.link;\n\n        dir.link = function (scope, el, attrs, ctrl) {\n            var matchEl = el.find('editable-ui-select-match');\n            var choicesEl = el.find('editable-ui-select-choices');\n\n            attrs.$matchElement = matchEl.clone();\n            attrs.$choicesElement = choicesEl.clone();\n\n            matchEl.remove();\n            choicesEl.remove();\n\n            return linkOrg(scope, el, attrs, ctrl);\n        };\n\n        return dir;\n    }]);\n/**\n * EditableController class. \n * Attached to element with `editable-xxx` directive.\n *\n * @namespace editable-element\n */\n/*\nTODO: this file should be refactored to work more clear without closures!\n*/\nangular.module('xeditable').factory('editableController', \n  ['$q', 'editableUtils',\n  function($q, editableUtils) {\n\n  //EditableController function\n  EditableController.$inject = ['$scope', '$attrs', '$element', '$parse', 'editableThemes', 'editableIcons', 'editableOptions', '$rootScope', '$compile', '$q'];\n  function EditableController($scope, $attrs, $element, $parse, editableThemes, editableIcons, editableOptions, $rootScope, $compile, $q) {\n    var valueGetter;\n\n    //if control is disabled - it does not participate in waiting process\n    var inWaiting;\n\n    var self = this;\n\n    self.scope = $scope;\n    self.elem = $element;\n    self.attrs = $attrs;\n    self.inputEl = null;\n    self.editorEl = null;\n    self.single = true;\n    self.error = '';\n    self.theme =  editableThemes[$attrs.editableTheme] || editableThemes[editableOptions.theme] || editableThemes['default'];\n    self.parent = {};\n\n    //will be undefined if icon_set is default and theme is default\n    self.icon_set = editableOptions.icon_set === 'default' ? editableIcons.default[editableOptions.theme] : editableIcons.external[editableOptions.icon_set];\n\n    //to be overwritten by directive\n    self.inputTpl = '';\n    self.directiveName = '';\n\n    // with majority of controls copy is not needed, but..\n    // copy MUST NOT be used for `select-multiple` with objects as items\n    // copy MUST be used for `checklist`\n    self.useCopy = false;\n\n    //runtime (defaults)\n    self.single = null;\n\n    /**\n     * Attributes defined with `e-*` prefix automatically transferred from original element to\n     * control.  \n     * For example, if you set `<span editable-text=\"user.name\" e-style=\"width: 100px\"`>\n     * then input will appear as `<input style=\"width: 100px\">`.  \n     * See [demo](#text-customize).\n     * \n     * @var {any|attribute} e-*\n     * @memberOf editable-element\n     */ \n\n    /**\n     * Whether to show ok/cancel buttons. Values: `right|no`.\n     * If set to `no` control automatically submitted when value changed.  \n     * If control is part of form buttons will never be shown. \n     * \n     * @var {string|attribute} buttons\n     * @memberOf editable-element\n     */    \n    self.buttons = 'right'; \n    /**\n     * Action when control losses focus. Values: `cancel|submit|ignore`.\n     * Has sense only for single editable element.\n     * Otherwise, if control is part of form - you should set `blur` of form, not of individual element.\n     * \n     * @var {string|attribute} blur\n     * @memberOf editable-element\n     */     \n    // no real `blur` property as it is transferred to editable form\n\n    //init\n    self.init = function(single) {\n      self.single = single;\n\n      self.name = $attrs.eName || $attrs[self.directiveName];\n      /*\n      if(!$attrs[directiveName] && !$attrs.eNgModel && ($attrs.eValue === undefined)) {\n        throw 'You should provide value for `'+directiveName+'` or `e-value` in editable element!';\n      }\n      */\n      if($attrs[self.directiveName]) {\n        valueGetter = $parse($attrs[self.directiveName]);\n      } else {\n        throw 'You should provide value for `'+self.directiveName+'` in editable element!';\n      }\n\n      // settings for single and non-single\n      if (!self.single) {\n        // hide buttons for non-single\n        self.buttons = 'no';\n      } else {\n        self.buttons = self.attrs.buttons || editableOptions.buttons;\n      }\n\n      //if name defined --> watch changes and update $data in form\n      if($attrs.eName) {\n        self.scope.$watch('$data', function(newVal){\n          self.scope.$form.$data[$attrs.eName] = newVal;\n        });\n      }\n\n      /**\n       * Called when control is shown.  \n       * See [demo](#select-remote).\n       * \n       * @var {method|attribute} onshow\n       * @memberOf editable-element\n       */\n      if($attrs.onshow) {\n        self.onshow = function() {\n          return self.catchError($parse($attrs.onshow)($scope));\n        };\n      }\n\n      /**\n       * Called when control is hidden after both save or cancel.  \n       * \n       * @var {method|attribute} onhide\n       * @memberOf editable-element\n       */\n      if($attrs.onhide) {\n        self.onhide = function() {\n          return $parse($attrs.onhide)($scope);\n        };\n      }\n\n      /**\n       * Called when control is cancelled.  \n       * \n       * @var {method|attribute} oncancel\n       * @memberOf editable-element\n       */\n      if($attrs.oncancel) {\n        self.oncancel = function() {\n          return $parse($attrs.oncancel)($scope);\n        };\n      }          \n\n      /**\n       * Called during submit before value is saved to model.  \n       * See [demo](#onbeforesave).\n       * \n       * @var {method|attribute} onbeforesave\n       * @memberOf editable-element\n       */\n      if ($attrs.onbeforesave) {\n        self.onbeforesave = function() {\n          return self.catchError($parse($attrs.onbeforesave)($scope));\n        };\n      }\n\n      /**\n       * Called during submit after value is saved to model.  \n       * See [demo](#onaftersave).\n       * \n       * @var {method|attribute} onaftersave\n       * @memberOf editable-element\n       */\n      if ($attrs.onaftersave) {\n        self.onaftersave = function() {\n          return self.catchError($parse($attrs.onaftersave)($scope));\n        };\n      }\n\n      // watch change of model to update editable element\n      // now only add/remove `editable-empty` class.\n      // Initially this method called with newVal = undefined, oldVal = undefined\n      // so no need initially call handleEmpty() explicitly\n      $scope.$parent.$watch($attrs[self.directiveName], function(newVal, oldVal) {\n        self.setLocalValue();\n        self.handleEmpty();\n      });\n    };\n\n    self.render = function() {\n      var theme = self.theme;\n\n      //build input\n      self.inputEl = angular.element(self.inputTpl);\n\n      //build controls\n      self.controlsEl = angular.element(theme.controlsTpl);\n      self.controlsEl.append(self.inputEl);\n\n      //build buttons\n      if(self.buttons !== 'no') {\n        self.buttonsEl = angular.element(theme.buttonsTpl);\n        self.submitEl = angular.element(theme.submitTpl);\n        self.resetEl = angular.element(theme.resetTpl);\n        self.cancelEl = angular.element(theme.cancelTpl);\n        self.submitEl.attr('title', editableOptions.submitButtonTitle);\n        self.submitEl.attr('aria-label', editableOptions.submitButtonAriaLabel);\n        self.cancelEl.attr('title', editableOptions.cancelButtonTitle);\n        self.cancelEl.attr('aria-label', editableOptions.cancelButtonAriaLabel);\n        self.resetEl.attr('title', editableOptions.clearButtonTitle);\n        self.resetEl.attr('aria-label', editableOptions.clearButtonAriaLabel);\n\n        if (self.icon_set) {\n          self.submitEl.find('span').addClass(self.icon_set.ok);\n          self.cancelEl.find('span').addClass(self.icon_set.cancel);\n          self.resetEl.find('span').addClass(self.icon_set.clear);\n        }\n\n        self.buttonsEl.append(self.submitEl).append(self.cancelEl);\n\n        if (editableOptions.displayClearButton) {\n          self.buttonsEl.append(self.resetEl);\n        }\n\n        self.controlsEl.append(self.buttonsEl);\n        \n        self.inputEl.addClass('editable-has-buttons');\n      }\n\n      //build error\n      self.errorEl = angular.element(theme.errorTpl);\n      self.controlsEl.append(self.errorEl);\n\n      //build editor\n      self.editorEl = angular.element(self.single ? theme.formTpl : theme.noformTpl);\n      self.editorEl.append(self.controlsEl);\n\n      // transfer `e-*|data-e-*|x-e-*` attributes\n      for (var k in $attrs.$attr) {\n        if(k.length <= 1) {\n          continue;\n        }\n        var transferAttr = false;\n        var nextLetter = k.substring(1, 2);\n\n        // if starts with `e` + uppercase letter\n        if (k.substring(0, 1) === 'e' && nextLetter === nextLetter.toUpperCase()) {\n          transferAttr = k.substring(1); // cut `e`\n        } else {\n          continue;\n        }\n        \n        // exclude `form` and `ng-submit`, \n        if (transferAttr === 'Form' || transferAttr === 'NgSubmit') {\n          continue;\n        }\n\n        var firstLetter = transferAttr.substring(0, 1);\n        var secondLetter = transferAttr.substring(1, 2);\n\n        // convert back to lowercase style\n        if (secondLetter === secondLetter.toUpperCase() &&\n            firstLetter === firstLetter.toUpperCase()) {\n          transferAttr = firstLetter.toLowerCase() + '-' + editableUtils.camelToDash(transferAttr.substring(1));\n        } else {\n          transferAttr = firstLetter.toLowerCase() + editableUtils.camelToDash(transferAttr.substring(1));\n        }\n\n        // workaround for attributes without value (e.g. `multiple = \"multiple\"`)\n        // except for 'e-value'\n        var attrValue = (transferAttr !== 'value' && $attrs[k] === '') ? transferAttr : $attrs[k];\n\n        // set attributes to input\n        self.inputEl.attr(transferAttr, attrValue);\n      }\n\n      self.inputEl.addClass('editable-input');\n      self.inputEl.attr('ng-model', '$parent.$data');\n\n      // add directiveName class to editor, e.g. `editable-text`\n      self.editorEl.addClass(editableUtils.camelToDash(self.directiveName));\n\n      if (self.single) {\n        self.editorEl.attr('editable-form', '$form');\n        // transfer `blur` to form\n        self.editorEl.attr('blur', self.attrs.blur || (self.buttons === 'no' ? 'cancel' : editableOptions.blurElem));\n      }\n\n      //apply `postrender` method of theme\n      if (angular.isFunction(theme.postrender)) {\n        theme.postrender.call(self);\n      }\n\n    };\n\n    // with majority of controls copy is not needed, but..\n    // copy MUST NOT be used for `select-multiple` with objects as items\n    // copy MUST be used for `checklist`\n    self.setLocalValue = function() {\n      self.scope.$data = self.useCopy ? \n        angular.copy(valueGetter($scope.$parent)) : \n        valueGetter($scope.$parent);\n    };\n\n    // reference of the scope to use for $compile\n    var newScope = null;\n    //show\n    self.show = function() {\n      // set value of scope.$data\n      self.setLocalValue();\n\n      /*\n      Originally render() was inside init() method, but some directives polluting editorEl,\n      so it is broken on second openning.\n      Cloning is not a solution as jqLite can not clone with event handler's.\n      */\n      self.render();\n\n      // insert into DOM\n      $element.after(self.editorEl);\n\n      // compile (needed to attach ng-* events from markup)\n      newScope = $scope.$new();\n      $compile(self.editorEl)(newScope);\n\n      // attach listeners (`escape`, autosubmit, etc)\n      self.addListeners();\n\n      // hide element\n      $element.addClass('editable-hide');\n\n      // onshow\n      return self.onshow();\n    };\n\n    //hide\n    self.hide = function() {\n\n      // destroy the scope to prevent memory leak\n      newScope.$destroy();\n\n      self.controlsEl.remove();\n      self.editorEl.remove();\n      $element.removeClass('editable-hide');\n\n      // onhide\n      return self.onhide();\n    };\n\n    // cancel\n    self.cancel = function() {\n      // oncancel\n      self.oncancel();\n      // don't call hide() here as it called in form's code\n    };\n\n    /*\n    Called after show to attach listeners\n    */\n    self.addListeners = function() {\n      // bind keyup for `escape`\n      self.inputEl.bind('keyup', function(e) {\n          if(!self.single) {\n            return;\n          }\n\n          // todo: move this to editable-form!\n          switch(e.keyCode) {\n            // hide on `escape` press\n            case 27:\n              self.scope.$apply(function() {\n                self.scope.$form.$cancel();\n              });\n            break;\n          }\n      });\n\n      // autosubmit when `no buttons`\n      if (self.single && self.buttons === 'no') {\n        self.autosubmit();\n      }\n\n      // click - mark element as clicked to exclude in document click handler\n      self.editorEl.bind('click', function(e) {\n        // ignore right/middle button click\n        if (e.which && e.which !== 1) {\n          return;\n        }\n\n        if (self.scope.$form.$visible) {\n          self.scope.$form._clicked = true;\n        }\n      });\n    };\n\n    // setWaiting\n    self.setWaiting = function(value) {\n      if (value) {\n        // participate in waiting only if not disabled\n        inWaiting = !self.inputEl.attr('disabled') &&\n                    !self.inputEl.attr('ng-disabled') &&\n                    !self.inputEl.attr('ng-enabled');\n        if (inWaiting) {\n          self.inputEl.attr('disabled', 'disabled');\n          if(self.buttonsEl) {\n            self.buttonsEl.find('button').attr('disabled', 'disabled');\n          }\n        }\n      } else {\n        if (inWaiting) {\n          self.inputEl.removeAttr('disabled');\n          if (self.buttonsEl) {\n            self.buttonsEl.find('button').removeAttr('disabled');\n          }\n        }\n      }\n    };\n\n    self.activate = function(start, end) {\n      setTimeout(function() {\n        var el = self.inputEl[0];\n\n        if (editableOptions.activate === 'focus' && el.focus) {\n          if(start){\n            end = end || start;\n            el.onfocus = function(){\n              var that = this;\n              setTimeout(function(){\n                that.setSelectionRange(start,end);\n              });\n            };\n          }\n          \n          if (self.directiveName == 'editableRadiolist' || self.directiveName == 'editableChecklist' ||\n              self.directiveName == 'editableBsdate' || self.directiveName == 'editableTagsInput') {\n            //Set focus to first pristine element in the list\n            el.querySelector('.ng-pristine').focus();\n          } else {\n            el.focus();\n          }\n        } else if (editableOptions.activate === 'select') {\n          if (el.select){\n            el.select();\n          } else if (el.focus) {\n            el.focus();\n          }\n        }\n      }, 0);\n    };\n\n    self.setError = function(msg) {\n      if(!angular.isObject(msg)) {\n        $scope.$error = msg;\n        self.error = msg;\n      }\n    };\n\n    /*\n    Checks that result is string or promise returned string and shows it as error message\n    Applied to onshow, onbeforesave, onaftersave\n    */\n    self.catchError = function(result, noPromise) {\n      if (angular.isObject(result) && noPromise !== true) {\n        $q.when(result).then(\n          //success and fail handlers are equal\n          angular.bind(this, function(r) {\n            this.catchError(r, true);\n          }),\n          angular.bind(this, function(r) {\n            this.catchError(r, true);\n          })\n        );\n      //check $http error\n      } else if (noPromise && angular.isObject(result) && result.status &&\n        (result.status !== 200) && result.data && angular.isString(result.data)) {\n        this.setError(result.data);\n        //set result to string: to let form know that there was error\n        result = result.data;\n      } else if (angular.isString(result)) {\n        this.setError(result);\n      }\n      return result;\n    };\n\n    self.save = function() {\n      valueGetter.assign($scope.$parent,\n          self.useCopy ? angular.copy(self.scope.$data) : self.scope.$data);\n\n      // no need to call handleEmpty here as we are watching change of model value\n      // self.handleEmpty();\n    };\n\n    /*\n    attach/detach `editable-empty` class to element\n    */\n    self.handleEmpty = function() {\n      var val = valueGetter($scope.$parent);\n      var isEmpty = val === null || val === undefined || val === \"\" || (angular.isArray(val) && val.length === 0); \n      $element.toggleClass('editable-empty', isEmpty);\n    };\n\n    /*\n    Called when `buttons = \"no\"` to submit automatically\n    */\n    self.autosubmit = angular.noop;\n\n    self.onshow = angular.noop;\n    self.onhide = angular.noop;\n    self.oncancel = angular.noop;\n    self.onbeforesave = angular.noop;\n    self.onaftersave = angular.noop;\n  }\n\n  return EditableController;\n}]);\n\n/*\neditableFactory is used to generate editable directives (see `/directives` folder)\nInside it does several things:\n- detect form for editable element. Form may be one of three types:\n  1. autogenerated form (for single editable elements)\n  2. wrapper form (element wrapped by <form> tag)\n  3. linked form (element has `e-form` attribute pointing to existing form)\n\n- attach editableController to element\n\nDepends on: editableController, editableFormFactory\n*/\nangular.module('xeditable').factory('editableDirectiveFactory',\n['$parse', '$compile', 'editableThemes', '$rootScope', '$document', 'editableController', 'editableFormController', 'editableOptions',\nfunction($parse, $compile, editableThemes, $rootScope, $document, editableController, editableFormController, editableOptions) {\n\n  //directive object\n  return function(overwrites) {\n    return {\n      restrict: 'A',\n      scope: true,\n      require: [overwrites.directiveName, '?^form'],\n      controller: editableController,\n      link: function(scope, elem, attrs, ctrl) {\n        // editable controller\n        var eCtrl = ctrl[0];\n\n        // form controller\n        var eFormCtrl;\n\n        // this variable indicates is element is bound to some existing form,\n        // or it's single element who's form will be generated automatically\n        // By default consider single element without any linked form.ß\n        var hasForm = false;\n\n        // element wrapped by form\n        if (ctrl[1]) {\n          eFormCtrl = ctrl[1];\n          hasForm = attrs.eSingle === undefined;\n        } else if (attrs.eForm) { // element not wrapped by <form>, but we have `e-form` attr\n          var getter = $parse(attrs.eForm)(scope);\n          if (getter) { // form exists in scope (above), e.g. editable column\n            eFormCtrl = getter;\n            hasForm = true;\n          } else if (elem && typeof elem.parents === \"function\" && elem.parents().last().find('form[name='+attrs.eForm+']').length) { // form exists below or not exist at all: check document.forms\n            // form is below and not processed yet\n            eFormCtrl = null;\n            hasForm = true;\n          } else {\n            // form exists below or not exist at all: check document.forms\n            for (var i=0; i<$document[0].forms.length;i++) {\n              if ($document[0].forms[i].name === attrs.eForm) {\n                // form is below and not processed yet\n                eFormCtrl = null;\n                hasForm = true;\n                break;\n              }\n            }\n          }\n        }\n\n        /*\n        if(hasForm && !attrs.eName) {\n          throw 'You should provide `e-name` for editable element inside form!';\n        }\n        */\n\n        //check for `editable-form` attr in form\n        /*\n        if(eFormCtrl && ) {\n          throw 'You should provide `e-name` for editable element inside form!';\n        }\n        */\n\n        // store original props to `parent` before merge\n        angular.forEach(overwrites, function(v, k) {\n          if(eCtrl[k] !== undefined) {\n            eCtrl.parent[k] = eCtrl[k];\n          }\n        });\n\n        // merge overwrites to base editable controller\n        angular.extend(eCtrl, overwrites);\n\n        // x-editable can be disabled using editableOption or edit-disabled attribute\n        var is_disabled = function() {\n          return angular.isDefined(attrs.editDisabled) ?\n            scope.$eval(attrs.editDisabled) :\n            editableOptions.isDisabled;\n        };\n\n        // init editable ctrl\n        eCtrl.init(!hasForm);\n\n        // publich editable controller as `$editable` to be referenced in html\n        scope.$editable = eCtrl;\n\n        // add `editable` class to element\n        elem.addClass('editable');\n\n        // hasForm\n        if(hasForm) {\n          if(eFormCtrl) {\n            scope.$form = eFormCtrl;\n            if(!scope.$form.$addEditable) {\n              throw 'Form with editable elements should have `editable-form` attribute.';\n            }\n            scope.$form.$addEditable(eCtrl);\n          } else {\n            // future form (below): add editable controller to buffer and add to form later\n            $rootScope.$$editableBuffer = $rootScope.$$editableBuffer || {};\n            $rootScope.$$editableBuffer[attrs.eForm] = $rootScope.$$editableBuffer[attrs.eForm] || [];\n            $rootScope.$$editableBuffer[attrs.eForm].push(eCtrl);\n            scope.$form = null; //will be re-assigned later\n          }\n        // !hasForm\n        } else {\n          // create editableform controller\n          scope.$form = editableFormController();\n          // add self to editable controller\n          scope.$form.$addEditable(eCtrl);\n\n          // if `e-form` provided, publish local $form in scope\n          if(attrs.eForm) {\n            ($parse(attrs.eForm).assign || angular.noop)(scope.$parent, scope.$form);\n          }\n\n          // bind click - if no external form defined\n          if(!attrs.eForm || attrs.eClickable) {\n            elem.addClass('editable-click');\n            elem.bind(editableOptions.activationEvent, function(e) {\n              e.preventDefault();\n              e.editable = eCtrl;\n              if(!is_disabled()) {\n                scope.$apply(function(){\n                  scope.$form.$show();\n                });\n              }\n            });\n          }\n        }\n\n      }\n    };\n  };\n}]);\n\n/*\nReturns editableForm controller\n*/\nangular.module('xeditable').factory('editableFormController', \n  ['$parse', '$document', '$rootScope', 'editablePromiseCollection', 'editableUtils',\n  function($parse, $document, $rootScope, editablePromiseCollection, editableUtils) {\n\n  // array of opened editable forms\n  var shown = [];\n\n  //Check if the child element correspond or is a descendant of the parent element\n  var isSelfOrDescendant = function (parent, child) {\n    if (child == parent) {\n      return true;\n    }\n\n    var node = child.parentNode;\n    while (node !== null) {\n      if (node == parent) {\n        return true;\n      }\n      node = node.parentNode;\n    }\n    return false;\n  };\n  \n  //Check if it is a real blur : if the click event appear on a shown editable elem, this is not a blur.\n  var isBlur = function(shown, event) {\n    var isBlur = true;\n\n    var editables = shown.$editables;\n    angular.forEach(editables, function(v){\n      var element = v.editorEl[0];\n      if (isSelfOrDescendant(element, event.target))\n        isBlur = false;\n      \n    });\n    return isBlur;\n  };\n  \n  // bind click to body: cancel|submit|ignore forms\n  $document.bind('click', function(e) {\n    // ignore right/middle button click\n    if (e.which && e.which !== 1) {\n      return;\n    }\n\n    var toCancel = [];\n    var toSubmit = [];\n    for (var i=0; i<shown.length; i++) {\n\n      // exclude clicked\n      if (shown[i]._clicked) {\n        shown[i]._clicked = false;\n        continue;\n      }\n\n      // exclude waiting\n      if (shown[i].$waiting) {\n        continue;\n      }\n\n      if (shown[i]._blur === 'cancel' && isBlur(shown[i], e)) {\n        toCancel.push(shown[i]);\n      }\n\n      if (shown[i]._blur === 'submit' && isBlur(shown[i], e)) {\n        toSubmit.push(shown[i]);\n      }\n    }\n\n    if (toCancel.length || toSubmit.length) {\n      $rootScope.$apply(function() {\n        angular.forEach(toCancel, function(v){ v.$cancel(); });\n        angular.forEach(toSubmit, function(v){ v.$submit(); });\n      });\n    }\n  });\n \n  $rootScope.$on('closeEdit', function() {\n    for(var i=0; i < shown.length; i++) {\n      shown[i].$hide();\n    }\n  }); \n\n  var base = {\n    $addEditable: function(editable) {\n      //console.log('add editable', editable.elem, editable.elem.bind);\n      this.$editables.push(editable);\n\n      //'on' is not supported in angular 1.0.8\n      editable.elem.bind('$destroy', angular.bind(this, this.$removeEditable, editable));\n\n      //bind editable's local $form to self (if not bound yet, below form) \n      if (!editable.scope.$form) {\n        editable.scope.$form = this;\n      }\n\n      //if form already shown - call show() of new editable\n      if (this.$visible) {\n        editable.catchError(editable.show());\n      }\n      editable.catchError(editable.setWaiting(this.$waiting));\n    },\n\n    $removeEditable: function(editable) {\n      //arrayRemove\n      for(var i=0; i < this.$editables.length; i++) {\n        if(this.$editables[i] === editable) {\n          this.$editables.splice(i, 1);\n          return;\n        }\n      }\n    },\n\n    /**\n     * Shows form with editable controls.\n     * \n     * @method $show()\n     * @memberOf editable-form\n     */\n    $show: function() {\n      if (this.$visible) {\n        return;\n      }\n\n      this.$visible = true;\n\n      var pc = editablePromiseCollection();\n\n      //own show\n      pc.when(this.$onshow());\n\n      //clear errors\n      this.$setError(null, '');\n\n      //children show\n      angular.forEach(this.$editables, function(editable) {\n        pc.when(editable.show());\n      });\n\n      //wait promises and activate\n      pc.then({\n        onWait: angular.bind(this, this.$setWaiting), \n        onTrue: angular.bind(this, this.$activate), \n        onFalse: angular.bind(this, this.$activate), \n        onString: angular.bind(this, this.$activate)\n      });\n\n      // add to internal list of shown forms\n      // setTimeout needed to prevent closing right after opening (e.g. when trigger by button)\n      setTimeout(angular.bind(this, function() {\n        // clear `clicked` to get ready for clicks on visible form\n        this._clicked = false;\n        if(editableUtils.indexOf(shown, this) === -1) {\n          shown.push(this);\n        }\n      }), 0);      \n    },\n\n    /**\n     * Sets focus on form field specified by `name`.<br/>\n     * When trying to set the focus on a form field of a new row in the editable table, the `$activate` call needs to be wrapped in a `$timeout` call so that the form is rendered before the `$activate` function is called.\n     * \n     * @method $activate(name)\n     * @param {string} name name of field\n     * @memberOf editable-form\n     */\n    $activate: function(name) {\n      var i;\n      if (this.$editables.length) {\n        //activate by name\n        if (angular.isString(name)) {\n          for(i=0; i<this.$editables.length; i++) {\n            if (this.$editables[i].name === name) {\n              this.$editables[i].activate();\n              return;\n            }\n          }\n        }\n\n        //try activate error field\n        for(i=0; i<this.$editables.length; i++) {\n          if (this.$editables[i].error) {\n            this.$editables[i].activate();\n            return;\n          }\n        }\n\n        //by default activate first field\n        this.$editables[0].activate(this.$editables[0].elem[0].selectionStart, this.$editables[0].elem[0].selectionEnd);\n      }\n    },\n\n    /**\n     * Hides form with editable controls without saving.\n     * \n     * @method $hide()\n     * @memberOf editable-form\n     */\n    $hide: function() {\n      if (!this.$visible) {\n        return;\n      }      \n      this.$visible = false;\n      // self hide\n      this.$onhide();\n      // children's hide\n      angular.forEach(this.$editables, function(editable) {\n        editable.hide();\n      });\n\n      // remove from internal list of shown forms\n      editableUtils.arrayRemove(shown, this);\n    },\n\n    /**\n     * Triggers `oncancel` event and calls `$hide()`.\n     * \n     * @method $cancel()\n     * @memberOf editable-form\n     */\n    $cancel: function() {\n      if (!this.$visible) {\n        return;\n      }      \n      // self cancel\n      this.$oncancel();\n      // children's cancel      \n      angular.forEach(this.$editables, function(editable) {\n        editable.cancel();\n      });\n      // self hide\n      this.$hide();\n    },    \n\n    $setWaiting: function(value) {\n      this.$waiting = !!value;\n      // we can't just set $waiting variable and use it via ng-disabled in children\n      // because in editable-row form is not accessible\n      angular.forEach(this.$editables, function(editable) {\n        editable.setWaiting(!!value);\n      });\n    },\n\n    /**\n     * Shows error message for particular field.\n     * \n     * @method $setError(name, msg)\n     * @param {string} name name of field\n     * @param {string} msg error message\n     * @memberOf editable-form\n     */\n    $setError: function(name, msg) {\n      angular.forEach(this.$editables, function(editable) {\n        if(!name || editable.name === name) {\n          editable.setError(msg);\n        }\n      });\n    },\n\n    $submit: function() {\n      if (this.$waiting) {\n        return;\n      } \n\n      //clear errors\n      this.$setError(null, '');\n\n      //children onbeforesave\n      var pc = editablePromiseCollection();\n      angular.forEach(this.$editables, function(editable) {\n        pc.when(editable.onbeforesave());\n      });\n\n      /*\n      onbeforesave result:\n      - true/undefined: save data and close form\n      - false: close form without saving\n      - string: keep form open and show error\n      */\n      pc.then({\n        onWait: angular.bind(this, this.$setWaiting), \n        onTrue: angular.bind(this, checkSelf, true), \n        onFalse: angular.bind(this, checkSelf, false), \n        onString: angular.bind(this, this.$activate)\n      });\n\n      //save\n      function checkSelf(childrenTrue){\n        var pc = editablePromiseCollection();\n        pc.when(this.$onbeforesave());\n        pc.then({\n          onWait: angular.bind(this, this.$setWaiting), \n          onTrue: childrenTrue ? angular.bind(this, this.$save) : angular.bind(this, this.$hide), \n          onFalse: angular.bind(this, this.$hide), \n          onString: angular.bind(this, this.$activate)\n        });\n      }\n    },\n\n    $save: function() {\n      // write model for each editable\n      angular.forEach(this.$editables, function(editable) {\n        editable.save();\n      });\n\n      //call onaftersave of self and children\n      var pc = editablePromiseCollection();\n      pc.when(this.$onaftersave());\n      angular.forEach(this.$editables, function(editable) {\n        pc.when(editable.onaftersave());\n      });\n\n      /*\n      onaftersave result:\n      - true/undefined/false: just close form\n      - string: keep form open and show error\n      */\n      pc.then({\n        onWait: angular.bind(this, this.$setWaiting), \n        onTrue: angular.bind(this, this.$hide), \n        onFalse: angular.bind(this, this.$hide), \n        onString: angular.bind(this, this.$activate)\n      });\n    },\n\n    $onshow: angular.noop,\n    $oncancel: angular.noop,\n    $onhide: angular.noop,\n    $onbeforesave: angular.noop,\n    $onaftersave: angular.noop\n  };\n\n  return function() {\n    return angular.extend({\n      $editables: [],\n      /**\n       * Form visibility flag.\n       * \n       * @var {bool} $visible\n       * @memberOf editable-form\n       */\n      $visible: false,\n      /**\n       * Form waiting flag. It becomes `true` when form is loading or saving data.\n       * \n       * @var {bool} $waiting\n       * @memberOf editable-form\n       */\n      $waiting: false,\n      $data: {},\n      _clicked: false,\n      _blur: null\n    }, base);\n  };\n}]);\n\n/**\n * EditableForm directive. Should be defined in <form> containing editable controls.  \n * It add some usefull methods to form variable exposed to scope by `name=\"myform\"` attribute.\n *\n * @namespace editable-form\n */\nangular.module('xeditable').directive('editableForm',\n  ['$rootScope', '$parse', 'editableFormController', 'editableOptions',\n  function($rootScope, $parse, editableFormController, editableOptions) {\n    return {\n      restrict: 'A',\n      require: ['form'],\n      //require: ['form', 'editableForm'],\n      //controller: EditableFormController,\n      compile: function() {\n        return {\n          pre: function(scope, elem, attrs, ctrl) {\n            var form = ctrl[0];\n            var eForm;\n\n            //if `editableForm` has value - publish smartly under this value\n            //this is required only for single editor form that is created and removed\n            if(attrs.editableForm) {\n              if(scope[attrs.editableForm] && scope[attrs.editableForm].$show) {\n                eForm = scope[attrs.editableForm];\n                angular.extend(form, eForm);\n              } else {\n                eForm = editableFormController();\n                scope[attrs.editableForm] = eForm;\n                angular.extend(eForm, form);\n              }\n            } else { //just merge to form and publish if form has name\n              eForm = editableFormController();\n              angular.extend(form, eForm);\n            }\n\n            //read editables from buffer (that appeared before FORM tag)\n            var buf = $rootScope.$$editableBuffer;\n            var name = form.$name;\n            if(name && buf && buf[name]) {\n              angular.forEach(buf[name], function(editable) {\n                eForm.$addEditable(editable);\n              });\n              delete buf[name];\n            }\n          },\n          post: function(scope, elem, attrs, ctrl) {\n            var eForm;\n\n            if(attrs.editableForm && scope[attrs.editableForm] && scope[attrs.editableForm].$show) {\n              eForm = scope[attrs.editableForm];\n            } else {\n              eForm = ctrl[0];\n            }\n\n            /**\n             * Called when form is shown.\n             * \n             * @var {method|attribute} onshow \n             * @memberOf editable-form\n             */\n            if(attrs.onshow) {\n              eForm.$onshow = angular.bind(eForm, $parse(attrs.onshow), scope);\n            }\n\n            /**\n             * Called when form hides after both save or cancel.\n             * \n             * @var {method|attribute} onhide \n             * @memberOf editable-form\n             */\n            if(attrs.onhide) {\n              eForm.$onhide = angular.bind(eForm, $parse(attrs.onhide), scope);\n            }\n\n            /**\n             * Called when form is cancelled.\n             * \n             * @var {method|attribute} oncancel\n             * @memberOf editable-form\n             */\n            if(attrs.oncancel) {\n              eForm.$oncancel = angular.bind(eForm, $parse(attrs.oncancel), scope);\n            }\n\n            /**\n             * Whether form initially rendered in shown state.\n             *\n             * @var {bool|attribute} shown\n             * @memberOf editable-form\n             */\n            if(attrs.shown && $parse(attrs.shown)(scope)) {\n              eForm.$show();\n            }\n\n            /**\n             * Action when form losses focus. Values: `cancel|submit|ignore`.\n             * Default is `ignore`.\n             * \n             * @var {string|attribute} blur\n             * @memberOf editable-form\n             */\n            eForm._blur = attrs.blur || editableOptions.blurForm;\n\n            // onbeforesave, onaftersave\n            if(!attrs.ngSubmit && !attrs.submit) {\n              /**\n               * Called after all children `onbeforesave` callbacks but before saving form values\n               * to model.  \n               * If at least one children callback returns `non-string` - it will not not be called.  \n               * See [editable-form demo](#editable-form) for details.\n               * \n               * @var {method|attribute} onbeforesave\n               * @memberOf editable-form\n               * \n               */\n              if(attrs.onbeforesave) {\n                eForm.$onbeforesave = function() {\n                  return $parse(attrs.onbeforesave)(scope, {$data: eForm.$data});\n                };\n              }\n\n              /**\n               * Called when form values are saved to model.  \n               * See [editable-form demo](#editable-form) for details.\n               * \n               * @var {method|attribute} onaftersave \n               * @memberOf editable-form\n               * \n               */\n              if(attrs.onaftersave) {\n                eForm.$onaftersave = function() {\n                  return $parse(attrs.onaftersave)(scope, {$data: eForm.$data});\n                };\n              }\n\n              elem.bind('submit', function(event) {\n                event.preventDefault();\n                scope.$apply(function() {\n                  eForm.$submit();\n                });\n              });\n            }\n\n\n            // click - mark form as clicked to exclude in document click handler\n            elem.bind('click', function(e) {\n              // ignore right/middle button click\n              if (e.which && e.which !== 1) {\n                return;\n              }\n\n              if (eForm.$visible) {\n                eForm._clicked = true;\n              }\n            });   \n\n          }\n        };\n      }\n    };\n}]);\n/**\n * editablePromiseCollection\n *  \n * Collect results of function calls. Shows waiting if there are promises. \n * Finally, applies callbacks if:\n * - onTrue(): all results are true and all promises resolved to true\n * - onFalse(): at least one result is false or promise resolved to false\n * - onString(): at least one result is string or promise rejected or promise resolved to string\n */\n\nangular.module('xeditable').factory('editablePromiseCollection', ['$q', function($q) { \n\n  function promiseCollection() {\n    return {\n      promises: [],\n      hasFalse: false,\n      hasString: false,\n      when: function(result, noPromise) {\n        if (result === false) {\n          this.hasFalse = true;\n        } else if (!noPromise && angular.isObject(result)) {\n          this.promises.push($q.when(result));\n        } else if (angular.isString(result)){\n          this.hasString = true;\n        } else { //result === true || result === undefined || result === null\n          return;\n        }\n      },\n      //callbacks: onTrue, onFalse, onString\n      then: function(callbacks) {\n        callbacks = callbacks || {};\n        var onTrue = callbacks.onTrue || angular.noop;\n        var onFalse = callbacks.onFalse || angular.noop;\n        var onString = callbacks.onString || angular.noop;\n        var onWait = callbacks.onWait || angular.noop;\n\n        var self = this;\n\n        if (this.promises.length) {\n          onWait(true);\n          $q.all(this.promises).then(\n            //all resolved       \n            function(results) {\n              onWait(false);\n              //check all results via same `when` method (without checking promises)\n              angular.forEach(results, function(result) {\n                self.when(result, true);  \n              });\n              applyCallback();\n            },\n            //some rejected\n            function(error) { \n              onWait(false);\n              onString();\n            }\n            );\n        } else {\n          applyCallback();\n        }\n\n        function applyCallback() {\n          if (!self.hasString && !self.hasFalse) {\n            onTrue();\n          } else if (!self.hasString && self.hasFalse) {\n            onFalse();\n          } else {\n            onString();\n          }\n        }\n\n      }\n    };\n  }\n\n  return promiseCollection;\n\n}]);\n\n/**\n * editableUtils\n */\n angular.module('xeditable').factory('editableUtils', [function() {\n  return {\n    indexOf: function (array, obj) {\n      if (array.indexOf) return array.indexOf(obj);\n\n      for ( var i = 0; i < array.length; i++) {\n        if (obj === array[i]) return i;\n      }\n      return -1;\n    },\n\n    arrayRemove: function (array, value) {\n      var index = this.indexOf(array, value);\n      if (index >= 0) {\n        array.splice(index, 1);\n      }\n      return value;\n    },\n\n    // copy from https://github.com/angular/angular.js/blob/master/src/Angular.js\n    camelToDash: function(str) {\n      var SNAKE_CASE_REGEXP = /[A-Z]/g;\n      return str.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\n        return (pos ? '-' : '') + letter.toLowerCase();\n      });\n    },\n\n    dashToCamel: function(str) {\n      var SPECIAL_CHARS_REGEXP = /([\\:\\-\\_]+(.))/g;\n      var MOZ_HACK_REGEXP = /^moz([A-Z])/;\n      return str.\n      replace(SPECIAL_CHARS_REGEXP, function(_, separator, letter, offset) {\n        return offset ? letter.toUpperCase() : letter;\n      }).\n      replace(MOZ_HACK_REGEXP, 'Moz$1');\n    },\n\n    rename: function (tag, el) {\n      if (el[0] && el[0].attributes) {\n        var newEl = angular.element('<' + tag + '/>');\n        newEl.html(el.html());\n        var attrs = el[0].attributes;\n        for (var i = 0; i < attrs.length; ++i) {\n            newEl.attr(attrs.item(i).nodeName, attrs.item(i).value);\n        }\n        return newEl;\n      }\n    }\n  };\n}]);\n\n/**\n * editableNgOptionsParser\n *\n * see: https://github.com/angular/angular.js/blob/master/src/ng/directive/select.js#L131\n */\n angular.module('xeditable').factory('editableNgOptionsParser', [function() {\n  //0000111110000000000022220000000000000000000000333300000000000000444444444444444000000000555555555555555000000066666666666666600000000000000007777000000000000000000088888\n  var NG_OPTIONS_REGEXP = /^\\s*(.*?)(?:\\s+as\\s+(.*?))?(?:\\s+group\\s+by\\s+(.*))?\\s+for\\s+(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(.*?)(?:\\s+track\\s+by\\s+(.*?))?$/;\n\n  function parser(optionsExp) {\n    var match;\n\n    if (! (match = optionsExp.match(NG_OPTIONS_REGEXP))) {\n      throw 'ng-options parse error';\n    }\n\n    var \n    displayFn = match[2] || match[1],\n    valueName = match[4] || match[6],\n    keyName = match[5],\n    groupByFn = match[3] || '',\n    valueFn = match[2] ? match[1] : valueName,\n    valuesFn = match[7],\n    track = match[8],\n    trackFn = track ? match[8] : null;\n\n    var ngRepeat;\n    if (keyName === undefined) { // array\n      ngRepeat = valueName + ' in ' + valuesFn;\n      if (track !== undefined) {\n        ngRepeat += ' track by '+trackFn;\n      }\n    } else { // object\n      ngRepeat = '('+keyName+', '+valueName+') in '+valuesFn;\n    }\n    \n    // group not supported yet\n    return {\n      ngRepeat: ngRepeat,\n      locals: {\n        valueName: valueName,\n        keyName: keyName,\n        valueFn: valueFn,\n        displayFn: displayFn\n      }\n    };\n  }\n\n  return parser;\n}]);\n\n/**\n * editableCombodate\n *\n * angular version of https://github.com/vitalets/combodate\n */\nangular.module('xeditable').factory('editableCombodate', [function() {\n  function Combodate(element, options) {\n    this.$element = angular.element(element);\n\n    if(this.$element[0].nodeName != 'INPUT') {\n      throw 'Combodate should be applied to INPUT element';\n    }\n\n    var currentYear = new Date().getFullYear();\n    this.defaults = {\n      //in this format value stored in original input\n      format: 'YYYY-MM-DD HH:mm',\n      //in this format items in dropdowns are displayed\n      template: 'D / MMM / YYYY   H : mm',\n      //initial value, can be `new Date()`\n      value: null,\n      minYear: 1970,\n      maxYear: currentYear,\n      yearDescending: true,\n      minuteStep: 5,\n      secondStep: 1,\n      firstItem: 'empty', //'name', 'empty', 'none'\n      errorClass: null,\n      customClass: '',\n      roundTime: true, // whether to round minutes and seconds if step > 1\n      smartDays: true // whether days in combo depend on selected month: 31, 30, 28\n    };\n\n    this.options = angular.extend({}, this.defaults, options);\n    this.init();\n  }\n\n  Combodate.prototype = {\n    constructor: Combodate,\n    init: function () {\n      this.map = {\n        //key   regexp    moment.method\n        day:    ['D',    'date'], \n        month:  ['M',    'month'], \n        year:   ['Y',    'year'], \n        hour:   ['[Hh]', 'hours'],\n        minute: ['m',    'minutes'], \n        second: ['s',    'seconds'],\n        ampm:   ['[Aa]', ''] \n      };\n      \n      this.$widget = angular.element('<span class=\"combodate\"></span>').html(this.getTemplate());\n      \n      this.initCombos();\n      \n      if (this.options.smartDays) {\n        var combo = this;\n        this.$widget.find('select').bind('change', function(e) {\n          // update days count if month or year changes\n          if (angular.element(e.target).hasClass('month') || angular.element(e.target).hasClass('year')) {\n            combo.fillCombo('day');\n          }\n        });        \n      }\n\n      this.$widget.find('select').css('width', 'auto');\n\n      // hide original input and insert widget                                       \n      this.$element.css('display', 'none').after(this.$widget);\n      \n      // set initial value\n      this.setValue(this.$element.val() || this.options.value);\n    },\n    \n    /*\n     Replace tokens in template with <select> elements \n     */         \n     getTemplate: function() {\n      var tpl = this.options.template;\n      var customClass = this.options.customClass;\n\n      //first pass\n      angular.forEach(this.map, function(v, k) {\n        v = v[0]; \n        var r = new RegExp(v+'+');\n        var token = v.length > 1 ? v.substring(1, 2) : v;\n        \n        tpl = tpl.replace(r, '{'+token+'}');\n      });\n\n      //replace spaces with &nbsp;\n      tpl = tpl.replace(/ /g, '&nbsp;');\n\n      //second pass\n      angular.forEach(this.map, function(v, k) {\n        v = v[0];\n        var token = v.length > 1 ? v.substring(1, 2) : v;\n\n        tpl = tpl.replace('{'+token+'}', '<select class=\"'+k+' '+customClass+'\"></select>');\n      });   \n\n      return tpl;\n    },\n    \n    /*\n     Initialize combos that presents in template \n     */        \n     initCombos: function() {\n      for (var k in this.map) {\n        var c = this.$widget[0].querySelectorAll('.'+k);\n        // set properties like this.$day, this.$month etc.\n        this['$'+k] = c.length ? angular.element(c) : null;\n        // fill with items\n        this.fillCombo(k);\n      }\n    },\n\n    /*\n     Fill combo with items \n     */        \n     fillCombo: function(k) {\n      var $combo = this['$'+k];\n      if (!$combo) {\n        return;\n      }\n\n      // define method name to fill items, e.g `fillDays`\n      var f = 'fill' + k.charAt(0).toUpperCase() + k.slice(1); \n      var items = this[f]();\n      var value = $combo.val();\n\n      $combo.html('');\n      for(var i=0; i<items.length; i++) {\n        $combo.append('<option value=\"'+items[i][0]+'\">'+items[i][1]+'</option>');\n      }\n\n      $combo.val(value);\n    },\n\n    /*\n     Initialize items of combos. Handles `firstItem` option \n     */\n     fillCommon: function(key) {\n      var values = [], relTime;\n\n      if(this.options.firstItem === 'name') {\n        //need both to support moment ver < 2 and  >= 2\n        relTime = moment.relativeTime || moment.langData()._relativeTime; \n        var header = typeof relTime[key] === 'function' ? relTime[key](1, true, key, false) : relTime[key];\n        //take last entry (see momentjs lang files structure) \n        header = header.split(' ').reverse()[0];                \n        values.push(['', header]);\n      } else if(this.options.firstItem === 'empty') {\n        values.push(['', '']);\n      }\n      return values;\n    },  \n\n\n    /*\n    fill day\n    */\n    fillDay: function() {\n      var items = this.fillCommon('d'), name, i,\n      twoDigit = this.options.template.indexOf('DD') !== -1,\n      daysCount = 31;\n\n      // detect days count (depends on month and year)\n      // originally https://github.com/vitalets/combodate/pull/7\n      if (this.options.smartDays && this.$month && this.$year) {\n        var month = parseInt(this.$month.val(), 10);\n        var year = parseInt(this.$year.val(), 10);\n\n        if (!isNaN(month) && !isNaN(year)) {\n          daysCount = moment([year, month]).daysInMonth();\n        }\n      }\n\n      for (i = 1; i <= daysCount; i++) {\n        name = twoDigit ? this.leadZero(i) : i;\n        items.push([i, name]);\n      }\n      return items;\n    },\n    \n    /*\n    fill month\n    */\n    fillMonth: function() {\n      var items = this.fillCommon('M'), name, i, \n      longNames = this.options.template.indexOf('MMMM') !== -1,\n      shortNames = this.options.template.indexOf('MMM') !== -1,\n      twoDigit = this.options.template.indexOf('MM') !== -1;\n\n      for(i=0; i<=11; i++) {\n        if(longNames) {\n          //see https://github.com/timrwood/momentjs.com/pull/36\n          name = moment().date(1).month(i).format('MMMM');\n        } else if(shortNames) {\n          name = moment().date(1).month(i).format('MMM');\n        } else if(twoDigit) {\n          name = this.leadZero(i+1);\n        } else {\n          name = i+1;\n        }\n        items.push([i, name]);\n      } \n      return items;\n    },\n    \n    /*\n    fill year\n    */\n    fillYear: function() {\n      var items = [], name, i, \n      longNames = this.options.template.indexOf('YYYY') !== -1;\n\n      for(i=this.options.maxYear; i>=this.options.minYear; i--) {\n        name = longNames ? i : (i+'').substring(2);\n        items[this.options.yearDescending ? 'push' : 'unshift']([i, name]);\n      }\n      \n      items = this.fillCommon('y').concat(items);\n      \n      return items;\n    },\n    \n    /*\n    fill hour\n    */\n    fillHour: function() {\n      var items = this.fillCommon('h'), name, i,\n      h12 = this.options.template.indexOf('h') !== -1,\n      h24 = this.options.template.indexOf('H') !== -1,\n      twoDigit = this.options.template.toLowerCase().indexOf('hh') !== -1,\n      min = h12 ? 1 : 0, \n      max = h12 ? 12 : 23;\n\n      for(i=min; i<=max; i++) {\n        name = twoDigit ? this.leadZero(i) : i;\n        items.push([i, name]);\n      } \n      return items;\n    },\n\n    /*\n    fill minute\n    */\n    fillMinute: function() {\n      var items = this.fillCommon('m'), name, i,\n      twoDigit = this.options.template.indexOf('mm') !== -1;\n\n      for(i=0; i<=59; i+= this.options.minuteStep) {\n        name = twoDigit ? this.leadZero(i) : i;\n        items.push([i, name]);\n      }\n      return items;\n    },\n    \n    /*\n    fill second\n    */\n    fillSecond: function() {\n      var items = this.fillCommon('s'), name, i,\n      twoDigit = this.options.template.indexOf('ss') !== -1;\n\n      for(i=0; i<=59; i+= this.options.secondStep) {\n        name = twoDigit ? this.leadZero(i) : i;\n        items.push([i, name]);\n      }    \n      return items;\n    },\n    \n    /*\n    fill ampm\n    */\n    fillAmpm: function() {\n      var ampmL = this.options.template.indexOf('a') !== -1,\n      ampmU = this.options.template.indexOf('A') !== -1,            \n      items = [\n      ['am', ampmL ? 'am' : 'AM'],\n      ['pm', ampmL ? 'pm' : 'PM']\n      ];\n      return items;\n    },\n\n    /*\n     Returns current date value from combos. \n     If format not specified - `options.format` used.\n     If format = `null` - Moment object returned.\n     */\n     getValue: function(format) {\n      var dt, values = {}, \n      that = this,\n      notSelected = false;\n\n      //getting selected values    \n      angular.forEach(this.map, function(v, k) {\n        if(k === 'ampm') {\n          return;\n        }\n        var def = k === 'day' ? 1 : 0;\n\n        values[k] = that['$'+k] ? parseInt(that['$'+k].val(), 10) : def; \n        \n        if(isNaN(values[k])) {\n         notSelected = true;\n         return false; \n       }\n     });\n      \n      //if at least one visible combo not selected - return empty string\n      if(notSelected) {\n       return '';\n     }\n\n      //convert hours 12h --> 24h \n      if(this.$ampm) {\n        //12:00 pm --> 12:00 (24-h format, midday), 12:00 am --> 00:00 (24-h format, midnight, start of day)\n        if(values.hour === 12) {\n          values.hour = this.$ampm.val() === 'am' ? 0 : 12;                    \n        } else {\n          values.hour = this.$ampm.val() === 'am' ? values.hour : values.hour+12;\n        }\n      }\n      \n      dt = moment([values.year, values.month, values.day, values.hour, values.minute, values.second]);\n      \n      //highlight invalid date\n      this.highlight(dt);\n\n      format = format === undefined ? this.options.format : format;\n      if(format === null) {\n       return dt.isValid() ? dt : null; \n     } else {\n       return dt.isValid() ? dt.format(format) : ''; \n     }\n   },\n\n   setValue: function(value) {\n    if(!value) {\n      return;\n    }\n\n      // parse in strict mode (third param `true`)\n      var dt = typeof value === 'string' ? moment(value, this.options.format, true) : moment(value),\n      that = this,\n      values = {};\n      \n      //function to find nearest value in select options\n      function getNearest($select, value) {\n        var delta = {};\n        angular.forEach($select.children('option'), function(opt, i){\n          var optValue = angular.element(opt).attr('value');\n\n          if(optValue === '') return;\n          var distance = Math.abs(optValue - value); \n          if(typeof delta.distance === 'undefined' || distance < delta.distance) {\n            delta = {value: optValue, distance: distance};\n          } \n        }); \n        return delta.value;\n      }\n      \n      if(dt.isValid()) {\n        //read values from date object\n        angular.forEach(this.map, function(v, k) {\n          if(k === 'ampm') {\n            return; \n          }\n          values[k] = dt[v[1]]();\n        });\n\n        if(this.$ampm) {\n          //12:00 pm --> 12:00 (24-h format, midday), 12:00 am --> 00:00 (24-h format, midnight, start of day)\n          if(values.hour >= 12) {\n            values.ampm = 'pm';\n            if(values.hour > 12) {\n              values.hour -= 12;\n            }\n          } else {\n            values.ampm = 'am';\n            if(values.hour === 0) {\n              values.hour = 12;\n            }\n          }\n        }\n\n        angular.forEach(values, function(v, k) {\n          //call val() for each existing combo, e.g. this.$hour.val()\n          if(that['$'+k]) {\n\n            if(k === 'minute' && that.options.minuteStep > 1 && that.options.roundTime) {\n             v = getNearest(that['$'+k], v);\n           }\n           \n           if(k === 'second' && that.options.secondStep > 1 && that.options.roundTime) {\n             v = getNearest(that['$'+k], v);\n           }                       \n           \n           that['$'+k].val(v);\n         }\n       });\n\n        // update days count\n        if (this.options.smartDays) {\n          this.fillCombo('day');\n        }\n\n        this.$element.val(dt.format(this.options.format)).triggerHandler('change');\n      }\n    },\n    \n    /*\n     highlight combos if date is invalid\n     */\n     highlight: function(dt) {\n      if(!dt.isValid()) {\n        if(this.options.errorClass) {\n          this.$widget.addClass(this.options.errorClass);\n        } else {\n          //store original border color\n          if(!this.borderColor) {\n            this.borderColor = this.$widget.find('select').css('border-color'); \n          }\n          this.$widget.find('select').css('border-color', 'red');\n        }\n      } else {\n        if(this.options.errorClass) {\n          this.$widget.removeClass(this.options.errorClass);\n        } else {\n          this.$widget.find('select').css('border-color', this.borderColor);\n        }  \n      }\n    },\n    \n    leadZero: function(v) {\n      return v <= 9 ? '0' + v : v; \n    },\n    \n    destroy: function() {\n      this.$widget.remove();\n      this.$element.removeData('combodate').show();\n    }\n\n  };\n\n  return {\n    getInstance: function(element, options) {\n      return new Combodate(element, options);\n    }\n  };\n}]);\n\n/*\nEditable icons:\n- default\n- font-awesome\n\n*/\nangular.module('xeditable').factory('editableIcons', function() {\n\n  var icons = {\n    //Icon-set to use, defaults to bootstrap icons\n    default: {\n      'bs2': {\n        ok: 'icon-ok icon-white',\n        cancel: 'icon-remove',\n        clear: 'icon-trash'\n      },\n      'bs3': {\n        ok: 'glyphicon glyphicon-ok',\n        cancel: 'glyphicon glyphicon-remove',\n        clear: 'glyphicon glyphicon-trash'\n      }\n    },\n    external: {\n      'font-awesome': {\n        ok: 'fa fa-check',\n        cancel: 'fa fa-times',\n        clear: 'fa fa-trash'\n      }\n    }\n  };\n\n  return icons;\n});\n\n/* jshint -W086 */\n/*\nEditable themes:\n- default\n- bootstrap 2\n- bootstrap 3\n- semantic-ui\n\nNote: in postrender() `this` is instance of editableController\n*/\nangular.module('xeditable').factory('editableThemes', function() {\n  var themes = {\n    //default\n    'default': {\n      formTpl:      '<form class=\"editable-wrap\"></form>',\n      noformTpl:    '<span class=\"editable-wrap\"></span>',\n      controlsTpl:  '<span class=\"editable-controls\"></span>',\n      inputTpl:     '',\n      errorTpl:     '<div class=\"editable-error\" data-ng-if=\"$error\" data-ng-bind=\"$error\"></div>',\n      buttonsTpl:   '<span class=\"editable-buttons\"></span>',\n      submitTpl:    '<button type=\"submit\">save</button>',\n      cancelTpl:    '<button type=\"button\" ng-click=\"$form.$cancel()\">cancel</button>',\n      resetTpl:    '<button type=\"reset\">clear</button>'\n    },\n\n    //bs2\n    'bs2': {\n      formTpl:     '<form class=\"form-inline editable-wrap\" role=\"form\"></form>',\n      noformTpl:   '<span class=\"editable-wrap\"></span>',\n      controlsTpl: '<div class=\"editable-controls controls control-group\" ng-class=\"{\\'error\\': $error}\"></div>',\n      inputTpl:    '',\n      errorTpl:    '<div class=\"editable-error help-block\" data-ng-if=\"$error\" data-ng-bind=\"$error\"></div>',\n      buttonsTpl:  '<span class=\"editable-buttons\"></span>',\n      submitTpl:   '<button type=\"submit\" class=\"btn btn-primary\"><span></span></button>',\n      cancelTpl:   '<button type=\"button\" class=\"btn\" ng-click=\"$form.$cancel()\">'+\n                      '<span></span>'+\n                   '</button>',\n      resetTpl:    '<button type=\"reset\" class=\"btn btn-danger\">clear</button>'\n\n    },\n\n    //bs3\n    'bs3': {\n      formTpl:     '<form class=\"form-inline editable-wrap\" role=\"form\"></form>',\n      noformTpl:   '<span class=\"editable-wrap\"></span>',\n      controlsTpl: '<div class=\"editable-controls form-group\" ng-class=\"{\\'has-error\\': $error}\"></div>',\n      inputTpl:    '',\n      errorTpl:    '<div class=\"editable-error help-block\" data-ng-if=\"$error\" data-ng-bind=\"$error\"></div>',\n      buttonsTpl:  '<span class=\"editable-buttons\"></span>',\n      submitTpl:   '<button type=\"submit\" class=\"btn btn-primary\"><span></span></button>',\n      cancelTpl:   '<button type=\"button\" class=\"btn btn-default\" ng-click=\"$form.$cancel()\">'+\n                     '<span></span>'+\n                   '</button>',\n      resetTpl:    '<button type=\"reset\" class=\"btn btn-danger\">clear</button>',\n\n      //bs3 specific prop to change buttons class: btn-sm, btn-lg\n      buttonsClass: '',\n      //bs3 specific prop to change standard inputs class: input-sm, input-lg\n      inputClass: '',\n      postrender: function() {\n        //apply `form-control` class to std inputs\n        switch(this.directiveName) {\n          case 'editableText':\n          case 'editableSelect':\n          case 'editableTextarea':\n          case 'editableEmail':\n          case 'editableTel':\n          case 'editableNumber':\n          case 'editableUrl':\n          case 'editableSearch':\n          case 'editableDate':\n          case 'editableDatetime':\n          case 'editableBsdate':\n          case 'editableTime':\n          case 'editableMonth':\n          case 'editableWeek':\n          case 'editablePassword':\n          case 'editableDatetimeLocal':\n            this.inputEl.addClass('form-control');\n            if(this.theme.inputClass) {\n              // don`t apply `input-sm` and `input-lg` to select multiple\n              // should be fixed in bs itself!\n              if(this.inputEl.attr('multiple') &&\n                (this.theme.inputClass === 'input-sm' || this.theme.inputClass === 'input-lg')) {\n                  break;\n              }\n              this.inputEl.addClass(this.theme.inputClass);\n            }\n          break;\n          case 'editableCheckbox':\n              this.editorEl.addClass('checkbox');\n        }\n\n        //apply buttonsClass (bs3 specific!)\n        if(this.buttonsEl && this.theme.buttonsClass) {\n          this.buttonsEl.find('button').addClass(this.theme.buttonsClass);\n        }\n      }\n    },\n    \n    //semantic-ui\n    'semantic': {\n      formTpl:     '<form class=\"editable-wrap ui form\" ng-class=\"{\\'error\\': $error}\" role=\"form\"></form>',\n      noformTpl:   '<span class=\"editable-wrap\"></span>',\n      controlsTpl: '<div class=\"editable-controls ui fluid input\" ng-class=\"{\\'error\\': $error}\"></div>',\n      inputTpl:    '',\n      errorTpl:    '<div class=\"editable-error ui error message\" data-ng-if=\"$error\" data-ng-bind=\"$error\"></div>',\n      buttonsTpl:  '<span class=\"mini ui buttons\"></span>',\n      submitTpl:   '<button type=\"submit\" class=\"ui primary button\"><i class=\"ui check icon\"></i></button>',\n      cancelTpl:   '<button type=\"button\" class=\"ui button\" ng-click=\"$form.$cancel()\">'+\n                      '<i class=\"ui cancel icon\"></i>'+\n                   '</button>',\n      resetTpl:    '<button type=\"reset\" class=\"ui button\">clear</button>'\n    }\n  };\n\n  return themes;\n});\n","(function(window) {\n    var re = {\n        not_string: /[^s]/,\n        number: /[diefg]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijosuxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[\\+\\-]/\n    }\n\n    function sprintf() {\n        var key = arguments[0], cache = sprintf.cache\n        if (!(cache[key] && cache.hasOwnProperty(key))) {\n            cache[key] = sprintf.parse(key)\n        }\n        return sprintf.format.call(null, cache[key], arguments)\n    }\n\n    sprintf.format = function(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, node_type = \"\", arg, output = [], i, k, match, pad, pad_character, pad_length, is_positive = true, sign = \"\"\n        for (i = 0; i < tree_length; i++) {\n            node_type = get_type(parse_tree[i])\n            if (node_type === \"string\") {\n                output[output.length] = parse_tree[i]\n            }\n            else if (node_type === \"array\") {\n                match = parse_tree[i] // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw new Error(sprintf(\"[sprintf] property '%s' does not exist\", match[2][k]))\n                        }\n                        arg = arg[match[2][k]]\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (get_type(arg) == \"function\") {\n                    arg = arg()\n                }\n\n                if (re.not_string.test(match[8]) && re.not_json.test(match[8]) && (get_type(arg) != \"number\" && isNaN(arg))) {\n                    throw new TypeError(sprintf(\"[sprintf] expecting number but found %s\", get_type(arg)))\n                }\n\n                if (re.number.test(match[8])) {\n                    is_positive = arg >= 0\n                }\n\n                switch (match[8]) {\n                    case \"b\":\n                        arg = arg.toString(2)\n                    break\n                    case \"c\":\n                        arg = String.fromCharCode(arg)\n                    break\n                    case \"d\":\n                    case \"i\":\n                        arg = parseInt(arg, 10)\n                    break\n                    case \"j\":\n                        arg = JSON.stringify(arg, null, match[6] ? parseInt(match[6]) : 0)\n                    break\n                    case \"e\":\n                        arg = match[7] ? arg.toExponential(match[7]) : arg.toExponential()\n                    break\n                    case \"f\":\n                        arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg)\n                    break\n                    case \"g\":\n                        arg = match[7] ? parseFloat(arg).toPrecision(match[7]) : parseFloat(arg)\n                    break\n                    case \"o\":\n                        arg = arg.toString(8)\n                    break\n                    case \"s\":\n                        arg = ((arg = String(arg)) && match[7] ? arg.substring(0, match[7]) : arg)\n                    break\n                    case \"u\":\n                        arg = arg >>> 0\n                    break\n                    case \"x\":\n                        arg = arg.toString(16)\n                    break\n                    case \"X\":\n                        arg = arg.toString(16).toUpperCase()\n                    break\n                }\n                if (re.json.test(match[8])) {\n                    output[output.length] = arg\n                }\n                else {\n                    if (re.number.test(match[8]) && (!is_positive || match[3])) {\n                        sign = is_positive ? \"+\" : \"-\"\n                        arg = arg.toString().replace(re.sign, \"\")\n                    }\n                    else {\n                        sign = \"\"\n                    }\n                    pad_character = match[4] ? match[4] === \"0\" ? \"0\" : match[4].charAt(1) : \" \"\n                    pad_length = match[6] - (sign + arg).length\n                    pad = match[6] ? (pad_length > 0 ? str_repeat(pad_character, pad_length) : \"\") : \"\"\n                    output[output.length] = match[5] ? sign + arg + pad : (pad_character === \"0\" ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output.join(\"\")\n    }\n\n    sprintf.cache = {}\n\n    sprintf.parse = function(fmt) {\n        var _fmt = fmt, match = [], parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree[parse_tree.length] = match[0]\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree[parse_tree.length] = \"%\"\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list[field_list.length] = field_match[1]\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== \"\") {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list[field_list.length] = field_match[1]\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list[field_list.length] = field_match[1]\n                            }\n                            else {\n                                throw new SyntaxError(\"[sprintf] failed to parse named argument key\")\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError(\"[sprintf] failed to parse named argument key\")\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error(\"[sprintf] mixing positional and named placeholders is not (yet) supported\")\n                }\n                parse_tree[parse_tree.length] = match\n            }\n            else {\n                throw new SyntaxError(\"[sprintf] unexpected placeholder\")\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return parse_tree\n    }\n\n    var vsprintf = function(fmt, argv, _argv) {\n        _argv = (argv || []).slice(0)\n        _argv.splice(0, 0, fmt)\n        return sprintf.apply(null, _argv)\n    }\n\n    /**\n     * helpers\n     */\n    function get_type(variable) {\n        return Object.prototype.toString.call(variable).slice(8, -1).toLowerCase()\n    }\n\n    function str_repeat(input, multiplier) {\n        return Array(multiplier + 1).join(input)\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    if (typeof exports !== \"undefined\") {\n        exports.sprintf = sprintf\n        exports.vsprintf = vsprintf\n    }\n    else {\n        window.sprintf = sprintf\n        window.vsprintf = vsprintf\n\n        if (typeof define === \"function\" && define.amd) {\n            define(function() {\n                return {\n                    sprintf: sprintf,\n                    vsprintf: vsprintf\n                }\n            })\n        }\n    }\n})(typeof window === \"undefined\" ? this : window);\n","/*\n * angular-ui-bootstrap\n * http://angular-ui.github.io/bootstrap/\n\n * Version: 2.2.0 - 2016-10-10\n * License: MIT\n */angular.module(\"ui.bootstrap\", [\"ui.bootstrap.tpls\", \"ui.bootstrap.collapse\",\"ui.bootstrap.tabindex\",\"ui.bootstrap.accordion\",\"ui.bootstrap.alert\",\"ui.bootstrap.buttons\",\"ui.bootstrap.carousel\",\"ui.bootstrap.dateparser\",\"ui.bootstrap.isClass\",\"ui.bootstrap.datepicker\",\"ui.bootstrap.position\",\"ui.bootstrap.datepickerPopup\",\"ui.bootstrap.debounce\",\"ui.bootstrap.dropdown\",\"ui.bootstrap.stackedMap\",\"ui.bootstrap.modal\",\"ui.bootstrap.paging\",\"ui.bootstrap.pager\",\"ui.bootstrap.pagination\",\"ui.bootstrap.tooltip\",\"ui.bootstrap.popover\",\"ui.bootstrap.progressbar\",\"ui.bootstrap.rating\",\"ui.bootstrap.tabs\",\"ui.bootstrap.timepicker\",\"ui.bootstrap.typeahead\"]);\nangular.module(\"ui.bootstrap.tpls\", [\"uib/template/accordion/accordion-group.html\",\"uib/template/accordion/accordion.html\",\"uib/template/alert/alert.html\",\"uib/template/carousel/carousel.html\",\"uib/template/carousel/slide.html\",\"uib/template/datepicker/datepicker.html\",\"uib/template/datepicker/day.html\",\"uib/template/datepicker/month.html\",\"uib/template/datepicker/year.html\",\"uib/template/datepickerPopup/popup.html\",\"uib/template/modal/window.html\",\"uib/template/pager/pager.html\",\"uib/template/pagination/pagination.html\",\"uib/template/tooltip/tooltip-html-popup.html\",\"uib/template/tooltip/tooltip-popup.html\",\"uib/template/tooltip/tooltip-template-popup.html\",\"uib/template/popover/popover-html.html\",\"uib/template/popover/popover-template.html\",\"uib/template/popover/popover.html\",\"uib/template/progressbar/bar.html\",\"uib/template/progressbar/progress.html\",\"uib/template/progressbar/progressbar.html\",\"uib/template/rating/rating.html\",\"uib/template/tabs/tab.html\",\"uib/template/tabs/tabset.html\",\"uib/template/timepicker/timepicker.html\",\"uib/template/typeahead/typeahead-match.html\",\"uib/template/typeahead/typeahead-popup.html\"]);\nangular.module('ui.bootstrap.collapse', [])\n\n  .directive('uibCollapse', ['$animate', '$q', '$parse', '$injector', function($animate, $q, $parse, $injector) {\n    var $animateCss = $injector.has('$animateCss') ? $injector.get('$animateCss') : null;\n    return {\n      link: function(scope, element, attrs) {\n        var expandingExpr = $parse(attrs.expanding),\n          expandedExpr = $parse(attrs.expanded),\n          collapsingExpr = $parse(attrs.collapsing),\n          collapsedExpr = $parse(attrs.collapsed),\n          horizontal = false,\n          css = {},\n          cssTo = {};\n\n        init();\n\n        function init() {\n          horizontal = !!('horizontal' in attrs);\n          if (horizontal) {\n            css = {\n              width: ''\n            };\n            cssTo = {width: '0'};\n          } else {\n            css = {\n              height: ''\n            };\n            cssTo = {height: '0'};\n          }\n          if (!scope.$eval(attrs.uibCollapse)) {\n            element.addClass('in')\n              .addClass('collapse')\n              .attr('aria-expanded', true)\n              .attr('aria-hidden', false)\n              .css(css);\n          }\n        }\n\n        function getScrollFromElement(element) {\n          if (horizontal) {\n            return {width: element.scrollWidth + 'px'};\n          }\n          return {height: element.scrollHeight + 'px'};\n        }\n\n        function expand() {\n          if (element.hasClass('collapse') && element.hasClass('in')) {\n            return;\n          }\n\n          $q.resolve(expandingExpr(scope))\n            .then(function() {\n              element.removeClass('collapse')\n                .addClass('collapsing')\n                .attr('aria-expanded', true)\n                .attr('aria-hidden', false);\n\n              if ($animateCss) {\n                $animateCss(element, {\n                  addClass: 'in',\n                  easing: 'ease',\n                  css: {\n                    overflow: 'hidden'\n                  },\n                  to: getScrollFromElement(element[0])\n                }).start()['finally'](expandDone);\n              } else {\n                $animate.addClass(element, 'in', {\n                  css: {\n                    overflow: 'hidden'\n                  },\n                  to: getScrollFromElement(element[0])\n                }).then(expandDone);\n              }\n            });\n        }\n\n        function expandDone() {\n          element.removeClass('collapsing')\n            .addClass('collapse')\n            .css(css);\n          expandedExpr(scope);\n        }\n\n        function collapse() {\n          if (!element.hasClass('collapse') && !element.hasClass('in')) {\n            return collapseDone();\n          }\n\n          $q.resolve(collapsingExpr(scope))\n            .then(function() {\n              element\n              // IMPORTANT: The width must be set before adding \"collapsing\" class.\n              // Otherwise, the browser attempts to animate from width 0 (in\n              // collapsing class) to the given width here.\n                .css(getScrollFromElement(element[0]))\n                // initially all panel collapse have the collapse class, this removal\n                // prevents the animation from jumping to collapsed state\n                .removeClass('collapse')\n                .addClass('collapsing')\n                .attr('aria-expanded', false)\n                .attr('aria-hidden', true);\n\n              if ($animateCss) {\n                $animateCss(element, {\n                  removeClass: 'in',\n                  to: cssTo\n                }).start()['finally'](collapseDone);\n              } else {\n                $animate.removeClass(element, 'in', {\n                  to: cssTo\n                }).then(collapseDone);\n              }\n            });\n        }\n\n        function collapseDone() {\n          element.css(cssTo); // Required so that collapse works when animation is disabled\n          element.removeClass('collapsing')\n            .addClass('collapse');\n          collapsedExpr(scope);\n        }\n\n        scope.$watch(attrs.uibCollapse, function(shouldCollapse) {\n          if (shouldCollapse) {\n            collapse();\n          } else {\n            expand();\n          }\n        });\n      }\n    };\n  }]);\n\nangular.module('ui.bootstrap.tabindex', [])\n\n.directive('uibTabindexToggle', function() {\n  return {\n    restrict: 'A',\n    link: function(scope, elem, attrs) {\n      attrs.$observe('disabled', function(disabled) {\n        attrs.$set('tabindex', disabled ? -1 : null);\n      });\n    }\n  };\n});\n\nangular.module('ui.bootstrap.accordion', ['ui.bootstrap.collapse', 'ui.bootstrap.tabindex'])\n\n.constant('uibAccordionConfig', {\n  closeOthers: true\n})\n\n.controller('UibAccordionController', ['$scope', '$attrs', 'uibAccordionConfig', function($scope, $attrs, accordionConfig) {\n  // This array keeps track of the accordion groups\n  this.groups = [];\n\n  // Ensure that all the groups in this accordion are closed, unless close-others explicitly says not to\n  this.closeOthers = function(openGroup) {\n    var closeOthers = angular.isDefined($attrs.closeOthers) ?\n      $scope.$eval($attrs.closeOthers) : accordionConfig.closeOthers;\n    if (closeOthers) {\n      angular.forEach(this.groups, function(group) {\n        if (group !== openGroup) {\n          group.isOpen = false;\n        }\n      });\n    }\n  };\n\n  // This is called from the accordion-group directive to add itself to the accordion\n  this.addGroup = function(groupScope) {\n    var that = this;\n    this.groups.push(groupScope);\n\n    groupScope.$on('$destroy', function(event) {\n      that.removeGroup(groupScope);\n    });\n  };\n\n  // This is called from the accordion-group directive when to remove itself\n  this.removeGroup = function(group) {\n    var index = this.groups.indexOf(group);\n    if (index !== -1) {\n      this.groups.splice(index, 1);\n    }\n  };\n}])\n\n// The accordion directive simply sets up the directive controller\n// and adds an accordion CSS class to itself element.\n.directive('uibAccordion', function() {\n  return {\n    controller: 'UibAccordionController',\n    controllerAs: 'accordion',\n    transclude: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/accordion/accordion.html';\n    }\n  };\n})\n\n// The accordion-group directive indicates a block of html that will expand and collapse in an accordion\n.directive('uibAccordionGroup', function() {\n  return {\n    require: '^uibAccordion',         // We need this directive to be inside an accordion\n    transclude: true,              // It transcludes the contents of the directive into the template\n    restrict: 'A',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/accordion/accordion-group.html';\n    },\n    scope: {\n      heading: '@',               // Interpolate the heading attribute onto this scope\n      panelClass: '@?',           // Ditto with panelClass\n      isOpen: '=?',\n      isDisabled: '=?'\n    },\n    controller: function() {\n      this.setHeading = function(element) {\n        this.heading = element;\n      };\n    },\n    link: function(scope, element, attrs, accordionCtrl) {\n      element.addClass('panel');\n      accordionCtrl.addGroup(scope);\n\n      scope.openClass = attrs.openClass || 'panel-open';\n      scope.panelClass = attrs.panelClass || 'panel-default';\n      scope.$watch('isOpen', function(value) {\n        element.toggleClass(scope.openClass, !!value);\n        if (value) {\n          accordionCtrl.closeOthers(scope);\n        }\n      });\n\n      scope.toggleOpen = function($event) {\n        if (!scope.isDisabled) {\n          if (!$event || $event.which === 32) {\n            scope.isOpen = !scope.isOpen;\n          }\n        }\n      };\n\n      var id = 'accordiongroup-' + scope.$id + '-' + Math.floor(Math.random() * 10000);\n      scope.headingId = id + '-tab';\n      scope.panelId = id + '-panel';\n    }\n  };\n})\n\n// Use accordion-heading below an accordion-group to provide a heading containing HTML\n.directive('uibAccordionHeading', function() {\n  return {\n    transclude: true,   // Grab the contents to be used as the heading\n    template: '',       // In effect remove this element!\n    replace: true,\n    require: '^uibAccordionGroup',\n    link: function(scope, element, attrs, accordionGroupCtrl, transclude) {\n      // Pass the heading to the accordion-group controller\n      // so that it can be transcluded into the right place in the template\n      // [The second parameter to transclude causes the elements to be cloned so that they work in ng-repeat]\n      accordionGroupCtrl.setHeading(transclude(scope, angular.noop));\n    }\n  };\n})\n\n// Use in the accordion-group template to indicate where you want the heading to be transcluded\n// You must provide the property on the accordion-group controller that will hold the transcluded element\n.directive('uibAccordionTransclude', function() {\n  return {\n    require: '^uibAccordionGroup',\n    link: function(scope, element, attrs, controller) {\n      scope.$watch(function() { return controller[attrs.uibAccordionTransclude]; }, function(heading) {\n        if (heading) {\n          var elem = angular.element(element[0].querySelector(getHeaderSelectors()));\n          elem.html('');\n          elem.append(heading);\n        }\n      });\n    }\n  };\n\n  function getHeaderSelectors() {\n      return 'uib-accordion-header,' +\n          'data-uib-accordion-header,' +\n          'x-uib-accordion-header,' +\n          'uib\\\\:accordion-header,' +\n          '[uib-accordion-header],' +\n          '[data-uib-accordion-header],' +\n          '[x-uib-accordion-header]';\n  }\n});\n\nangular.module('ui.bootstrap.alert', [])\n\n.controller('UibAlertController', ['$scope', '$element', '$attrs', '$interpolate', '$timeout', function($scope, $element, $attrs, $interpolate, $timeout) {\n  $scope.closeable = !!$attrs.close;\n  $element.addClass('alert');\n  $attrs.$set('role', 'alert');\n  if ($scope.closeable) {\n    $element.addClass('alert-dismissible');\n  }\n\n  var dismissOnTimeout = angular.isDefined($attrs.dismissOnTimeout) ?\n    $interpolate($attrs.dismissOnTimeout)($scope.$parent) : null;\n\n  if (dismissOnTimeout) {\n    $timeout(function() {\n      $scope.close();\n    }, parseInt(dismissOnTimeout, 10));\n  }\n}])\n\n.directive('uibAlert', function() {\n  return {\n    controller: 'UibAlertController',\n    controllerAs: 'alert',\n    restrict: 'A',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/alert/alert.html';\n    },\n    transclude: true,\n    scope: {\n      close: '&'\n    }\n  };\n});\n\nangular.module('ui.bootstrap.buttons', [])\n\n.constant('uibButtonConfig', {\n  activeClass: 'active',\n  toggleEvent: 'click'\n})\n\n.controller('UibButtonsController', ['uibButtonConfig', function(buttonConfig) {\n  this.activeClass = buttonConfig.activeClass || 'active';\n  this.toggleEvent = buttonConfig.toggleEvent || 'click';\n}])\n\n.directive('uibBtnRadio', ['$parse', function($parse) {\n  return {\n    require: ['uibBtnRadio', 'ngModel'],\n    controller: 'UibButtonsController',\n    controllerAs: 'buttons',\n    link: function(scope, element, attrs, ctrls) {\n      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n      var uncheckableExpr = $parse(attrs.uibUncheckable);\n\n      element.find('input').css({display: 'none'});\n\n      //model -> UI\n      ngModelCtrl.$render = function() {\n        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, scope.$eval(attrs.uibBtnRadio)));\n      };\n\n      //ui->model\n      element.on(buttonsCtrl.toggleEvent, function() {\n        if (attrs.disabled) {\n          return;\n        }\n\n        var isActive = element.hasClass(buttonsCtrl.activeClass);\n\n        if (!isActive || angular.isDefined(attrs.uncheckable)) {\n          scope.$apply(function() {\n            ngModelCtrl.$setViewValue(isActive ? null : scope.$eval(attrs.uibBtnRadio));\n            ngModelCtrl.$render();\n          });\n        }\n      });\n\n      if (attrs.uibUncheckable) {\n        scope.$watch(uncheckableExpr, function(uncheckable) {\n          attrs.$set('uncheckable', uncheckable ? '' : undefined);\n        });\n      }\n    }\n  };\n}])\n\n.directive('uibBtnCheckbox', function() {\n  return {\n    require: ['uibBtnCheckbox', 'ngModel'],\n    controller: 'UibButtonsController',\n    controllerAs: 'button',\n    link: function(scope, element, attrs, ctrls) {\n      var buttonsCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      element.find('input').css({display: 'none'});\n\n      function getTrueValue() {\n        return getCheckboxValue(attrs.btnCheckboxTrue, true);\n      }\n\n      function getFalseValue() {\n        return getCheckboxValue(attrs.btnCheckboxFalse, false);\n      }\n\n      function getCheckboxValue(attribute, defaultValue) {\n        return angular.isDefined(attribute) ? scope.$eval(attribute) : defaultValue;\n      }\n\n      //model -> UI\n      ngModelCtrl.$render = function() {\n        element.toggleClass(buttonsCtrl.activeClass, angular.equals(ngModelCtrl.$modelValue, getTrueValue()));\n      };\n\n      //ui->model\n      element.on(buttonsCtrl.toggleEvent, function() {\n        if (attrs.disabled) {\n          return;\n        }\n\n        scope.$apply(function() {\n          ngModelCtrl.$setViewValue(element.hasClass(buttonsCtrl.activeClass) ? getFalseValue() : getTrueValue());\n          ngModelCtrl.$render();\n        });\n      });\n    }\n  };\n});\n\nangular.module('ui.bootstrap.carousel', [])\n\n.controller('UibCarouselController', ['$scope', '$element', '$interval', '$timeout', '$animate', function($scope, $element, $interval, $timeout, $animate) {\n  var self = this,\n    slides = self.slides = $scope.slides = [],\n    SLIDE_DIRECTION = 'uib-slideDirection',\n    currentIndex = $scope.active,\n    currentInterval, isPlaying, bufferedTransitions = [];\n\n  var destroyed = false;\n  $element.addClass('carousel');\n\n  self.addSlide = function(slide, element) {\n    slides.push({\n      slide: slide,\n      element: element\n    });\n    slides.sort(function(a, b) {\n      return +a.slide.index - +b.slide.index;\n    });\n    //if this is the first slide or the slide is set to active, select it\n    if (slide.index === $scope.active || slides.length === 1 && !angular.isNumber($scope.active)) {\n      if ($scope.$currentTransition) {\n        $scope.$currentTransition = null;\n      }\n\n      currentIndex = slide.index;\n      $scope.active = slide.index;\n      setActive(currentIndex);\n      self.select(slides[findSlideIndex(slide)]);\n      if (slides.length === 1) {\n        $scope.play();\n      }\n    }\n  };\n\n  self.getCurrentIndex = function() {\n    for (var i = 0; i < slides.length; i++) {\n      if (slides[i].slide.index === currentIndex) {\n        return i;\n      }\n    }\n  };\n\n  self.next = $scope.next = function() {\n    var newIndex = (self.getCurrentIndex() + 1) % slides.length;\n\n    if (newIndex === 0 && $scope.noWrap()) {\n      $scope.pause();\n      return;\n    }\n\n    return self.select(slides[newIndex], 'next');\n  };\n\n  self.prev = $scope.prev = function() {\n    var newIndex = self.getCurrentIndex() - 1 < 0 ? slides.length - 1 : self.getCurrentIndex() - 1;\n\n    if ($scope.noWrap() && newIndex === slides.length - 1) {\n      $scope.pause();\n      return;\n    }\n\n    return self.select(slides[newIndex], 'prev');\n  };\n\n  self.removeSlide = function(slide) {\n    var index = findSlideIndex(slide);\n\n    var bufferedIndex = bufferedTransitions.indexOf(slides[index]);\n    if (bufferedIndex !== -1) {\n      bufferedTransitions.splice(bufferedIndex, 1);\n    }\n\n    //get the index of the slide inside the carousel\n    slides.splice(index, 1);\n    if (slides.length > 0 && currentIndex === index) {\n      if (index >= slides.length) {\n        currentIndex = slides.length - 1;\n        $scope.active = currentIndex;\n        setActive(currentIndex);\n        self.select(slides[slides.length - 1]);\n      } else {\n        currentIndex = index;\n        $scope.active = currentIndex;\n        setActive(currentIndex);\n        self.select(slides[index]);\n      }\n    } else if (currentIndex > index) {\n      currentIndex--;\n      $scope.active = currentIndex;\n    }\n\n    //clean the active value when no more slide\n    if (slides.length === 0) {\n      currentIndex = null;\n      $scope.active = null;\n      clearBufferedTransitions();\n    }\n  };\n\n  /* direction: \"prev\" or \"next\" */\n  self.select = $scope.select = function(nextSlide, direction) {\n    var nextIndex = findSlideIndex(nextSlide.slide);\n    //Decide direction if it's not given\n    if (direction === undefined) {\n      direction = nextIndex > self.getCurrentIndex() ? 'next' : 'prev';\n    }\n    //Prevent this user-triggered transition from occurring if there is already one in progress\n    if (nextSlide.slide.index !== currentIndex &&\n      !$scope.$currentTransition) {\n      goNext(nextSlide.slide, nextIndex, direction);\n    } else if (nextSlide && nextSlide.slide.index !== currentIndex && $scope.$currentTransition) {\n      bufferedTransitions.push(slides[nextIndex]);\n    }\n  };\n\n  /* Allow outside people to call indexOf on slides array */\n  $scope.indexOfSlide = function(slide) {\n    return +slide.slide.index;\n  };\n\n  $scope.isActive = function(slide) {\n    return $scope.active === slide.slide.index;\n  };\n\n  $scope.isPrevDisabled = function() {\n    return $scope.active === 0 && $scope.noWrap();\n  };\n\n  $scope.isNextDisabled = function() {\n    return $scope.active === slides.length - 1 && $scope.noWrap();\n  };\n\n  $scope.pause = function() {\n    if (!$scope.noPause) {\n      isPlaying = false;\n      resetTimer();\n    }\n  };\n\n  $scope.play = function() {\n    if (!isPlaying) {\n      isPlaying = true;\n      restartTimer();\n    }\n  };\n\n  $element.on('mouseenter', $scope.pause);\n  $element.on('mouseleave', $scope.play);\n\n  $scope.$on('$destroy', function() {\n    destroyed = true;\n    resetTimer();\n  });\n\n  $scope.$watch('noTransition', function(noTransition) {\n    $animate.enabled($element, !noTransition);\n  });\n\n  $scope.$watch('interval', restartTimer);\n\n  $scope.$watchCollection('slides', resetTransition);\n\n  $scope.$watch('active', function(index) {\n    if (angular.isNumber(index) && currentIndex !== index) {\n      for (var i = 0; i < slides.length; i++) {\n        if (slides[i].slide.index === index) {\n          index = i;\n          break;\n        }\n      }\n\n      var slide = slides[index];\n      if (slide) {\n        setActive(index);\n        self.select(slides[index]);\n        currentIndex = index;\n      }\n    }\n  });\n\n  function clearBufferedTransitions() {\n    while (bufferedTransitions.length) {\n      bufferedTransitions.shift();\n    }\n  }\n\n  function getSlideByIndex(index) {\n    for (var i = 0, l = slides.length; i < l; ++i) {\n      if (slides[i].index === index) {\n        return slides[i];\n      }\n    }\n  }\n\n  function setActive(index) {\n    for (var i = 0; i < slides.length; i++) {\n      slides[i].slide.active = i === index;\n    }\n  }\n\n  function goNext(slide, index, direction) {\n    if (destroyed) {\n      return;\n    }\n\n    angular.extend(slide, {direction: direction});\n    angular.extend(slides[currentIndex].slide || {}, {direction: direction});\n    if ($animate.enabled($element) && !$scope.$currentTransition &&\n      slides[index].element && self.slides.length > 1) {\n      slides[index].element.data(SLIDE_DIRECTION, slide.direction);\n      var currentIdx = self.getCurrentIndex();\n\n      if (angular.isNumber(currentIdx) && slides[currentIdx].element) {\n        slides[currentIdx].element.data(SLIDE_DIRECTION, slide.direction);\n      }\n\n      $scope.$currentTransition = true;\n      $animate.on('addClass', slides[index].element, function(element, phase) {\n        if (phase === 'close') {\n          $scope.$currentTransition = null;\n          $animate.off('addClass', element);\n          if (bufferedTransitions.length) {\n            var nextSlide = bufferedTransitions.pop().slide;\n            var nextIndex = nextSlide.index;\n            var nextDirection = nextIndex > self.getCurrentIndex() ? 'next' : 'prev';\n            clearBufferedTransitions();\n\n            goNext(nextSlide, nextIndex, nextDirection);\n          }\n        }\n      });\n    }\n\n    $scope.active = slide.index;\n    currentIndex = slide.index;\n    setActive(index);\n\n    //every time you change slides, reset the timer\n    restartTimer();\n  }\n\n  function findSlideIndex(slide) {\n    for (var i = 0; i < slides.length; i++) {\n      if (slides[i].slide === slide) {\n        return i;\n      }\n    }\n  }\n\n  function resetTimer() {\n    if (currentInterval) {\n      $interval.cancel(currentInterval);\n      currentInterval = null;\n    }\n  }\n\n  function resetTransition(slides) {\n    if (!slides.length) {\n      $scope.$currentTransition = null;\n      clearBufferedTransitions();\n    }\n  }\n\n  function restartTimer() {\n    resetTimer();\n    var interval = +$scope.interval;\n    if (!isNaN(interval) && interval > 0) {\n      currentInterval = $interval(timerFn, interval);\n    }\n  }\n\n  function timerFn() {\n    var interval = +$scope.interval;\n    if (isPlaying && !isNaN(interval) && interval > 0 && slides.length) {\n      $scope.next();\n    } else {\n      $scope.pause();\n    }\n  }\n}])\n\n.directive('uibCarousel', function() {\n  return {\n    transclude: true,\n    controller: 'UibCarouselController',\n    controllerAs: 'carousel',\n    restrict: 'A',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/carousel/carousel.html';\n    },\n    scope: {\n      active: '=',\n      interval: '=',\n      noTransition: '=',\n      noPause: '=',\n      noWrap: '&'\n    }\n  };\n})\n\n.directive('uibSlide', ['$animate', function($animate) {\n  return {\n    require: '^uibCarousel',\n    restrict: 'A',\n    transclude: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/carousel/slide.html';\n    },\n    scope: {\n      actual: '=?',\n      index: '=?'\n    },\n    link: function (scope, element, attrs, carouselCtrl) {\n      element.addClass('item');\n      carouselCtrl.addSlide(scope, element);\n      //when the scope is destroyed then remove the slide from the current slides array\n      scope.$on('$destroy', function() {\n        carouselCtrl.removeSlide(scope);\n      });\n\n      scope.$watch('active', function(active) {\n        $animate[active ? 'addClass' : 'removeClass'](element, 'active');\n      });\n    }\n  };\n}])\n\n.animation('.item', ['$animateCss',\nfunction($animateCss) {\n  var SLIDE_DIRECTION = 'uib-slideDirection';\n\n  function removeClass(element, className, callback) {\n    element.removeClass(className);\n    if (callback) {\n      callback();\n    }\n  }\n\n  return {\n    beforeAddClass: function(element, className, done) {\n      if (className === 'active') {\n        var stopped = false;\n        var direction = element.data(SLIDE_DIRECTION);\n        var directionClass = direction === 'next' ? 'left' : 'right';\n        var removeClassFn = removeClass.bind(this, element,\n          directionClass + ' ' + direction, done);\n        element.addClass(direction);\n\n        $animateCss(element, {addClass: directionClass})\n          .start()\n          .done(removeClassFn);\n\n        return function() {\n          stopped = true;\n        };\n      }\n      done();\n    },\n    beforeRemoveClass: function (element, className, done) {\n      if (className === 'active') {\n        var stopped = false;\n        var direction = element.data(SLIDE_DIRECTION);\n        var directionClass = direction === 'next' ? 'left' : 'right';\n        var removeClassFn = removeClass.bind(this, element, directionClass, done);\n\n        $animateCss(element, {addClass: directionClass})\n          .start()\n          .done(removeClassFn);\n\n        return function() {\n          stopped = true;\n        };\n      }\n      done();\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.dateparser', [])\n\n.service('uibDateParser', ['$log', '$locale', 'dateFilter', 'orderByFilter', function($log, $locale, dateFilter, orderByFilter) {\n  // Pulled from https://github.com/mbostock/d3/blob/master/src/format/requote.js\n  var SPECIAL_CHARACTERS_REGEXP = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\n  var localeId;\n  var formatCodeToRegex;\n\n  this.init = function() {\n    localeId = $locale.id;\n\n    this.parsers = {};\n    this.formatters = {};\n\n    formatCodeToRegex = [\n      {\n        key: 'yyyy',\n        regex: '\\\\d{4}',\n        apply: function(value) { this.year = +value; },\n        formatter: function(date) {\n          var _date = new Date();\n          _date.setFullYear(Math.abs(date.getFullYear()));\n          return dateFilter(_date, 'yyyy');\n        }\n      },\n      {\n        key: 'yy',\n        regex: '\\\\d{2}',\n        apply: function(value) { value = +value; this.year = value < 69 ? value + 2000 : value + 1900; },\n        formatter: function(date) {\n          var _date = new Date();\n          _date.setFullYear(Math.abs(date.getFullYear()));\n          return dateFilter(_date, 'yy');\n        }\n      },\n      {\n        key: 'y',\n        regex: '\\\\d{1,4}',\n        apply: function(value) { this.year = +value; },\n        formatter: function(date) {\n          var _date = new Date();\n          _date.setFullYear(Math.abs(date.getFullYear()));\n          return dateFilter(_date, 'y');\n        }\n      },\n      {\n        key: 'M!',\n        regex: '0?[1-9]|1[0-2]',\n        apply: function(value) { this.month = value - 1; },\n        formatter: function(date) {\n          var value = date.getMonth();\n          if (/^[0-9]$/.test(value)) {\n            return dateFilter(date, 'MM');\n          }\n\n          return dateFilter(date, 'M');\n        }\n      },\n      {\n        key: 'MMMM',\n        regex: $locale.DATETIME_FORMATS.MONTH.join('|'),\n        apply: function(value) { this.month = $locale.DATETIME_FORMATS.MONTH.indexOf(value); },\n        formatter: function(date) { return dateFilter(date, 'MMMM'); }\n      },\n      {\n        key: 'MMM',\n        regex: $locale.DATETIME_FORMATS.SHORTMONTH.join('|'),\n        apply: function(value) { this.month = $locale.DATETIME_FORMATS.SHORTMONTH.indexOf(value); },\n        formatter: function(date) { return dateFilter(date, 'MMM'); }\n      },\n      {\n        key: 'MM',\n        regex: '0[1-9]|1[0-2]',\n        apply: function(value) { this.month = value - 1; },\n        formatter: function(date) { return dateFilter(date, 'MM'); }\n      },\n      {\n        key: 'M',\n        regex: '[1-9]|1[0-2]',\n        apply: function(value) { this.month = value - 1; },\n        formatter: function(date) { return dateFilter(date, 'M'); }\n      },\n      {\n        key: 'd!',\n        regex: '[0-2]?[0-9]{1}|3[0-1]{1}',\n        apply: function(value) { this.date = +value; },\n        formatter: function(date) {\n          var value = date.getDate();\n          if (/^[1-9]$/.test(value)) {\n            return dateFilter(date, 'dd');\n          }\n\n          return dateFilter(date, 'd');\n        }\n      },\n      {\n        key: 'dd',\n        regex: '[0-2][0-9]{1}|3[0-1]{1}',\n        apply: function(value) { this.date = +value; },\n        formatter: function(date) { return dateFilter(date, 'dd'); }\n      },\n      {\n        key: 'd',\n        regex: '[1-2]?[0-9]{1}|3[0-1]{1}',\n        apply: function(value) { this.date = +value; },\n        formatter: function(date) { return dateFilter(date, 'd'); }\n      },\n      {\n        key: 'EEEE',\n        regex: $locale.DATETIME_FORMATS.DAY.join('|'),\n        formatter: function(date) { return dateFilter(date, 'EEEE'); }\n      },\n      {\n        key: 'EEE',\n        regex: $locale.DATETIME_FORMATS.SHORTDAY.join('|'),\n        formatter: function(date) { return dateFilter(date, 'EEE'); }\n      },\n      {\n        key: 'HH',\n        regex: '(?:0|1)[0-9]|2[0-3]',\n        apply: function(value) { this.hours = +value; },\n        formatter: function(date) { return dateFilter(date, 'HH'); }\n      },\n      {\n        key: 'hh',\n        regex: '0[0-9]|1[0-2]',\n        apply: function(value) { this.hours = +value; },\n        formatter: function(date) { return dateFilter(date, 'hh'); }\n      },\n      {\n        key: 'H',\n        regex: '1?[0-9]|2[0-3]',\n        apply: function(value) { this.hours = +value; },\n        formatter: function(date) { return dateFilter(date, 'H'); }\n      },\n      {\n        key: 'h',\n        regex: '[0-9]|1[0-2]',\n        apply: function(value) { this.hours = +value; },\n        formatter: function(date) { return dateFilter(date, 'h'); }\n      },\n      {\n        key: 'mm',\n        regex: '[0-5][0-9]',\n        apply: function(value) { this.minutes = +value; },\n        formatter: function(date) { return dateFilter(date, 'mm'); }\n      },\n      {\n        key: 'm',\n        regex: '[0-9]|[1-5][0-9]',\n        apply: function(value) { this.minutes = +value; },\n        formatter: function(date) { return dateFilter(date, 'm'); }\n      },\n      {\n        key: 'sss',\n        regex: '[0-9][0-9][0-9]',\n        apply: function(value) { this.milliseconds = +value; },\n        formatter: function(date) { return dateFilter(date, 'sss'); }\n      },\n      {\n        key: 'ss',\n        regex: '[0-5][0-9]',\n        apply: function(value) { this.seconds = +value; },\n        formatter: function(date) { return dateFilter(date, 'ss'); }\n      },\n      {\n        key: 's',\n        regex: '[0-9]|[1-5][0-9]',\n        apply: function(value) { this.seconds = +value; },\n        formatter: function(date) { return dateFilter(date, 's'); }\n      },\n      {\n        key: 'a',\n        regex: $locale.DATETIME_FORMATS.AMPMS.join('|'),\n        apply: function(value) {\n          if (this.hours === 12) {\n            this.hours = 0;\n          }\n\n          if (value === 'PM') {\n            this.hours += 12;\n          }\n        },\n        formatter: function(date) { return dateFilter(date, 'a'); }\n      },\n      {\n        key: 'Z',\n        regex: '[+-]\\\\d{4}',\n        apply: function(value) {\n          var matches = value.match(/([+-])(\\d{2})(\\d{2})/),\n            sign = matches[1],\n            hours = matches[2],\n            minutes = matches[3];\n          this.hours += toInt(sign + hours);\n          this.minutes += toInt(sign + minutes);\n        },\n        formatter: function(date) {\n          return dateFilter(date, 'Z');\n        }\n      },\n      {\n        key: 'ww',\n        regex: '[0-4][0-9]|5[0-3]',\n        formatter: function(date) { return dateFilter(date, 'ww'); }\n      },\n      {\n        key: 'w',\n        regex: '[0-9]|[1-4][0-9]|5[0-3]',\n        formatter: function(date) { return dateFilter(date, 'w'); }\n      },\n      {\n        key: 'GGGG',\n        regex: $locale.DATETIME_FORMATS.ERANAMES.join('|').replace(/\\s/g, '\\\\s'),\n        formatter: function(date) { return dateFilter(date, 'GGGG'); }\n      },\n      {\n        key: 'GGG',\n        regex: $locale.DATETIME_FORMATS.ERAS.join('|'),\n        formatter: function(date) { return dateFilter(date, 'GGG'); }\n      },\n      {\n        key: 'GG',\n        regex: $locale.DATETIME_FORMATS.ERAS.join('|'),\n        formatter: function(date) { return dateFilter(date, 'GG'); }\n      },\n      {\n        key: 'G',\n        regex: $locale.DATETIME_FORMATS.ERAS.join('|'),\n        formatter: function(date) { return dateFilter(date, 'G'); }\n      }\n    ];\n  };\n\n  this.init();\n\n  function createParser(format) {\n    var map = [], regex = format.split('');\n\n    // check for literal values\n    var quoteIndex = format.indexOf('\\'');\n    if (quoteIndex > -1) {\n      var inLiteral = false;\n      format = format.split('');\n      for (var i = quoteIndex; i < format.length; i++) {\n        if (inLiteral) {\n          if (format[i] === '\\'') {\n            if (i + 1 < format.length && format[i+1] === '\\'') { // escaped single quote\n              format[i+1] = '$';\n              regex[i+1] = '';\n            } else { // end of literal\n              regex[i] = '';\n              inLiteral = false;\n            }\n          }\n          format[i] = '$';\n        } else {\n          if (format[i] === '\\'') { // start of literal\n            format[i] = '$';\n            regex[i] = '';\n            inLiteral = true;\n          }\n        }\n      }\n\n      format = format.join('');\n    }\n\n    angular.forEach(formatCodeToRegex, function(data) {\n      var index = format.indexOf(data.key);\n\n      if (index > -1) {\n        format = format.split('');\n\n        regex[index] = '(' + data.regex + ')';\n        format[index] = '$'; // Custom symbol to define consumed part of format\n        for (var i = index + 1, n = index + data.key.length; i < n; i++) {\n          regex[i] = '';\n          format[i] = '$';\n        }\n        format = format.join('');\n\n        map.push({\n          index: index,\n          key: data.key,\n          apply: data.apply,\n          matcher: data.regex\n        });\n      }\n    });\n\n    return {\n      regex: new RegExp('^' + regex.join('') + '$'),\n      map: orderByFilter(map, 'index')\n    };\n  }\n\n  function createFormatter(format) {\n    var formatters = [];\n    var i = 0;\n    var formatter, literalIdx;\n    while (i < format.length) {\n      if (angular.isNumber(literalIdx)) {\n        if (format.charAt(i) === '\\'') {\n          if (i + 1 >= format.length || format.charAt(i + 1) !== '\\'') {\n            formatters.push(constructLiteralFormatter(format, literalIdx, i));\n            literalIdx = null;\n          }\n        } else if (i === format.length) {\n          while (literalIdx < format.length) {\n            formatter = constructFormatterFromIdx(format, literalIdx);\n            formatters.push(formatter);\n            literalIdx = formatter.endIdx;\n          }\n        }\n\n        i++;\n        continue;\n      }\n\n      if (format.charAt(i) === '\\'') {\n        literalIdx = i;\n        i++;\n        continue;\n      }\n\n      formatter = constructFormatterFromIdx(format, i);\n\n      formatters.push(formatter.parser);\n      i = formatter.endIdx;\n    }\n\n    return formatters;\n  }\n\n  function constructLiteralFormatter(format, literalIdx, endIdx) {\n    return function() {\n      return format.substr(literalIdx + 1, endIdx - literalIdx - 1);\n    };\n  }\n\n  function constructFormatterFromIdx(format, i) {\n    var currentPosStr = format.substr(i);\n    for (var j = 0; j < formatCodeToRegex.length; j++) {\n      if (new RegExp('^' + formatCodeToRegex[j].key).test(currentPosStr)) {\n        var data = formatCodeToRegex[j];\n        return {\n          endIdx: i + data.key.length,\n          parser: data.formatter\n        };\n      }\n    }\n\n    return {\n      endIdx: i + 1,\n      parser: function() {\n        return currentPosStr.charAt(0);\n      }\n    };\n  }\n\n  this.filter = function(date, format) {\n    if (!angular.isDate(date) || isNaN(date) || !format) {\n      return '';\n    }\n\n    format = $locale.DATETIME_FORMATS[format] || format;\n\n    if ($locale.id !== localeId) {\n      this.init();\n    }\n\n    if (!this.formatters[format]) {\n      this.formatters[format] = createFormatter(format);\n    }\n\n    var formatters = this.formatters[format];\n\n    return formatters.reduce(function(str, formatter) {\n      return str + formatter(date);\n    }, '');\n  };\n\n  this.parse = function(input, format, baseDate) {\n    if (!angular.isString(input) || !format) {\n      return input;\n    }\n\n    format = $locale.DATETIME_FORMATS[format] || format;\n    format = format.replace(SPECIAL_CHARACTERS_REGEXP, '\\\\$&');\n\n    if ($locale.id !== localeId) {\n      this.init();\n    }\n\n    if (!this.parsers[format]) {\n      this.parsers[format] = createParser(format, 'apply');\n    }\n\n    var parser = this.parsers[format],\n        regex = parser.regex,\n        map = parser.map,\n        results = input.match(regex),\n        tzOffset = false;\n    if (results && results.length) {\n      var fields, dt;\n      if (angular.isDate(baseDate) && !isNaN(baseDate.getTime())) {\n        fields = {\n          year: baseDate.getFullYear(),\n          month: baseDate.getMonth(),\n          date: baseDate.getDate(),\n          hours: baseDate.getHours(),\n          minutes: baseDate.getMinutes(),\n          seconds: baseDate.getSeconds(),\n          milliseconds: baseDate.getMilliseconds()\n        };\n      } else {\n        if (baseDate) {\n          $log.warn('dateparser:', 'baseDate is not a valid date');\n        }\n        fields = { year: 1900, month: 0, date: 1, hours: 0, minutes: 0, seconds: 0, milliseconds: 0 };\n      }\n\n      for (var i = 1, n = results.length; i < n; i++) {\n        var mapper = map[i - 1];\n        if (mapper.matcher === 'Z') {\n          tzOffset = true;\n        }\n\n        if (mapper.apply) {\n          mapper.apply.call(fields, results[i]);\n        }\n      }\n\n      var datesetter = tzOffset ? Date.prototype.setUTCFullYear :\n        Date.prototype.setFullYear;\n      var timesetter = tzOffset ? Date.prototype.setUTCHours :\n        Date.prototype.setHours;\n\n      if (isValid(fields.year, fields.month, fields.date)) {\n        if (angular.isDate(baseDate) && !isNaN(baseDate.getTime()) && !tzOffset) {\n          dt = new Date(baseDate);\n          datesetter.call(dt, fields.year, fields.month, fields.date);\n          timesetter.call(dt, fields.hours, fields.minutes,\n            fields.seconds, fields.milliseconds);\n        } else {\n          dt = new Date(0);\n          datesetter.call(dt, fields.year, fields.month, fields.date);\n          timesetter.call(dt, fields.hours || 0, fields.minutes || 0,\n            fields.seconds || 0, fields.milliseconds || 0);\n        }\n      }\n\n      return dt;\n    }\n  };\n\n  // Check if date is valid for specific month (and year for February).\n  // Month: 0 = Jan, 1 = Feb, etc\n  function isValid(year, month, date) {\n    if (date < 1) {\n      return false;\n    }\n\n    if (month === 1 && date > 28) {\n      return date === 29 && (year % 4 === 0 && year % 100 !== 0 || year % 400 === 0);\n    }\n\n    if (month === 3 || month === 5 || month === 8 || month === 10) {\n      return date < 31;\n    }\n\n    return true;\n  }\n\n  function toInt(str) {\n    return parseInt(str, 10);\n  }\n\n  this.toTimezone = toTimezone;\n  this.fromTimezone = fromTimezone;\n  this.timezoneToOffset = timezoneToOffset;\n  this.addDateMinutes = addDateMinutes;\n  this.convertTimezoneToLocal = convertTimezoneToLocal;\n\n  function toTimezone(date, timezone) {\n    return date && timezone ? convertTimezoneToLocal(date, timezone) : date;\n  }\n\n  function fromTimezone(date, timezone) {\n    return date && timezone ? convertTimezoneToLocal(date, timezone, true) : date;\n  }\n\n  //https://github.com/angular/angular.js/blob/622c42169699ec07fc6daaa19fe6d224e5d2f70e/src/Angular.js#L1207\n  function timezoneToOffset(timezone, fallback) {\n    timezone = timezone.replace(/:/g, '');\n    var requestedTimezoneOffset = Date.parse('Jan 01, 1970 00:00:00 ' + timezone) / 60000;\n    return isNaN(requestedTimezoneOffset) ? fallback : requestedTimezoneOffset;\n  }\n\n  function addDateMinutes(date, minutes) {\n    date = new Date(date.getTime());\n    date.setMinutes(date.getMinutes() + minutes);\n    return date;\n  }\n\n  function convertTimezoneToLocal(date, timezone, reverse) {\n    reverse = reverse ? -1 : 1;\n    var dateTimezoneOffset = date.getTimezoneOffset();\n    var timezoneOffset = timezoneToOffset(timezone, dateTimezoneOffset);\n    return addDateMinutes(date, reverse * (timezoneOffset - dateTimezoneOffset));\n  }\n}]);\n\n// Avoiding use of ng-class as it creates a lot of watchers when a class is to be applied to\n// at most one element.\nangular.module('ui.bootstrap.isClass', [])\n.directive('uibIsClass', [\n         '$animate',\nfunction ($animate) {\n  //                    11111111          22222222\n  var ON_REGEXP = /^\\s*([\\s\\S]+?)\\s+on\\s+([\\s\\S]+?)\\s*$/;\n  //                    11111111           22222222\n  var IS_REGEXP = /^\\s*([\\s\\S]+?)\\s+for\\s+([\\s\\S]+?)\\s*$/;\n\n  var dataPerTracked = {};\n\n  return {\n    restrict: 'A',\n    compile: function(tElement, tAttrs) {\n      var linkedScopes = [];\n      var instances = [];\n      var expToData = {};\n      var lastActivated = null;\n      var onExpMatches = tAttrs.uibIsClass.match(ON_REGEXP);\n      var onExp = onExpMatches[2];\n      var expsStr = onExpMatches[1];\n      var exps = expsStr.split(',');\n\n      return linkFn;\n\n      function linkFn(scope, element, attrs) {\n        linkedScopes.push(scope);\n        instances.push({\n          scope: scope,\n          element: element\n        });\n\n        exps.forEach(function(exp, k) {\n          addForExp(exp, scope);\n        });\n\n        scope.$on('$destroy', removeScope);\n      }\n\n      function addForExp(exp, scope) {\n        var matches = exp.match(IS_REGEXP);\n        var clazz = scope.$eval(matches[1]);\n        var compareWithExp = matches[2];\n        var data = expToData[exp];\n        if (!data) {\n          var watchFn = function(compareWithVal) {\n            var newActivated = null;\n            instances.some(function(instance) {\n              var thisVal = instance.scope.$eval(onExp);\n              if (thisVal === compareWithVal) {\n                newActivated = instance;\n                return true;\n              }\n            });\n            if (data.lastActivated !== newActivated) {\n              if (data.lastActivated) {\n                $animate.removeClass(data.lastActivated.element, clazz);\n              }\n              if (newActivated) {\n                $animate.addClass(newActivated.element, clazz);\n              }\n              data.lastActivated = newActivated;\n            }\n          };\n          expToData[exp] = data = {\n            lastActivated: null,\n            scope: scope,\n            watchFn: watchFn,\n            compareWithExp: compareWithExp,\n            watcher: scope.$watch(compareWithExp, watchFn)\n          };\n        }\n        data.watchFn(scope.$eval(compareWithExp));\n      }\n\n      function removeScope(e) {\n        var removedScope = e.targetScope;\n        var index = linkedScopes.indexOf(removedScope);\n        linkedScopes.splice(index, 1);\n        instances.splice(index, 1);\n        if (linkedScopes.length) {\n          var newWatchScope = linkedScopes[0];\n          angular.forEach(expToData, function(data) {\n            if (data.scope === removedScope) {\n              data.watcher = newWatchScope.$watch(data.compareWithExp, data.watchFn);\n              data.scope = newWatchScope;\n            }\n          });\n        } else {\n          expToData = {};\n        }\n      }\n    }\n  };\n}]);\nangular.module('ui.bootstrap.datepicker', ['ui.bootstrap.dateparser', 'ui.bootstrap.isClass'])\n\n.value('$datepickerSuppressError', false)\n\n.value('$datepickerLiteralWarning', true)\n\n.constant('uibDatepickerConfig', {\n  datepickerMode: 'day',\n  formatDay: 'dd',\n  formatMonth: 'MMMM',\n  formatYear: 'yyyy',\n  formatDayHeader: 'EEE',\n  formatDayTitle: 'MMMM yyyy',\n  formatMonthTitle: 'yyyy',\n  maxDate: null,\n  maxMode: 'year',\n  minDate: null,\n  minMode: 'day',\n  monthColumns: 3,\n  ngModelOptions: {},\n  shortcutPropagation: false,\n  showWeeks: true,\n  yearColumns: 5,\n  yearRows: 4\n})\n\n.controller('UibDatepickerController', ['$scope', '$element', '$attrs', '$parse', '$interpolate', '$locale', '$log', 'dateFilter', 'uibDatepickerConfig', '$datepickerLiteralWarning', '$datepickerSuppressError', 'uibDateParser',\n  function($scope, $element, $attrs, $parse, $interpolate, $locale, $log, dateFilter, datepickerConfig, $datepickerLiteralWarning, $datepickerSuppressError, dateParser) {\n  var self = this,\n      ngModelCtrl = { $setViewValue: angular.noop }, // nullModelCtrl;\n      ngModelOptions = {},\n      watchListeners = [];\n\n  $element.addClass('uib-datepicker');\n  $attrs.$set('role', 'application');\n\n  if (!$scope.datepickerOptions) {\n    $scope.datepickerOptions = {};\n  }\n\n  // Modes chain\n  this.modes = ['day', 'month', 'year'];\n\n  [\n    'customClass',\n    'dateDisabled',\n    'datepickerMode',\n    'formatDay',\n    'formatDayHeader',\n    'formatDayTitle',\n    'formatMonth',\n    'formatMonthTitle',\n    'formatYear',\n    'maxDate',\n    'maxMode',\n    'minDate',\n    'minMode',\n    'monthColumns',\n    'showWeeks',\n    'shortcutPropagation',\n    'startingDay',\n    'yearColumns',\n    'yearRows'\n  ].forEach(function(key) {\n    switch (key) {\n      case 'customClass':\n      case 'dateDisabled':\n        $scope[key] = $scope.datepickerOptions[key] || angular.noop;\n        break;\n      case 'datepickerMode':\n        $scope.datepickerMode = angular.isDefined($scope.datepickerOptions.datepickerMode) ?\n          $scope.datepickerOptions.datepickerMode : datepickerConfig.datepickerMode;\n        break;\n      case 'formatDay':\n      case 'formatDayHeader':\n      case 'formatDayTitle':\n      case 'formatMonth':\n      case 'formatMonthTitle':\n      case 'formatYear':\n        self[key] = angular.isDefined($scope.datepickerOptions[key]) ?\n          $interpolate($scope.datepickerOptions[key])($scope.$parent) :\n          datepickerConfig[key];\n        break;\n      case 'monthColumns':\n      case 'showWeeks':\n      case 'shortcutPropagation':\n      case 'yearColumns':\n      case 'yearRows':\n        self[key] = angular.isDefined($scope.datepickerOptions[key]) ?\n          $scope.datepickerOptions[key] : datepickerConfig[key];\n        break;\n      case 'startingDay':\n        if (angular.isDefined($scope.datepickerOptions.startingDay)) {\n          self.startingDay = $scope.datepickerOptions.startingDay;\n        } else if (angular.isNumber(datepickerConfig.startingDay)) {\n          self.startingDay = datepickerConfig.startingDay;\n        } else {\n          self.startingDay = ($locale.DATETIME_FORMATS.FIRSTDAYOFWEEK + 8) % 7;\n        }\n\n        break;\n      case 'maxDate':\n      case 'minDate':\n        $scope.$watch('datepickerOptions.' + key, function(value) {\n          if (value) {\n            if (angular.isDate(value)) {\n              self[key] = dateParser.fromTimezone(new Date(value), ngModelOptions.timezone);\n            } else {\n              if ($datepickerLiteralWarning) {\n                $log.warn('Literal date support has been deprecated, please switch to date object usage');\n              }\n\n              self[key] = new Date(dateFilter(value, 'medium'));\n            }\n          } else {\n            self[key] = datepickerConfig[key] ?\n              dateParser.fromTimezone(new Date(datepickerConfig[key]), ngModelOptions.timezone) :\n              null;\n          }\n\n          self.refreshView();\n        });\n\n        break;\n      case 'maxMode':\n      case 'minMode':\n        if ($scope.datepickerOptions[key]) {\n          $scope.$watch(function() { return $scope.datepickerOptions[key]; }, function(value) {\n            self[key] = $scope[key] = angular.isDefined(value) ? value : $scope.datepickerOptions[key];\n            if (key === 'minMode' && self.modes.indexOf($scope.datepickerOptions.datepickerMode) < self.modes.indexOf(self[key]) ||\n              key === 'maxMode' && self.modes.indexOf($scope.datepickerOptions.datepickerMode) > self.modes.indexOf(self[key])) {\n              $scope.datepickerMode = self[key];\n              $scope.datepickerOptions.datepickerMode = self[key];\n            }\n          });\n        } else {\n          self[key] = $scope[key] = datepickerConfig[key] || null;\n        }\n\n        break;\n    }\n  });\n\n  $scope.uniqueId = 'datepicker-' + $scope.$id + '-' + Math.floor(Math.random() * 10000);\n\n  $scope.disabled = angular.isDefined($attrs.disabled) || false;\n  if (angular.isDefined($attrs.ngDisabled)) {\n    watchListeners.push($scope.$parent.$watch($attrs.ngDisabled, function(disabled) {\n      $scope.disabled = disabled;\n      self.refreshView();\n    }));\n  }\n\n  $scope.isActive = function(dateObject) {\n    if (self.compare(dateObject.date, self.activeDate) === 0) {\n      $scope.activeDateId = dateObject.uid;\n      return true;\n    }\n    return false;\n  };\n\n  this.init = function(ngModelCtrl_) {\n    ngModelCtrl = ngModelCtrl_;\n    ngModelOptions = ngModelCtrl_.$options ||\n      $scope.datepickerOptions.ngModelOptions ||\n      datepickerConfig.ngModelOptions;\n    if ($scope.datepickerOptions.initDate) {\n      self.activeDate = dateParser.fromTimezone($scope.datepickerOptions.initDate, ngModelOptions.timezone) || new Date();\n      $scope.$watch('datepickerOptions.initDate', function(initDate) {\n        if (initDate && (ngModelCtrl.$isEmpty(ngModelCtrl.$modelValue) || ngModelCtrl.$invalid)) {\n          self.activeDate = dateParser.fromTimezone(initDate, ngModelOptions.timezone);\n          self.refreshView();\n        }\n      });\n    } else {\n      self.activeDate = new Date();\n    }\n\n    var date = ngModelCtrl.$modelValue ? new Date(ngModelCtrl.$modelValue) : new Date();\n    this.activeDate = !isNaN(date) ?\n      dateParser.fromTimezone(date, ngModelOptions.timezone) :\n      dateParser.fromTimezone(new Date(), ngModelOptions.timezone);\n\n    ngModelCtrl.$render = function() {\n      self.render();\n    };\n  };\n\n  this.render = function() {\n    if (ngModelCtrl.$viewValue) {\n      var date = new Date(ngModelCtrl.$viewValue),\n          isValid = !isNaN(date);\n\n      if (isValid) {\n        this.activeDate = dateParser.fromTimezone(date, ngModelOptions.timezone);\n      } else if (!$datepickerSuppressError) {\n        $log.error('Datepicker directive: \"ng-model\" value must be a Date object');\n      }\n    }\n    this.refreshView();\n  };\n\n  this.refreshView = function() {\n    if (this.element) {\n      $scope.selectedDt = null;\n      this._refreshView();\n      if ($scope.activeDt) {\n        $scope.activeDateId = $scope.activeDt.uid;\n      }\n\n      var date = ngModelCtrl.$viewValue ? new Date(ngModelCtrl.$viewValue) : null;\n      date = dateParser.fromTimezone(date, ngModelOptions.timezone);\n      ngModelCtrl.$setValidity('dateDisabled', !date ||\n        this.element && !this.isDisabled(date));\n    }\n  };\n\n  this.createDateObject = function(date, format) {\n    var model = ngModelCtrl.$viewValue ? new Date(ngModelCtrl.$viewValue) : null;\n    model = dateParser.fromTimezone(model, ngModelOptions.timezone);\n    var today = new Date();\n    today = dateParser.fromTimezone(today, ngModelOptions.timezone);\n    var time = this.compare(date, today);\n    var dt = {\n      date: date,\n      label: dateParser.filter(date, format),\n      selected: model && this.compare(date, model) === 0,\n      disabled: this.isDisabled(date),\n      past: time < 0,\n      current: time === 0,\n      future: time > 0,\n      customClass: this.customClass(date) || null\n    };\n\n    if (model && this.compare(date, model) === 0) {\n      $scope.selectedDt = dt;\n    }\n\n    if (self.activeDate && this.compare(dt.date, self.activeDate) === 0) {\n      $scope.activeDt = dt;\n    }\n\n    return dt;\n  };\n\n  this.isDisabled = function(date) {\n    return $scope.disabled ||\n      this.minDate && this.compare(date, this.minDate) < 0 ||\n      this.maxDate && this.compare(date, this.maxDate) > 0 ||\n      $scope.dateDisabled && $scope.dateDisabled({date: date, mode: $scope.datepickerMode});\n  };\n\n  this.customClass = function(date) {\n    return $scope.customClass({date: date, mode: $scope.datepickerMode});\n  };\n\n  // Split array into smaller arrays\n  this.split = function(arr, size) {\n    var arrays = [];\n    while (arr.length > 0) {\n      arrays.push(arr.splice(0, size));\n    }\n    return arrays;\n  };\n\n  $scope.select = function(date) {\n    if ($scope.datepickerMode === self.minMode) {\n      var dt = ngModelCtrl.$viewValue ? dateParser.fromTimezone(new Date(ngModelCtrl.$viewValue), ngModelOptions.timezone) : new Date(0, 0, 0, 0, 0, 0, 0);\n      dt.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n      dt = dateParser.toTimezone(dt, ngModelOptions.timezone);\n      ngModelCtrl.$setViewValue(dt);\n      ngModelCtrl.$render();\n    } else {\n      self.activeDate = date;\n      setMode(self.modes[self.modes.indexOf($scope.datepickerMode) - 1]);\n\n      $scope.$emit('uib:datepicker.mode');\n    }\n\n    $scope.$broadcast('uib:datepicker.focus');\n  };\n\n  $scope.move = function(direction) {\n    var year = self.activeDate.getFullYear() + direction * (self.step.years || 0),\n        month = self.activeDate.getMonth() + direction * (self.step.months || 0);\n    self.activeDate.setFullYear(year, month, 1);\n    self.refreshView();\n  };\n\n  $scope.toggleMode = function(direction) {\n    direction = direction || 1;\n\n    if ($scope.datepickerMode === self.maxMode && direction === 1 ||\n      $scope.datepickerMode === self.minMode && direction === -1) {\n      return;\n    }\n\n    setMode(self.modes[self.modes.indexOf($scope.datepickerMode) + direction]);\n\n    $scope.$emit('uib:datepicker.mode');\n  };\n\n  // Key event mapper\n  $scope.keys = { 13: 'enter', 32: 'space', 33: 'pageup', 34: 'pagedown', 35: 'end', 36: 'home', 37: 'left', 38: 'up', 39: 'right', 40: 'down' };\n\n  var focusElement = function() {\n    self.element[0].focus();\n  };\n\n  // Listen for focus requests from popup directive\n  $scope.$on('uib:datepicker.focus', focusElement);\n\n  $scope.keydown = function(evt) {\n    var key = $scope.keys[evt.which];\n\n    if (!key || evt.shiftKey || evt.altKey || $scope.disabled) {\n      return;\n    }\n\n    evt.preventDefault();\n    if (!self.shortcutPropagation) {\n      evt.stopPropagation();\n    }\n\n    if (key === 'enter' || key === 'space') {\n      if (self.isDisabled(self.activeDate)) {\n        return; // do nothing\n      }\n      $scope.select(self.activeDate);\n    } else if (evt.ctrlKey && (key === 'up' || key === 'down')) {\n      $scope.toggleMode(key === 'up' ? 1 : -1);\n    } else {\n      self.handleKeyDown(key, evt);\n      self.refreshView();\n    }\n  };\n\n  $element.on('keydown', function(evt) {\n    $scope.$apply(function() {\n      $scope.keydown(evt);\n    });\n  });\n\n  $scope.$on('$destroy', function() {\n    //Clear all watch listeners on destroy\n    while (watchListeners.length) {\n      watchListeners.shift()();\n    }\n  });\n\n  function setMode(mode) {\n    $scope.datepickerMode = mode;\n    $scope.datepickerOptions.datepickerMode = mode;\n  }\n}])\n\n.controller('UibDaypickerController', ['$scope', '$element', 'dateFilter', function(scope, $element, dateFilter) {\n  var DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\n  this.step = { months: 1 };\n  this.element = $element;\n  function getDaysInMonth(year, month) {\n    return month === 1 && year % 4 === 0 &&\n      (year % 100 !== 0 || year % 400 === 0) ? 29 : DAYS_IN_MONTH[month];\n  }\n\n  this.init = function(ctrl) {\n    angular.extend(ctrl, this);\n    scope.showWeeks = ctrl.showWeeks;\n    ctrl.refreshView();\n  };\n\n  this.getDates = function(startDate, n) {\n    var dates = new Array(n), current = new Date(startDate), i = 0, date;\n    while (i < n) {\n      date = new Date(current);\n      dates[i++] = date;\n      current.setDate(current.getDate() + 1);\n    }\n    return dates;\n  };\n\n  this._refreshView = function() {\n    var year = this.activeDate.getFullYear(),\n      month = this.activeDate.getMonth(),\n      firstDayOfMonth = new Date(this.activeDate);\n\n    firstDayOfMonth.setFullYear(year, month, 1);\n\n    var difference = this.startingDay - firstDayOfMonth.getDay(),\n      numDisplayedFromPreviousMonth = difference > 0 ?\n        7 - difference : - difference,\n      firstDate = new Date(firstDayOfMonth);\n\n    if (numDisplayedFromPreviousMonth > 0) {\n      firstDate.setDate(-numDisplayedFromPreviousMonth + 1);\n    }\n\n    // 42 is the number of days on a six-week calendar\n    var days = this.getDates(firstDate, 42);\n    for (var i = 0; i < 42; i ++) {\n      days[i] = angular.extend(this.createDateObject(days[i], this.formatDay), {\n        secondary: days[i].getMonth() !== month,\n        uid: scope.uniqueId + '-' + i\n      });\n    }\n\n    scope.labels = new Array(7);\n    for (var j = 0; j < 7; j++) {\n      scope.labels[j] = {\n        abbr: dateFilter(days[j].date, this.formatDayHeader),\n        full: dateFilter(days[j].date, 'EEEE')\n      };\n    }\n\n    scope.title = dateFilter(this.activeDate, this.formatDayTitle);\n    scope.rows = this.split(days, 7);\n\n    if (scope.showWeeks) {\n      scope.weekNumbers = [];\n      var thursdayIndex = (4 + 7 - this.startingDay) % 7,\n          numWeeks = scope.rows.length;\n      for (var curWeek = 0; curWeek < numWeeks; curWeek++) {\n        scope.weekNumbers.push(\n          getISO8601WeekNumber(scope.rows[curWeek][thursdayIndex].date));\n      }\n    }\n  };\n\n  this.compare = function(date1, date2) {\n    var _date1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate());\n    var _date2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());\n    _date1.setFullYear(date1.getFullYear());\n    _date2.setFullYear(date2.getFullYear());\n    return _date1 - _date2;\n  };\n\n  function getISO8601WeekNumber(date) {\n    var checkDate = new Date(date);\n    checkDate.setDate(checkDate.getDate() + 4 - (checkDate.getDay() || 7)); // Thursday\n    var time = checkDate.getTime();\n    checkDate.setMonth(0); // Compare with Jan 1\n    checkDate.setDate(1);\n    return Math.floor(Math.round((time - checkDate) / 86400000) / 7) + 1;\n  }\n\n  this.handleKeyDown = function(key, evt) {\n    var date = this.activeDate.getDate();\n\n    if (key === 'left') {\n      date = date - 1;\n    } else if (key === 'up') {\n      date = date - 7;\n    } else if (key === 'right') {\n      date = date + 1;\n    } else if (key === 'down') {\n      date = date + 7;\n    } else if (key === 'pageup' || key === 'pagedown') {\n      var month = this.activeDate.getMonth() + (key === 'pageup' ? - 1 : 1);\n      this.activeDate.setMonth(month, 1);\n      date = Math.min(getDaysInMonth(this.activeDate.getFullYear(), this.activeDate.getMonth()), date);\n    } else if (key === 'home') {\n      date = 1;\n    } else if (key === 'end') {\n      date = getDaysInMonth(this.activeDate.getFullYear(), this.activeDate.getMonth());\n    }\n    this.activeDate.setDate(date);\n  };\n}])\n\n.controller('UibMonthpickerController', ['$scope', '$element', 'dateFilter', function(scope, $element, dateFilter) {\n  this.step = { years: 1 };\n  this.element = $element;\n\n  this.init = function(ctrl) {\n    angular.extend(ctrl, this);\n    ctrl.refreshView();\n  };\n\n  this._refreshView = function() {\n    var months = new Array(12),\n        year = this.activeDate.getFullYear(),\n        date;\n\n    for (var i = 0; i < 12; i++) {\n      date = new Date(this.activeDate);\n      date.setFullYear(year, i, 1);\n      months[i] = angular.extend(this.createDateObject(date, this.formatMonth), {\n        uid: scope.uniqueId + '-' + i\n      });\n    }\n\n    scope.title = dateFilter(this.activeDate, this.formatMonthTitle);\n    scope.rows = this.split(months, this.monthColumns);\n    scope.yearHeaderColspan = this.monthColumns > 3 ? this.monthColumns - 2 : 1;\n  };\n\n  this.compare = function(date1, date2) {\n    var _date1 = new Date(date1.getFullYear(), date1.getMonth());\n    var _date2 = new Date(date2.getFullYear(), date2.getMonth());\n    _date1.setFullYear(date1.getFullYear());\n    _date2.setFullYear(date2.getFullYear());\n    return _date1 - _date2;\n  };\n\n  this.handleKeyDown = function(key, evt) {\n    var date = this.activeDate.getMonth();\n\n    if (key === 'left') {\n      date = date - 1;\n    } else if (key === 'up') {\n      date = date - this.monthColumns;\n    } else if (key === 'right') {\n      date = date + 1;\n    } else if (key === 'down') {\n      date = date + this.monthColumns;\n    } else if (key === 'pageup' || key === 'pagedown') {\n      var year = this.activeDate.getFullYear() + (key === 'pageup' ? - 1 : 1);\n      this.activeDate.setFullYear(year);\n    } else if (key === 'home') {\n      date = 0;\n    } else if (key === 'end') {\n      date = 11;\n    }\n    this.activeDate.setMonth(date);\n  };\n}])\n\n.controller('UibYearpickerController', ['$scope', '$element', 'dateFilter', function(scope, $element, dateFilter) {\n  var columns, range;\n  this.element = $element;\n\n  function getStartingYear(year) {\n    return parseInt((year - 1) / range, 10) * range + 1;\n  }\n\n  this.yearpickerInit = function() {\n    columns = this.yearColumns;\n    range = this.yearRows * columns;\n    this.step = { years: range };\n  };\n\n  this._refreshView = function() {\n    var years = new Array(range), date;\n\n    for (var i = 0, start = getStartingYear(this.activeDate.getFullYear()); i < range; i++) {\n      date = new Date(this.activeDate);\n      date.setFullYear(start + i, 0, 1);\n      years[i] = angular.extend(this.createDateObject(date, this.formatYear), {\n        uid: scope.uniqueId + '-' + i\n      });\n    }\n\n    scope.title = [years[0].label, years[range - 1].label].join(' - ');\n    scope.rows = this.split(years, columns);\n    scope.columns = columns;\n  };\n\n  this.compare = function(date1, date2) {\n    return date1.getFullYear() - date2.getFullYear();\n  };\n\n  this.handleKeyDown = function(key, evt) {\n    var date = this.activeDate.getFullYear();\n\n    if (key === 'left') {\n      date = date - 1;\n    } else if (key === 'up') {\n      date = date - columns;\n    } else if (key === 'right') {\n      date = date + 1;\n    } else if (key === 'down') {\n      date = date + columns;\n    } else if (key === 'pageup' || key === 'pagedown') {\n      date += (key === 'pageup' ? - 1 : 1) * range;\n    } else if (key === 'home') {\n      date = getStartingYear(this.activeDate.getFullYear());\n    } else if (key === 'end') {\n      date = getStartingYear(this.activeDate.getFullYear()) + range - 1;\n    }\n    this.activeDate.setFullYear(date);\n  };\n}])\n\n.directive('uibDatepicker', function() {\n  return {\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/datepicker/datepicker.html';\n    },\n    scope: {\n      datepickerOptions: '=?'\n    },\n    require: ['uibDatepicker', '^ngModel'],\n    restrict: 'A',\n    controller: 'UibDatepickerController',\n    controllerAs: 'datepicker',\n    link: function(scope, element, attrs, ctrls) {\n      var datepickerCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      datepickerCtrl.init(ngModelCtrl);\n    }\n  };\n})\n\n.directive('uibDaypicker', function() {\n  return {\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/datepicker/day.html';\n    },\n    require: ['^uibDatepicker', 'uibDaypicker'],\n    restrict: 'A',\n    controller: 'UibDaypickerController',\n    link: function(scope, element, attrs, ctrls) {\n      var datepickerCtrl = ctrls[0],\n        daypickerCtrl = ctrls[1];\n\n      daypickerCtrl.init(datepickerCtrl);\n    }\n  };\n})\n\n.directive('uibMonthpicker', function() {\n  return {\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/datepicker/month.html';\n    },\n    require: ['^uibDatepicker', 'uibMonthpicker'],\n    restrict: 'A',\n    controller: 'UibMonthpickerController',\n    link: function(scope, element, attrs, ctrls) {\n      var datepickerCtrl = ctrls[0],\n        monthpickerCtrl = ctrls[1];\n\n      monthpickerCtrl.init(datepickerCtrl);\n    }\n  };\n})\n\n.directive('uibYearpicker', function() {\n  return {\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/datepicker/year.html';\n    },\n    require: ['^uibDatepicker', 'uibYearpicker'],\n    restrict: 'A',\n    controller: 'UibYearpickerController',\n    link: function(scope, element, attrs, ctrls) {\n      var ctrl = ctrls[0];\n      angular.extend(ctrl, ctrls[1]);\n      ctrl.yearpickerInit();\n\n      ctrl.refreshView();\n    }\n  };\n});\n\nangular.module('ui.bootstrap.position', [])\n\n/**\n * A set of utility methods for working with the DOM.\n * It is meant to be used where we need to absolute-position elements in\n * relation to another element (this is the case for tooltips, popovers,\n * typeahead suggestions etc.).\n */\n  .factory('$uibPosition', ['$document', '$window', function($document, $window) {\n    /**\n     * Used by scrollbarWidth() function to cache scrollbar's width.\n     * Do not access this variable directly, use scrollbarWidth() instead.\n     */\n    var SCROLLBAR_WIDTH;\n    /**\n     * scrollbar on body and html element in IE and Edge overlay\n     * content and should be considered 0 width.\n     */\n    var BODY_SCROLLBAR_WIDTH;\n    var OVERFLOW_REGEX = {\n      normal: /(auto|scroll)/,\n      hidden: /(auto|scroll|hidden)/\n    };\n    var PLACEMENT_REGEX = {\n      auto: /\\s?auto?\\s?/i,\n      primary: /^(top|bottom|left|right)$/,\n      secondary: /^(top|bottom|left|right|center)$/,\n      vertical: /^(top|bottom)$/\n    };\n    var BODY_REGEX = /(HTML|BODY)/;\n\n    return {\n\n      /**\n       * Provides a raw DOM element from a jQuery/jQLite element.\n       *\n       * @param {element} elem - The element to convert.\n       *\n       * @returns {element} A HTML element.\n       */\n      getRawNode: function(elem) {\n        return elem.nodeName ? elem : elem[0] || elem;\n      },\n\n      /**\n       * Provides a parsed number for a style property.  Strips\n       * units and casts invalid numbers to 0.\n       *\n       * @param {string} value - The style value to parse.\n       *\n       * @returns {number} A valid number.\n       */\n      parseStyle: function(value) {\n        value = parseFloat(value);\n        return isFinite(value) ? value : 0;\n      },\n\n      /**\n       * Provides the closest positioned ancestor.\n       *\n       * @param {element} element - The element to get the offest parent for.\n       *\n       * @returns {element} The closest positioned ancestor.\n       */\n      offsetParent: function(elem) {\n        elem = this.getRawNode(elem);\n\n        var offsetParent = elem.offsetParent || $document[0].documentElement;\n\n        function isStaticPositioned(el) {\n          return ($window.getComputedStyle(el).position || 'static') === 'static';\n        }\n\n        while (offsetParent && offsetParent !== $document[0].documentElement && isStaticPositioned(offsetParent)) {\n          offsetParent = offsetParent.offsetParent;\n        }\n\n        return offsetParent || $document[0].documentElement;\n      },\n\n      /**\n       * Provides the scrollbar width, concept from TWBS measureScrollbar()\n       * function in https://github.com/twbs/bootstrap/blob/master/js/modal.js\n       * In IE and Edge, scollbar on body and html element overlay and should\n       * return a width of 0.\n       *\n       * @returns {number} The width of the browser scollbar.\n       */\n      scrollbarWidth: function(isBody) {\n        if (isBody) {\n          if (angular.isUndefined(BODY_SCROLLBAR_WIDTH)) {\n            var bodyElem = $document.find('body');\n            bodyElem.addClass('uib-position-body-scrollbar-measure');\n            BODY_SCROLLBAR_WIDTH = $window.innerWidth - bodyElem[0].clientWidth;\n            BODY_SCROLLBAR_WIDTH = isFinite(BODY_SCROLLBAR_WIDTH) ? BODY_SCROLLBAR_WIDTH : 0;\n            bodyElem.removeClass('uib-position-body-scrollbar-measure');\n          }\n          return BODY_SCROLLBAR_WIDTH;\n        }\n\n        if (angular.isUndefined(SCROLLBAR_WIDTH)) {\n          var scrollElem = angular.element('<div class=\"uib-position-scrollbar-measure\"></div>');\n          $document.find('body').append(scrollElem);\n          SCROLLBAR_WIDTH = scrollElem[0].offsetWidth - scrollElem[0].clientWidth;\n          SCROLLBAR_WIDTH = isFinite(SCROLLBAR_WIDTH) ? SCROLLBAR_WIDTH : 0;\n          scrollElem.remove();\n        }\n\n        return SCROLLBAR_WIDTH;\n      },\n\n      /**\n       * Provides the padding required on an element to replace the scrollbar.\n       *\n       * @returns {object} An object with the following properties:\n       *   <ul>\n       *     <li>**scrollbarWidth**: the width of the scrollbar</li>\n       *     <li>**widthOverflow**: whether the the width is overflowing</li>\n       *     <li>**right**: the amount of right padding on the element needed to replace the scrollbar</li>\n       *     <li>**rightOriginal**: the amount of right padding currently on the element</li>\n       *     <li>**heightOverflow**: whether the the height is overflowing</li>\n       *     <li>**bottom**: the amount of bottom padding on the element needed to replace the scrollbar</li>\n       *     <li>**bottomOriginal**: the amount of bottom padding currently on the element</li>\n       *   </ul>\n       */\n      scrollbarPadding: function(elem) {\n        elem = this.getRawNode(elem);\n\n        var elemStyle = $window.getComputedStyle(elem);\n        var paddingRight = this.parseStyle(elemStyle.paddingRight);\n        var paddingBottom = this.parseStyle(elemStyle.paddingBottom);\n        var scrollParent = this.scrollParent(elem, false, true);\n        var scrollbarWidth = this.scrollbarWidth(BODY_REGEX.test(scrollParent.tagName));\n\n        return {\n          scrollbarWidth: scrollbarWidth,\n          widthOverflow: scrollParent.scrollWidth > scrollParent.clientWidth,\n          right: paddingRight + scrollbarWidth,\n          originalRight: paddingRight,\n          heightOverflow: scrollParent.scrollHeight > scrollParent.clientHeight,\n          bottom: paddingBottom + scrollbarWidth,\n          originalBottom: paddingBottom\n         };\n      },\n\n      /**\n       * Checks to see if the element is scrollable.\n       *\n       * @param {element} elem - The element to check.\n       * @param {boolean=} [includeHidden=false] - Should scroll style of 'hidden' be considered,\n       *   default is false.\n       *\n       * @returns {boolean} Whether the element is scrollable.\n       */\n      isScrollable: function(elem, includeHidden) {\n        elem = this.getRawNode(elem);\n\n        var overflowRegex = includeHidden ? OVERFLOW_REGEX.hidden : OVERFLOW_REGEX.normal;\n        var elemStyle = $window.getComputedStyle(elem);\n        return overflowRegex.test(elemStyle.overflow + elemStyle.overflowY + elemStyle.overflowX);\n      },\n\n      /**\n       * Provides the closest scrollable ancestor.\n       * A port of the jQuery UI scrollParent method:\n       * https://github.com/jquery/jquery-ui/blob/master/ui/scroll-parent.js\n       *\n       * @param {element} elem - The element to find the scroll parent of.\n       * @param {boolean=} [includeHidden=false] - Should scroll style of 'hidden' be considered,\n       *   default is false.\n       * @param {boolean=} [includeSelf=false] - Should the element being passed be\n       * included in the scrollable llokup.\n       *\n       * @returns {element} A HTML element.\n       */\n      scrollParent: function(elem, includeHidden, includeSelf) {\n        elem = this.getRawNode(elem);\n\n        var overflowRegex = includeHidden ? OVERFLOW_REGEX.hidden : OVERFLOW_REGEX.normal;\n        var documentEl = $document[0].documentElement;\n        var elemStyle = $window.getComputedStyle(elem);\n        if (includeSelf && overflowRegex.test(elemStyle.overflow + elemStyle.overflowY + elemStyle.overflowX)) {\n          return elem;\n        }\n        var excludeStatic = elemStyle.position === 'absolute';\n        var scrollParent = elem.parentElement || documentEl;\n\n        if (scrollParent === documentEl || elemStyle.position === 'fixed') {\n          return documentEl;\n        }\n\n        while (scrollParent.parentElement && scrollParent !== documentEl) {\n          var spStyle = $window.getComputedStyle(scrollParent);\n          if (excludeStatic && spStyle.position !== 'static') {\n            excludeStatic = false;\n          }\n\n          if (!excludeStatic && overflowRegex.test(spStyle.overflow + spStyle.overflowY + spStyle.overflowX)) {\n            break;\n          }\n          scrollParent = scrollParent.parentElement;\n        }\n\n        return scrollParent;\n      },\n\n      /**\n       * Provides read-only equivalent of jQuery's position function:\n       * http://api.jquery.com/position/ - distance to closest positioned\n       * ancestor.  Does not account for margins by default like jQuery position.\n       *\n       * @param {element} elem - The element to caclulate the position on.\n       * @param {boolean=} [includeMargins=false] - Should margins be accounted\n       * for, default is false.\n       *\n       * @returns {object} An object with the following properties:\n       *   <ul>\n       *     <li>**width**: the width of the element</li>\n       *     <li>**height**: the height of the element</li>\n       *     <li>**top**: distance to top edge of offset parent</li>\n       *     <li>**left**: distance to left edge of offset parent</li>\n       *   </ul>\n       */\n      position: function(elem, includeMagins) {\n        elem = this.getRawNode(elem);\n\n        var elemOffset = this.offset(elem);\n        if (includeMagins) {\n          var elemStyle = $window.getComputedStyle(elem);\n          elemOffset.top -= this.parseStyle(elemStyle.marginTop);\n          elemOffset.left -= this.parseStyle(elemStyle.marginLeft);\n        }\n        var parent = this.offsetParent(elem);\n        var parentOffset = {top: 0, left: 0};\n\n        if (parent !== $document[0].documentElement) {\n          parentOffset = this.offset(parent);\n          parentOffset.top += parent.clientTop - parent.scrollTop;\n          parentOffset.left += parent.clientLeft - parent.scrollLeft;\n        }\n\n        return {\n          width: Math.round(angular.isNumber(elemOffset.width) ? elemOffset.width : elem.offsetWidth),\n          height: Math.round(angular.isNumber(elemOffset.height) ? elemOffset.height : elem.offsetHeight),\n          top: Math.round(elemOffset.top - parentOffset.top),\n          left: Math.round(elemOffset.left - parentOffset.left)\n        };\n      },\n\n      /**\n       * Provides read-only equivalent of jQuery's offset function:\n       * http://api.jquery.com/offset/ - distance to viewport.  Does\n       * not account for borders, margins, or padding on the body\n       * element.\n       *\n       * @param {element} elem - The element to calculate the offset on.\n       *\n       * @returns {object} An object with the following properties:\n       *   <ul>\n       *     <li>**width**: the width of the element</li>\n       *     <li>**height**: the height of the element</li>\n       *     <li>**top**: distance to top edge of viewport</li>\n       *     <li>**right**: distance to bottom edge of viewport</li>\n       *   </ul>\n       */\n      offset: function(elem) {\n        elem = this.getRawNode(elem);\n\n        var elemBCR = elem.getBoundingClientRect();\n        return {\n          width: Math.round(angular.isNumber(elemBCR.width) ? elemBCR.width : elem.offsetWidth),\n          height: Math.round(angular.isNumber(elemBCR.height) ? elemBCR.height : elem.offsetHeight),\n          top: Math.round(elemBCR.top + ($window.pageYOffset || $document[0].documentElement.scrollTop)),\n          left: Math.round(elemBCR.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft))\n        };\n      },\n\n      /**\n       * Provides offset distance to the closest scrollable ancestor\n       * or viewport.  Accounts for border and scrollbar width.\n       *\n       * Right and bottom dimensions represent the distance to the\n       * respective edge of the viewport element.  If the element\n       * edge extends beyond the viewport, a negative value will be\n       * reported.\n       *\n       * @param {element} elem - The element to get the viewport offset for.\n       * @param {boolean=} [useDocument=false] - Should the viewport be the document element instead\n       * of the first scrollable element, default is false.\n       * @param {boolean=} [includePadding=true] - Should the padding on the offset parent element\n       * be accounted for, default is true.\n       *\n       * @returns {object} An object with the following properties:\n       *   <ul>\n       *     <li>**top**: distance to the top content edge of viewport element</li>\n       *     <li>**bottom**: distance to the bottom content edge of viewport element</li>\n       *     <li>**left**: distance to the left content edge of viewport element</li>\n       *     <li>**right**: distance to the right content edge of viewport element</li>\n       *   </ul>\n       */\n      viewportOffset: function(elem, useDocument, includePadding) {\n        elem = this.getRawNode(elem);\n        includePadding = includePadding !== false ? true : false;\n\n        var elemBCR = elem.getBoundingClientRect();\n        var offsetBCR = {top: 0, left: 0, bottom: 0, right: 0};\n\n        var offsetParent = useDocument ? $document[0].documentElement : this.scrollParent(elem);\n        var offsetParentBCR = offsetParent.getBoundingClientRect();\n\n        offsetBCR.top = offsetParentBCR.top + offsetParent.clientTop;\n        offsetBCR.left = offsetParentBCR.left + offsetParent.clientLeft;\n        if (offsetParent === $document[0].documentElement) {\n          offsetBCR.top += $window.pageYOffset;\n          offsetBCR.left += $window.pageXOffset;\n        }\n        offsetBCR.bottom = offsetBCR.top + offsetParent.clientHeight;\n        offsetBCR.right = offsetBCR.left + offsetParent.clientWidth;\n\n        if (includePadding) {\n          var offsetParentStyle = $window.getComputedStyle(offsetParent);\n          offsetBCR.top += this.parseStyle(offsetParentStyle.paddingTop);\n          offsetBCR.bottom -= this.parseStyle(offsetParentStyle.paddingBottom);\n          offsetBCR.left += this.parseStyle(offsetParentStyle.paddingLeft);\n          offsetBCR.right -= this.parseStyle(offsetParentStyle.paddingRight);\n        }\n\n        return {\n          top: Math.round(elemBCR.top - offsetBCR.top),\n          bottom: Math.round(offsetBCR.bottom - elemBCR.bottom),\n          left: Math.round(elemBCR.left - offsetBCR.left),\n          right: Math.round(offsetBCR.right - elemBCR.right)\n        };\n      },\n\n      /**\n       * Provides an array of placement values parsed from a placement string.\n       * Along with the 'auto' indicator, supported placement strings are:\n       *   <ul>\n       *     <li>top: element on top, horizontally centered on host element.</li>\n       *     <li>top-left: element on top, left edge aligned with host element left edge.</li>\n       *     <li>top-right: element on top, lerightft edge aligned with host element right edge.</li>\n       *     <li>bottom: element on bottom, horizontally centered on host element.</li>\n       *     <li>bottom-left: element on bottom, left edge aligned with host element left edge.</li>\n       *     <li>bottom-right: element on bottom, right edge aligned with host element right edge.</li>\n       *     <li>left: element on left, vertically centered on host element.</li>\n       *     <li>left-top: element on left, top edge aligned with host element top edge.</li>\n       *     <li>left-bottom: element on left, bottom edge aligned with host element bottom edge.</li>\n       *     <li>right: element on right, vertically centered on host element.</li>\n       *     <li>right-top: element on right, top edge aligned with host element top edge.</li>\n       *     <li>right-bottom: element on right, bottom edge aligned with host element bottom edge.</li>\n       *   </ul>\n       * A placement string with an 'auto' indicator is expected to be\n       * space separated from the placement, i.e: 'auto bottom-left'  If\n       * the primary and secondary placement values do not match 'top,\n       * bottom, left, right' then 'top' will be the primary placement and\n       * 'center' will be the secondary placement.  If 'auto' is passed, true\n       * will be returned as the 3rd value of the array.\n       *\n       * @param {string} placement - The placement string to parse.\n       *\n       * @returns {array} An array with the following values\n       * <ul>\n       *   <li>**[0]**: The primary placement.</li>\n       *   <li>**[1]**: The secondary placement.</li>\n       *   <li>**[2]**: If auto is passed: true, else undefined.</li>\n       * </ul>\n       */\n      parsePlacement: function(placement) {\n        var autoPlace = PLACEMENT_REGEX.auto.test(placement);\n        if (autoPlace) {\n          placement = placement.replace(PLACEMENT_REGEX.auto, '');\n        }\n\n        placement = placement.split('-');\n\n        placement[0] = placement[0] || 'top';\n        if (!PLACEMENT_REGEX.primary.test(placement[0])) {\n          placement[0] = 'top';\n        }\n\n        placement[1] = placement[1] || 'center';\n        if (!PLACEMENT_REGEX.secondary.test(placement[1])) {\n          placement[1] = 'center';\n        }\n\n        if (autoPlace) {\n          placement[2] = true;\n        } else {\n          placement[2] = false;\n        }\n\n        return placement;\n      },\n\n      /**\n       * Provides coordinates for an element to be positioned relative to\n       * another element.  Passing 'auto' as part of the placement parameter\n       * will enable smart placement - where the element fits. i.e:\n       * 'auto left-top' will check to see if there is enough space to the left\n       * of the hostElem to fit the targetElem, if not place right (same for secondary\n       * top placement).  Available space is calculated using the viewportOffset\n       * function.\n       *\n       * @param {element} hostElem - The element to position against.\n       * @param {element} targetElem - The element to position.\n       * @param {string=} [placement=top] - The placement for the targetElem,\n       *   default is 'top'. 'center' is assumed as secondary placement for\n       *   'top', 'left', 'right', and 'bottom' placements.  Available placements are:\n       *   <ul>\n       *     <li>top</li>\n       *     <li>top-right</li>\n       *     <li>top-left</li>\n       *     <li>bottom</li>\n       *     <li>bottom-left</li>\n       *     <li>bottom-right</li>\n       *     <li>left</li>\n       *     <li>left-top</li>\n       *     <li>left-bottom</li>\n       *     <li>right</li>\n       *     <li>right-top</li>\n       *     <li>right-bottom</li>\n       *   </ul>\n       * @param {boolean=} [appendToBody=false] - Should the top and left values returned\n       *   be calculated from the body element, default is false.\n       *\n       * @returns {object} An object with the following properties:\n       *   <ul>\n       *     <li>**top**: Value for targetElem top.</li>\n       *     <li>**left**: Value for targetElem left.</li>\n       *     <li>**placement**: The resolved placement.</li>\n       *   </ul>\n       */\n      positionElements: function(hostElem, targetElem, placement, appendToBody) {\n        hostElem = this.getRawNode(hostElem);\n        targetElem = this.getRawNode(targetElem);\n\n        // need to read from prop to support tests.\n        var targetWidth = angular.isDefined(targetElem.offsetWidth) ? targetElem.offsetWidth : targetElem.prop('offsetWidth');\n        var targetHeight = angular.isDefined(targetElem.offsetHeight) ? targetElem.offsetHeight : targetElem.prop('offsetHeight');\n\n        placement = this.parsePlacement(placement);\n\n        var hostElemPos = appendToBody ? this.offset(hostElem) : this.position(hostElem);\n        var targetElemPos = {top: 0, left: 0, placement: ''};\n\n        if (placement[2]) {\n          var viewportOffset = this.viewportOffset(hostElem, appendToBody);\n\n          var targetElemStyle = $window.getComputedStyle(targetElem);\n          var adjustedSize = {\n            width: targetWidth + Math.round(Math.abs(this.parseStyle(targetElemStyle.marginLeft) + this.parseStyle(targetElemStyle.marginRight))),\n            height: targetHeight + Math.round(Math.abs(this.parseStyle(targetElemStyle.marginTop) + this.parseStyle(targetElemStyle.marginBottom)))\n          };\n\n          placement[0] = placement[0] === 'top' && adjustedSize.height > viewportOffset.top && adjustedSize.height <= viewportOffset.bottom ? 'bottom' :\n                         placement[0] === 'bottom' && adjustedSize.height > viewportOffset.bottom && adjustedSize.height <= viewportOffset.top ? 'top' :\n                         placement[0] === 'left' && adjustedSize.width > viewportOffset.left && adjustedSize.width <= viewportOffset.right ? 'right' :\n                         placement[0] === 'right' && adjustedSize.width > viewportOffset.right && adjustedSize.width <= viewportOffset.left ? 'left' :\n                         placement[0];\n\n          placement[1] = placement[1] === 'top' && adjustedSize.height - hostElemPos.height > viewportOffset.bottom && adjustedSize.height - hostElemPos.height <= viewportOffset.top ? 'bottom' :\n                         placement[1] === 'bottom' && adjustedSize.height - hostElemPos.height > viewportOffset.top && adjustedSize.height - hostElemPos.height <= viewportOffset.bottom ? 'top' :\n                         placement[1] === 'left' && adjustedSize.width - hostElemPos.width > viewportOffset.right && adjustedSize.width - hostElemPos.width <= viewportOffset.left ? 'right' :\n                         placement[1] === 'right' && adjustedSize.width - hostElemPos.width > viewportOffset.left && adjustedSize.width - hostElemPos.width <= viewportOffset.right ? 'left' :\n                         placement[1];\n\n          if (placement[1] === 'center') {\n            if (PLACEMENT_REGEX.vertical.test(placement[0])) {\n              var xOverflow = hostElemPos.width / 2 - targetWidth / 2;\n              if (viewportOffset.left + xOverflow < 0 && adjustedSize.width - hostElemPos.width <= viewportOffset.right) {\n                placement[1] = 'left';\n              } else if (viewportOffset.right + xOverflow < 0 && adjustedSize.width - hostElemPos.width <= viewportOffset.left) {\n                placement[1] = 'right';\n              }\n            } else {\n              var yOverflow = hostElemPos.height / 2 - adjustedSize.height / 2;\n              if (viewportOffset.top + yOverflow < 0 && adjustedSize.height - hostElemPos.height <= viewportOffset.bottom) {\n                placement[1] = 'top';\n              } else if (viewportOffset.bottom + yOverflow < 0 && adjustedSize.height - hostElemPos.height <= viewportOffset.top) {\n                placement[1] = 'bottom';\n              }\n            }\n          }\n        }\n\n        switch (placement[0]) {\n          case 'top':\n            targetElemPos.top = hostElemPos.top - targetHeight;\n            break;\n          case 'bottom':\n            targetElemPos.top = hostElemPos.top + hostElemPos.height;\n            break;\n          case 'left':\n            targetElemPos.left = hostElemPos.left - targetWidth;\n            break;\n          case 'right':\n            targetElemPos.left = hostElemPos.left + hostElemPos.width;\n            break;\n        }\n\n        switch (placement[1]) {\n          case 'top':\n            targetElemPos.top = hostElemPos.top;\n            break;\n          case 'bottom':\n            targetElemPos.top = hostElemPos.top + hostElemPos.height - targetHeight;\n            break;\n          case 'left':\n            targetElemPos.left = hostElemPos.left;\n            break;\n          case 'right':\n            targetElemPos.left = hostElemPos.left + hostElemPos.width - targetWidth;\n            break;\n          case 'center':\n            if (PLACEMENT_REGEX.vertical.test(placement[0])) {\n              targetElemPos.left = hostElemPos.left + hostElemPos.width / 2 - targetWidth / 2;\n            } else {\n              targetElemPos.top = hostElemPos.top + hostElemPos.height / 2 - targetHeight / 2;\n            }\n            break;\n        }\n\n        targetElemPos.top = Math.round(targetElemPos.top);\n        targetElemPos.left = Math.round(targetElemPos.left);\n        targetElemPos.placement = placement[1] === 'center' ? placement[0] : placement[0] + '-' + placement[1];\n\n        return targetElemPos;\n      },\n\n      /**\n       * Provides a way to adjust the top positioning after first\n       * render to correctly align element to top after content\n       * rendering causes resized element height\n       *\n       * @param {array} placementClasses - The array of strings of classes\n       * element should have.\n       * @param {object} containerPosition - The object with container\n       * position information\n       * @param {number} initialHeight - The initial height for the elem.\n       * @param {number} currentHeight - The current height for the elem.\n       */\n      adjustTop: function(placementClasses, containerPosition, initialHeight, currentHeight) {\n        if (placementClasses.indexOf('top') !== -1 && initialHeight !== currentHeight) {\n          return {\n            top: containerPosition.top - currentHeight + 'px'\n          };\n        }\n      },\n\n      /**\n       * Provides a way for positioning tooltip & dropdown\n       * arrows when using placement options beyond the standard\n       * left, right, top, or bottom.\n       *\n       * @param {element} elem - The tooltip/dropdown element.\n       * @param {string} placement - The placement for the elem.\n       */\n      positionArrow: function(elem, placement) {\n        elem = this.getRawNode(elem);\n\n        var innerElem = elem.querySelector('.tooltip-inner, .popover-inner');\n        if (!innerElem) {\n          return;\n        }\n\n        var isTooltip = angular.element(innerElem).hasClass('tooltip-inner');\n\n        var arrowElem = isTooltip ? elem.querySelector('.tooltip-arrow') : elem.querySelector('.arrow');\n        if (!arrowElem) {\n          return;\n        }\n\n        var arrowCss = {\n          top: '',\n          bottom: '',\n          left: '',\n          right: ''\n        };\n\n        placement = this.parsePlacement(placement);\n        if (placement[1] === 'center') {\n          // no adjustment necessary - just reset styles\n          angular.element(arrowElem).css(arrowCss);\n          return;\n        }\n\n        var borderProp = 'border-' + placement[0] + '-width';\n        var borderWidth = $window.getComputedStyle(arrowElem)[borderProp];\n\n        var borderRadiusProp = 'border-';\n        if (PLACEMENT_REGEX.vertical.test(placement[0])) {\n          borderRadiusProp += placement[0] + '-' + placement[1];\n        } else {\n          borderRadiusProp += placement[1] + '-' + placement[0];\n        }\n        borderRadiusProp += '-radius';\n        var borderRadius = $window.getComputedStyle(isTooltip ? innerElem : elem)[borderRadiusProp];\n\n        switch (placement[0]) {\n          case 'top':\n            arrowCss.bottom = isTooltip ? '0' : '-' + borderWidth;\n            break;\n          case 'bottom':\n            arrowCss.top = isTooltip ? '0' : '-' + borderWidth;\n            break;\n          case 'left':\n            arrowCss.right = isTooltip ? '0' : '-' + borderWidth;\n            break;\n          case 'right':\n            arrowCss.left = isTooltip ? '0' : '-' + borderWidth;\n            break;\n        }\n\n        arrowCss[placement[1]] = borderRadius;\n\n        angular.element(arrowElem).css(arrowCss);\n      }\n    };\n  }]);\n\nangular.module('ui.bootstrap.datepickerPopup', ['ui.bootstrap.datepicker', 'ui.bootstrap.position'])\n\n.value('$datepickerPopupLiteralWarning', true)\n\n.constant('uibDatepickerPopupConfig', {\n  altInputFormats: [],\n  appendToBody: false,\n  clearText: 'Clear',\n  closeOnDateSelection: true,\n  closeText: 'Done',\n  currentText: 'Today',\n  datepickerPopup: 'yyyy-MM-dd',\n  datepickerPopupTemplateUrl: 'uib/template/datepickerPopup/popup.html',\n  datepickerTemplateUrl: 'uib/template/datepicker/datepicker.html',\n  html5Types: {\n    date: 'yyyy-MM-dd',\n    'datetime-local': 'yyyy-MM-ddTHH:mm:ss.sss',\n    'month': 'yyyy-MM'\n  },\n  onOpenFocus: true,\n  showButtonBar: true,\n  placement: 'auto bottom-left'\n})\n\n.controller('UibDatepickerPopupController', ['$scope', '$element', '$attrs', '$compile', '$log', '$parse', '$window', '$document', '$rootScope', '$uibPosition', 'dateFilter', 'uibDateParser', 'uibDatepickerPopupConfig', '$timeout', 'uibDatepickerConfig', '$datepickerPopupLiteralWarning',\nfunction($scope, $element, $attrs, $compile, $log, $parse, $window, $document, $rootScope, $position, dateFilter, dateParser, datepickerPopupConfig, $timeout, datepickerConfig, $datepickerPopupLiteralWarning) {\n  var cache = {},\n    isHtml5DateInput = false;\n  var dateFormat, closeOnDateSelection, appendToBody, onOpenFocus,\n    datepickerPopupTemplateUrl, datepickerTemplateUrl, popupEl, datepickerEl, scrollParentEl,\n    ngModel, ngModelOptions, $popup, altInputFormats, watchListeners = [];\n\n  this.init = function(_ngModel_) {\n    ngModel = _ngModel_;\n    ngModelOptions = angular.isObject(_ngModel_.$options) ?\n      _ngModel_.$options :\n      {\n        timezone: null\n      };\n    closeOnDateSelection = angular.isDefined($attrs.closeOnDateSelection) ?\n      $scope.$parent.$eval($attrs.closeOnDateSelection) :\n      datepickerPopupConfig.closeOnDateSelection;\n    appendToBody = angular.isDefined($attrs.datepickerAppendToBody) ?\n      $scope.$parent.$eval($attrs.datepickerAppendToBody) :\n      datepickerPopupConfig.appendToBody;\n    onOpenFocus = angular.isDefined($attrs.onOpenFocus) ?\n      $scope.$parent.$eval($attrs.onOpenFocus) : datepickerPopupConfig.onOpenFocus;\n    datepickerPopupTemplateUrl = angular.isDefined($attrs.datepickerPopupTemplateUrl) ?\n      $attrs.datepickerPopupTemplateUrl :\n      datepickerPopupConfig.datepickerPopupTemplateUrl;\n    datepickerTemplateUrl = angular.isDefined($attrs.datepickerTemplateUrl) ?\n      $attrs.datepickerTemplateUrl : datepickerPopupConfig.datepickerTemplateUrl;\n    altInputFormats = angular.isDefined($attrs.altInputFormats) ?\n      $scope.$parent.$eval($attrs.altInputFormats) :\n      datepickerPopupConfig.altInputFormats;\n\n    $scope.showButtonBar = angular.isDefined($attrs.showButtonBar) ?\n      $scope.$parent.$eval($attrs.showButtonBar) :\n      datepickerPopupConfig.showButtonBar;\n\n    if (datepickerPopupConfig.html5Types[$attrs.type]) {\n      dateFormat = datepickerPopupConfig.html5Types[$attrs.type];\n      isHtml5DateInput = true;\n    } else {\n      dateFormat = $attrs.uibDatepickerPopup || datepickerPopupConfig.datepickerPopup;\n      $attrs.$observe('uibDatepickerPopup', function(value, oldValue) {\n        var newDateFormat = value || datepickerPopupConfig.datepickerPopup;\n        // Invalidate the $modelValue to ensure that formatters re-run\n        // FIXME: Refactor when PR is merged: https://github.com/angular/angular.js/pull/10764\n        if (newDateFormat !== dateFormat) {\n          dateFormat = newDateFormat;\n          ngModel.$modelValue = null;\n\n          if (!dateFormat) {\n            throw new Error('uibDatepickerPopup must have a date format specified.');\n          }\n        }\n      });\n    }\n\n    if (!dateFormat) {\n      throw new Error('uibDatepickerPopup must have a date format specified.');\n    }\n\n    if (isHtml5DateInput && $attrs.uibDatepickerPopup) {\n      throw new Error('HTML5 date input types do not support custom formats.');\n    }\n\n    // popup element used to display calendar\n    popupEl = angular.element('<div uib-datepicker-popup-wrap><div uib-datepicker></div></div>');\n\n    popupEl.attr({\n      'ng-model': 'date',\n      'ng-change': 'dateSelection(date)',\n      'template-url': datepickerPopupTemplateUrl\n    });\n\n    // datepicker element\n    datepickerEl = angular.element(popupEl.children()[0]);\n    datepickerEl.attr('template-url', datepickerTemplateUrl);\n\n    if (!$scope.datepickerOptions) {\n      $scope.datepickerOptions = {};\n    }\n\n    if (isHtml5DateInput) {\n      if ($attrs.type === 'month') {\n        $scope.datepickerOptions.datepickerMode = 'month';\n        $scope.datepickerOptions.minMode = 'month';\n      }\n    }\n\n    datepickerEl.attr('datepicker-options', 'datepickerOptions');\n\n    if (!isHtml5DateInput) {\n      // Internal API to maintain the correct ng-invalid-[key] class\n      ngModel.$$parserName = 'date';\n      ngModel.$validators.date = validator;\n      ngModel.$parsers.unshift(parseDate);\n      ngModel.$formatters.push(function(value) {\n        if (ngModel.$isEmpty(value)) {\n          $scope.date = value;\n          return value;\n        }\n\n        if (angular.isNumber(value)) {\n          value = new Date(value);\n        }\n\n        $scope.date = dateParser.fromTimezone(value, ngModelOptions.timezone);\n\n        return dateParser.filter($scope.date, dateFormat);\n      });\n    } else {\n      ngModel.$formatters.push(function(value) {\n        $scope.date = dateParser.fromTimezone(value, ngModelOptions.timezone);\n        return value;\n      });\n    }\n\n    // Detect changes in the view from the text box\n    ngModel.$viewChangeListeners.push(function() {\n      $scope.date = parseDateString(ngModel.$viewValue);\n    });\n\n    $element.on('keydown', inputKeydownBind);\n\n    $popup = $compile(popupEl)($scope);\n    // Prevent jQuery cache memory leak (template is now redundant after linking)\n    popupEl.remove();\n\n    if (appendToBody) {\n      $document.find('body').append($popup);\n    } else {\n      $element.after($popup);\n    }\n\n    $scope.$on('$destroy', function() {\n      if ($scope.isOpen === true) {\n        if (!$rootScope.$$phase) {\n          $scope.$apply(function() {\n            $scope.isOpen = false;\n          });\n        }\n      }\n\n      $popup.remove();\n      $element.off('keydown', inputKeydownBind);\n      $document.off('click', documentClickBind);\n      if (scrollParentEl) {\n        scrollParentEl.off('scroll', positionPopup);\n      }\n      angular.element($window).off('resize', positionPopup);\n\n      //Clear all watch listeners on destroy\n      while (watchListeners.length) {\n        watchListeners.shift()();\n      }\n    });\n  };\n\n  $scope.getText = function(key) {\n    return $scope[key + 'Text'] || datepickerPopupConfig[key + 'Text'];\n  };\n\n  $scope.isDisabled = function(date) {\n    if (date === 'today') {\n      date = dateParser.fromTimezone(new Date(), ngModelOptions.timezone);\n    }\n\n    var dates = {};\n    angular.forEach(['minDate', 'maxDate'], function(key) {\n      if (!$scope.datepickerOptions[key]) {\n        dates[key] = null;\n      } else if (angular.isDate($scope.datepickerOptions[key])) {\n        dates[key] = new Date($scope.datepickerOptions[key]);\n      } else {\n        if ($datepickerPopupLiteralWarning) {\n          $log.warn('Literal date support has been deprecated, please switch to date object usage');\n        }\n\n        dates[key] = new Date(dateFilter($scope.datepickerOptions[key], 'medium'));\n      }\n    });\n\n    return $scope.datepickerOptions &&\n      dates.minDate && $scope.compare(date, dates.minDate) < 0 ||\n      dates.maxDate && $scope.compare(date, dates.maxDate) > 0;\n  };\n\n  $scope.compare = function(date1, date2) {\n    return new Date(date1.getFullYear(), date1.getMonth(), date1.getDate()) - new Date(date2.getFullYear(), date2.getMonth(), date2.getDate());\n  };\n\n  // Inner change\n  $scope.dateSelection = function(dt) {\n    $scope.date = dt;\n    var date = $scope.date ? dateParser.filter($scope.date, dateFormat) : null; // Setting to NULL is necessary for form validators to function\n    $element.val(date);\n    ngModel.$setViewValue(date);\n\n    if (closeOnDateSelection) {\n      $scope.isOpen = false;\n      $element[0].focus();\n    }\n  };\n\n  $scope.keydown = function(evt) {\n    if (evt.which === 27) {\n      evt.stopPropagation();\n      $scope.isOpen = false;\n      $element[0].focus();\n    }\n  };\n\n  $scope.select = function(date, evt) {\n    evt.stopPropagation();\n\n    if (date === 'today') {\n      var today = new Date();\n      if (angular.isDate($scope.date)) {\n        date = new Date($scope.date);\n        date.setFullYear(today.getFullYear(), today.getMonth(), today.getDate());\n      } else {\n        date = dateParser.fromTimezone(today, ngModelOptions.timezone);\n        date.setHours(0, 0, 0, 0);\n      }\n    }\n    $scope.dateSelection(date);\n  };\n\n  $scope.close = function(evt) {\n    evt.stopPropagation();\n\n    $scope.isOpen = false;\n    $element[0].focus();\n  };\n\n  $scope.disabled = angular.isDefined($attrs.disabled) || false;\n  if ($attrs.ngDisabled) {\n    watchListeners.push($scope.$parent.$watch($parse($attrs.ngDisabled), function(disabled) {\n      $scope.disabled = disabled;\n    }));\n  }\n\n  $scope.$watch('isOpen', function(value) {\n    if (value) {\n      if (!$scope.disabled) {\n        $timeout(function() {\n          positionPopup();\n\n          if (onOpenFocus) {\n            $scope.$broadcast('uib:datepicker.focus');\n          }\n\n          $document.on('click', documentClickBind);\n\n          var placement = $attrs.popupPlacement ? $attrs.popupPlacement : datepickerPopupConfig.placement;\n          if (appendToBody || $position.parsePlacement(placement)[2]) {\n            scrollParentEl = scrollParentEl || angular.element($position.scrollParent($element));\n            if (scrollParentEl) {\n              scrollParentEl.on('scroll', positionPopup);\n            }\n          } else {\n            scrollParentEl = null;\n          }\n\n          angular.element($window).on('resize', positionPopup);\n        }, 0, false);\n      } else {\n        $scope.isOpen = false;\n      }\n    } else {\n      $document.off('click', documentClickBind);\n      if (scrollParentEl) {\n        scrollParentEl.off('scroll', positionPopup);\n      }\n      angular.element($window).off('resize', positionPopup);\n    }\n  });\n\n  function cameltoDash(string) {\n    return string.replace(/([A-Z])/g, function($1) { return '-' + $1.toLowerCase(); });\n  }\n\n  function parseDateString(viewValue) {\n    var date = dateParser.parse(viewValue, dateFormat, $scope.date);\n    if (isNaN(date)) {\n      for (var i = 0; i < altInputFormats.length; i++) {\n        date = dateParser.parse(viewValue, altInputFormats[i], $scope.date);\n        if (!isNaN(date)) {\n          return date;\n        }\n      }\n    }\n    return date;\n  }\n\n  function parseDate(viewValue) {\n    if (angular.isNumber(viewValue)) {\n      // presumably timestamp to date object\n      viewValue = new Date(viewValue);\n    }\n\n    if (!viewValue) {\n      return null;\n    }\n\n    if (angular.isDate(viewValue) && !isNaN(viewValue)) {\n      return viewValue;\n    }\n\n    if (angular.isString(viewValue)) {\n      var date = parseDateString(viewValue);\n      if (!isNaN(date)) {\n        return dateParser.fromTimezone(date, ngModelOptions.timezone);\n      }\n    }\n\n    return ngModel.$options && ngModel.$options.allowInvalid ? viewValue : undefined;\n  }\n\n  function validator(modelValue, viewValue) {\n    var value = modelValue || viewValue;\n\n    if (!$attrs.ngRequired && !value) {\n      return true;\n    }\n\n    if (angular.isNumber(value)) {\n      value = new Date(value);\n    }\n\n    if (!value) {\n      return true;\n    }\n\n    if (angular.isDate(value) && !isNaN(value)) {\n      return true;\n    }\n\n    if (angular.isString(value)) {\n      return !isNaN(parseDateString(value));\n    }\n\n    return false;\n  }\n\n  function documentClickBind(event) {\n    if (!$scope.isOpen && $scope.disabled) {\n      return;\n    }\n\n    var popup = $popup[0];\n    var dpContainsTarget = $element[0].contains(event.target);\n    // The popup node may not be an element node\n    // In some browsers (IE) only element nodes have the 'contains' function\n    var popupContainsTarget = popup.contains !== undefined && popup.contains(event.target);\n    if ($scope.isOpen && !(dpContainsTarget || popupContainsTarget)) {\n      $scope.$apply(function() {\n        $scope.isOpen = false;\n      });\n    }\n  }\n\n  function inputKeydownBind(evt) {\n    if (evt.which === 27 && $scope.isOpen) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      $scope.$apply(function() {\n        $scope.isOpen = false;\n      });\n      $element[0].focus();\n    } else if (evt.which === 40 && !$scope.isOpen) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      $scope.$apply(function() {\n        $scope.isOpen = true;\n      });\n    }\n  }\n\n  function positionPopup() {\n    if ($scope.isOpen) {\n      var dpElement = angular.element($popup[0].querySelector('.uib-datepicker-popup'));\n      var placement = $attrs.popupPlacement ? $attrs.popupPlacement : datepickerPopupConfig.placement;\n      var position = $position.positionElements($element, dpElement, placement, appendToBody);\n      dpElement.css({top: position.top + 'px', left: position.left + 'px'});\n      if (dpElement.hasClass('uib-position-measure')) {\n        dpElement.removeClass('uib-position-measure');\n      }\n    }\n  }\n\n  $scope.$on('uib:datepicker.mode', function() {\n    $timeout(positionPopup, 0, false);\n  });\n}])\n\n.directive('uibDatepickerPopup', function() {\n  return {\n    require: ['ngModel', 'uibDatepickerPopup'],\n    controller: 'UibDatepickerPopupController',\n    scope: {\n      datepickerOptions: '=?',\n      isOpen: '=?',\n      currentText: '@',\n      clearText: '@',\n      closeText: '@'\n    },\n    link: function(scope, element, attrs, ctrls) {\n      var ngModel = ctrls[0],\n        ctrl = ctrls[1];\n\n      ctrl.init(ngModel);\n    }\n  };\n})\n\n.directive('uibDatepickerPopupWrap', function() {\n  return {\n    restrict: 'A',\n    transclude: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/datepickerPopup/popup.html';\n    }\n  };\n});\n\nangular.module('ui.bootstrap.debounce', [])\n/**\n * A helper, internal service that debounces a function\n */\n  .factory('$$debounce', ['$timeout', function($timeout) {\n    return function(callback, debounceTime) {\n      var timeoutPromise;\n\n      return function() {\n        var self = this;\n        var args = Array.prototype.slice.call(arguments);\n        if (timeoutPromise) {\n          $timeout.cancel(timeoutPromise);\n        }\n\n        timeoutPromise = $timeout(function() {\n          callback.apply(self, args);\n        }, debounceTime);\n      };\n    };\n  }]);\n\nangular.module('ui.bootstrap.dropdown', ['ui.bootstrap.position'])\n\n.constant('uibDropdownConfig', {\n  appendToOpenClass: 'uib-dropdown-open',\n  openClass: 'open'\n})\n\n.service('uibDropdownService', ['$document', '$rootScope', function($document, $rootScope) {\n  var openScope = null;\n\n  this.open = function(dropdownScope, element) {\n    if (!openScope) {\n      $document.on('click', closeDropdown);\n    }\n\n    if (openScope && openScope !== dropdownScope) {\n      openScope.isOpen = false;\n    }\n\n    openScope = dropdownScope;\n  };\n\n  this.close = function(dropdownScope, element) {\n    if (openScope === dropdownScope) {\n      $document.off('click', closeDropdown);\n      $document.off('keydown', this.keybindFilter);\n      openScope = null;\n    }\n  };\n\n  var closeDropdown = function(evt) {\n    // This method may still be called during the same mouse event that\n    // unbound this event handler. So check openScope before proceeding.\n    if (!openScope) { return; }\n\n    if (evt && openScope.getAutoClose() === 'disabled') { return; }\n\n    if (evt && evt.which === 3) { return; }\n\n    var toggleElement = openScope.getToggleElement();\n    if (evt && toggleElement && toggleElement[0].contains(evt.target)) {\n      return;\n    }\n\n    var dropdownElement = openScope.getDropdownElement();\n    if (evt && openScope.getAutoClose() === 'outsideClick' &&\n      dropdownElement && dropdownElement[0].contains(evt.target)) {\n      return;\n    }\n\n    openScope.focusToggleElement();\n    openScope.isOpen = false;\n\n    if (!$rootScope.$$phase) {\n      openScope.$apply();\n    }\n  };\n\n  this.keybindFilter = function(evt) {\n    if (!openScope) {\n      // see this.close as ESC could have been pressed which kills the scope so we can not proceed\n      return;\n    }\n\n    var dropdownElement = openScope.getDropdownElement();\n    var toggleElement = openScope.getToggleElement();\n    var dropdownElementTargeted = dropdownElement && dropdownElement[0].contains(evt.target);\n    var toggleElementTargeted = toggleElement && toggleElement[0].contains(evt.target);\n    if (evt.which === 27) {\n      evt.stopPropagation();\n      openScope.focusToggleElement();\n      closeDropdown();\n    } else if (openScope.isKeynavEnabled() && [38, 40].indexOf(evt.which) !== -1 && openScope.isOpen && (dropdownElementTargeted || toggleElementTargeted)) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      openScope.focusDropdownEntry(evt.which);\n    }\n  };\n}])\n\n.controller('UibDropdownController', ['$scope', '$element', '$attrs', '$parse', 'uibDropdownConfig', 'uibDropdownService', '$animate', '$uibPosition', '$document', '$compile', '$templateRequest', function($scope, $element, $attrs, $parse, dropdownConfig, uibDropdownService, $animate, $position, $document, $compile, $templateRequest) {\n  var self = this,\n    scope = $scope.$new(), // create a child scope so we are not polluting original one\n    templateScope,\n    appendToOpenClass = dropdownConfig.appendToOpenClass,\n    openClass = dropdownConfig.openClass,\n    getIsOpen,\n    setIsOpen = angular.noop,\n    toggleInvoker = $attrs.onToggle ? $parse($attrs.onToggle) : angular.noop,\n    appendToBody = false,\n    appendTo = null,\n    keynavEnabled = false,\n    selectedOption = null,\n    body = $document.find('body');\n\n  $element.addClass('dropdown');\n\n  this.init = function() {\n    if ($attrs.isOpen) {\n      getIsOpen = $parse($attrs.isOpen);\n      setIsOpen = getIsOpen.assign;\n\n      $scope.$watch(getIsOpen, function(value) {\n        scope.isOpen = !!value;\n      });\n    }\n\n    if (angular.isDefined($attrs.dropdownAppendTo)) {\n      var appendToEl = $parse($attrs.dropdownAppendTo)(scope);\n      if (appendToEl) {\n        appendTo = angular.element(appendToEl);\n      }\n    }\n\n    appendToBody = angular.isDefined($attrs.dropdownAppendToBody);\n    keynavEnabled = angular.isDefined($attrs.keyboardNav);\n\n    if (appendToBody && !appendTo) {\n      appendTo = body;\n    }\n\n    if (appendTo && self.dropdownMenu) {\n      appendTo.append(self.dropdownMenu);\n      $element.on('$destroy', function handleDestroyEvent() {\n        self.dropdownMenu.remove();\n      });\n    }\n  };\n\n  this.toggle = function(open) {\n    scope.isOpen = arguments.length ? !!open : !scope.isOpen;\n    if (angular.isFunction(setIsOpen)) {\n      setIsOpen(scope, scope.isOpen);\n    }\n\n    return scope.isOpen;\n  };\n\n  // Allow other directives to watch status\n  this.isOpen = function() {\n    return scope.isOpen;\n  };\n\n  scope.getToggleElement = function() {\n    return self.toggleElement;\n  };\n\n  scope.getAutoClose = function() {\n    return $attrs.autoClose || 'always'; //or 'outsideClick' or 'disabled'\n  };\n\n  scope.getElement = function() {\n    return $element;\n  };\n\n  scope.isKeynavEnabled = function() {\n    return keynavEnabled;\n  };\n\n  scope.focusDropdownEntry = function(keyCode) {\n    var elems = self.dropdownMenu ? //If append to body is used.\n      angular.element(self.dropdownMenu).find('a') :\n      $element.find('ul').eq(0).find('a');\n\n    switch (keyCode) {\n      case 40: {\n        if (!angular.isNumber(self.selectedOption)) {\n          self.selectedOption = 0;\n        } else {\n          self.selectedOption = self.selectedOption === elems.length - 1 ?\n            self.selectedOption :\n            self.selectedOption + 1;\n        }\n        break;\n      }\n      case 38: {\n        if (!angular.isNumber(self.selectedOption)) {\n          self.selectedOption = elems.length - 1;\n        } else {\n          self.selectedOption = self.selectedOption === 0 ?\n            0 : self.selectedOption - 1;\n        }\n        break;\n      }\n    }\n    elems[self.selectedOption].focus();\n  };\n\n  scope.getDropdownElement = function() {\n    return self.dropdownMenu;\n  };\n\n  scope.focusToggleElement = function() {\n    if (self.toggleElement) {\n      self.toggleElement[0].focus();\n    }\n  };\n\n  scope.$watch('isOpen', function(isOpen, wasOpen) {\n    if (appendTo && self.dropdownMenu) {\n      var pos = $position.positionElements($element, self.dropdownMenu, 'bottom-left', true),\n        css,\n        rightalign,\n        scrollbarPadding,\n        scrollbarWidth = 0;\n\n      css = {\n        top: pos.top + 'px',\n        display: isOpen ? 'block' : 'none'\n      };\n\n      rightalign = self.dropdownMenu.hasClass('dropdown-menu-right');\n      if (!rightalign) {\n        css.left = pos.left + 'px';\n        css.right = 'auto';\n      } else {\n        css.left = 'auto';\n        scrollbarPadding = $position.scrollbarPadding(appendTo);\n\n        if (scrollbarPadding.heightOverflow && scrollbarPadding.scrollbarWidth) {\n          scrollbarWidth = scrollbarPadding.scrollbarWidth;\n        }\n\n        css.right = window.innerWidth - scrollbarWidth -\n          (pos.left + $element.prop('offsetWidth')) + 'px';\n      }\n\n      // Need to adjust our positioning to be relative to the appendTo container\n      // if it's not the body element\n      if (!appendToBody) {\n        var appendOffset = $position.offset(appendTo);\n\n        css.top = pos.top - appendOffset.top + 'px';\n\n        if (!rightalign) {\n          css.left = pos.left - appendOffset.left + 'px';\n        } else {\n          css.right = window.innerWidth -\n            (pos.left - appendOffset.left + $element.prop('offsetWidth')) + 'px';\n        }\n      }\n\n      self.dropdownMenu.css(css);\n    }\n\n    var openContainer = appendTo ? appendTo : $element;\n    var hasOpenClass = openContainer.hasClass(appendTo ? appendToOpenClass : openClass);\n\n    if (hasOpenClass === !isOpen) {\n      $animate[isOpen ? 'addClass' : 'removeClass'](openContainer, appendTo ? appendToOpenClass : openClass).then(function() {\n        if (angular.isDefined(isOpen) && isOpen !== wasOpen) {\n          toggleInvoker($scope, { open: !!isOpen });\n        }\n      });\n    }\n\n    if (isOpen) {\n      if (self.dropdownMenuTemplateUrl) {\n        $templateRequest(self.dropdownMenuTemplateUrl).then(function(tplContent) {\n          templateScope = scope.$new();\n          $compile(tplContent.trim())(templateScope, function(dropdownElement) {\n            var newEl = dropdownElement;\n            self.dropdownMenu.replaceWith(newEl);\n            self.dropdownMenu = newEl;\n            $document.on('keydown', uibDropdownService.keybindFilter);\n          });\n        });\n      } else {\n        $document.on('keydown', uibDropdownService.keybindFilter);\n      }\n\n      scope.focusToggleElement();\n      uibDropdownService.open(scope, $element);\n    } else {\n      uibDropdownService.close(scope, $element);\n      if (self.dropdownMenuTemplateUrl) {\n        if (templateScope) {\n          templateScope.$destroy();\n        }\n        var newEl = angular.element('<ul class=\"dropdown-menu\"></ul>');\n        self.dropdownMenu.replaceWith(newEl);\n        self.dropdownMenu = newEl;\n      }\n\n      self.selectedOption = null;\n    }\n\n    if (angular.isFunction(setIsOpen)) {\n      setIsOpen($scope, isOpen);\n    }\n  });\n}])\n\n.directive('uibDropdown', function() {\n  return {\n    controller: 'UibDropdownController',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      dropdownCtrl.init();\n    }\n  };\n})\n\n.directive('uibDropdownMenu', function() {\n  return {\n    restrict: 'A',\n    require: '?^uibDropdown',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      if (!dropdownCtrl || angular.isDefined(attrs.dropdownNested)) {\n        return;\n      }\n\n      element.addClass('dropdown-menu');\n\n      var tplUrl = attrs.templateUrl;\n      if (tplUrl) {\n        dropdownCtrl.dropdownMenuTemplateUrl = tplUrl;\n      }\n\n      if (!dropdownCtrl.dropdownMenu) {\n        dropdownCtrl.dropdownMenu = element;\n      }\n    }\n  };\n})\n\n.directive('uibDropdownToggle', function() {\n  return {\n    require: '?^uibDropdown',\n    link: function(scope, element, attrs, dropdownCtrl) {\n      if (!dropdownCtrl) {\n        return;\n      }\n\n      element.addClass('dropdown-toggle');\n\n      dropdownCtrl.toggleElement = element;\n\n      var toggleDropdown = function(event) {\n        event.preventDefault();\n\n        if (!element.hasClass('disabled') && !attrs.disabled) {\n          scope.$apply(function() {\n            dropdownCtrl.toggle();\n          });\n        }\n      };\n\n      element.bind('click', toggleDropdown);\n\n      // WAI-ARIA\n      element.attr({ 'aria-haspopup': true, 'aria-expanded': false });\n      scope.$watch(dropdownCtrl.isOpen, function(isOpen) {\n        element.attr('aria-expanded', !!isOpen);\n      });\n\n      scope.$on('$destroy', function() {\n        element.unbind('click', toggleDropdown);\n      });\n    }\n  };\n});\n\nangular.module('ui.bootstrap.stackedMap', [])\n/**\n * A helper, internal data structure that acts as a map but also allows getting / removing\n * elements in the LIFO order\n */\n  .factory('$$stackedMap', function() {\n    return {\n      createNew: function() {\n        var stack = [];\n\n        return {\n          add: function(key, value) {\n            stack.push({\n              key: key,\n              value: value\n            });\n          },\n          get: function(key) {\n            for (var i = 0; i < stack.length; i++) {\n              if (key === stack[i].key) {\n                return stack[i];\n              }\n            }\n          },\n          keys: function() {\n            var keys = [];\n            for (var i = 0; i < stack.length; i++) {\n              keys.push(stack[i].key);\n            }\n            return keys;\n          },\n          top: function() {\n            return stack[stack.length - 1];\n          },\n          remove: function(key) {\n            var idx = -1;\n            for (var i = 0; i < stack.length; i++) {\n              if (key === stack[i].key) {\n                idx = i;\n                break;\n              }\n            }\n            return stack.splice(idx, 1)[0];\n          },\n          removeTop: function() {\n            return stack.pop();\n          },\n          length: function() {\n            return stack.length;\n          }\n        };\n      }\n    };\n  });\nangular.module('ui.bootstrap.modal', ['ui.bootstrap.stackedMap', 'ui.bootstrap.position'])\n/**\n * A helper, internal data structure that stores all references attached to key\n */\n  .factory('$$multiMap', function() {\n    return {\n      createNew: function() {\n        var map = {};\n\n        return {\n          entries: function() {\n            return Object.keys(map).map(function(key) {\n              return {\n                key: key,\n                value: map[key]\n              };\n            });\n          },\n          get: function(key) {\n            return map[key];\n          },\n          hasKey: function(key) {\n            return !!map[key];\n          },\n          keys: function() {\n            return Object.keys(map);\n          },\n          put: function(key, value) {\n            if (!map[key]) {\n              map[key] = [];\n            }\n\n            map[key].push(value);\n          },\n          remove: function(key, value) {\n            var values = map[key];\n\n            if (!values) {\n              return;\n            }\n\n            var idx = values.indexOf(value);\n\n            if (idx !== -1) {\n              values.splice(idx, 1);\n            }\n\n            if (!values.length) {\n              delete map[key];\n            }\n          }\n        };\n      }\n    };\n  })\n\n/**\n * Pluggable resolve mechanism for the modal resolve resolution\n * Supports UI Router's $resolve service\n */\n  .provider('$uibResolve', function() {\n    var resolve = this;\n    this.resolver = null;\n\n    this.setResolver = function(resolver) {\n      this.resolver = resolver;\n    };\n\n    this.$get = ['$injector', '$q', function($injector, $q) {\n      var resolver = resolve.resolver ? $injector.get(resolve.resolver) : null;\n      return {\n        resolve: function(invocables, locals, parent, self) {\n          if (resolver) {\n            return resolver.resolve(invocables, locals, parent, self);\n          }\n\n          var promises = [];\n\n          angular.forEach(invocables, function(value) {\n            if (angular.isFunction(value) || angular.isArray(value)) {\n              promises.push($q.resolve($injector.invoke(value)));\n            } else if (angular.isString(value)) {\n              promises.push($q.resolve($injector.get(value)));\n            } else {\n              promises.push($q.resolve(value));\n            }\n          });\n\n          return $q.all(promises).then(function(resolves) {\n            var resolveObj = {};\n            var resolveIter = 0;\n            angular.forEach(invocables, function(value, key) {\n              resolveObj[key] = resolves[resolveIter++];\n            });\n\n            return resolveObj;\n          });\n        }\n      };\n    }];\n  })\n\n/**\n * A helper directive for the $modal service. It creates a backdrop element.\n */\n  .directive('uibModalBackdrop', ['$animate', '$injector', '$uibModalStack',\n  function($animate, $injector, $modalStack) {\n    return {\n      restrict: 'A',\n      compile: function(tElement, tAttrs) {\n        tElement.addClass(tAttrs.backdropClass);\n        return linkFn;\n      }\n    };\n\n    function linkFn(scope, element, attrs) {\n      if (attrs.modalInClass) {\n        $animate.addClass(element, attrs.modalInClass);\n\n        scope.$on($modalStack.NOW_CLOSING_EVENT, function(e, setIsAsync) {\n          var done = setIsAsync();\n          if (scope.modalOptions.animation) {\n            $animate.removeClass(element, attrs.modalInClass).then(done);\n          } else {\n            done();\n          }\n        });\n      }\n    }\n  }])\n\n  .directive('uibModalWindow', ['$uibModalStack', '$q', '$animateCss', '$document',\n  function($modalStack, $q, $animateCss, $document) {\n    return {\n      scope: {\n        index: '@'\n      },\n      restrict: 'A',\n      transclude: true,\n      templateUrl: function(tElement, tAttrs) {\n        return tAttrs.templateUrl || 'uib/template/modal/window.html';\n      },\n      link: function(scope, element, attrs) {\n        element.addClass(attrs.windowTopClass || '');\n        scope.size = attrs.size;\n\n        scope.close = function(evt) {\n          var modal = $modalStack.getTop();\n          if (modal && modal.value.backdrop &&\n            modal.value.backdrop !== 'static' &&\n            evt.target === evt.currentTarget) {\n            evt.preventDefault();\n            evt.stopPropagation();\n            $modalStack.dismiss(modal.key, 'backdrop click');\n          }\n        };\n\n        // moved from template to fix issue #2280\n        element.on('click', scope.close);\n\n        // This property is only added to the scope for the purpose of detecting when this directive is rendered.\n        // We can detect that by using this property in the template associated with this directive and then use\n        // {@link Attribute#$observe} on it. For more details please see {@link TableColumnResize}.\n        scope.$isRendered = true;\n\n        // Deferred object that will be resolved when this modal is rendered.\n        var modalRenderDeferObj = $q.defer();\n        // Resolve render promise post-digest\n        scope.$$postDigest(function() {\n          modalRenderDeferObj.resolve();\n        });\n\n        modalRenderDeferObj.promise.then(function() {\n          var animationPromise = null;\n\n          if (attrs.modalInClass) {\n            animationPromise = $animateCss(element, {\n              addClass: attrs.modalInClass\n            }).start();\n\n            scope.$on($modalStack.NOW_CLOSING_EVENT, function(e, setIsAsync) {\n              var done = setIsAsync();\n              $animateCss(element, {\n                removeClass: attrs.modalInClass\n              }).start().then(done);\n            });\n          }\n\n\n          $q.when(animationPromise).then(function() {\n            // Notify {@link $modalStack} that modal is rendered.\n            var modal = $modalStack.getTop();\n            if (modal) {\n              $modalStack.modalRendered(modal.key);\n            }\n\n            /**\n             * If something within the freshly-opened modal already has focus (perhaps via a\n             * directive that causes focus) then there's no need to try to focus anything.\n             */\n            if (!($document[0].activeElement && element[0].contains($document[0].activeElement))) {\n              var inputWithAutofocus = element[0].querySelector('[autofocus]');\n              /**\n               * Auto-focusing of a freshly-opened modal element causes any child elements\n               * with the autofocus attribute to lose focus. This is an issue on touch\n               * based devices which will show and then hide the onscreen keyboard.\n               * Attempts to refocus the autofocus element via JavaScript will not reopen\n               * the onscreen keyboard. Fixed by updated the focusing logic to only autofocus\n               * the modal element if the modal does not contain an autofocus element.\n               */\n              if (inputWithAutofocus) {\n                inputWithAutofocus.focus();\n              } else {\n                element[0].focus();\n              }\n            }\n          });\n        });\n      }\n    };\n  }])\n\n  .directive('uibModalAnimationClass', function() {\n    return {\n      compile: function(tElement, tAttrs) {\n        if (tAttrs.modalAnimation) {\n          tElement.addClass(tAttrs.uibModalAnimationClass);\n        }\n      }\n    };\n  })\n\n  .directive('uibModalTransclude', ['$animate', function($animate) {\n    return {\n      link: function(scope, element, attrs, controller, transclude) {\n        transclude(scope.$parent, function(clone) {\n          element.empty();\n          $animate.enter(clone, element);\n        });\n      }\n    };\n  }])\n\n  .factory('$uibModalStack', ['$animate', '$animateCss', '$document',\n    '$compile', '$rootScope', '$q', '$$multiMap', '$$stackedMap', '$uibPosition',\n    function($animate, $animateCss, $document, $compile, $rootScope, $q, $$multiMap, $$stackedMap, $uibPosition) {\n      var OPENED_MODAL_CLASS = 'modal-open';\n\n      var backdropDomEl, backdropScope;\n      var openedWindows = $$stackedMap.createNew();\n      var openedClasses = $$multiMap.createNew();\n      var $modalStack = {\n        NOW_CLOSING_EVENT: 'modal.stack.now-closing'\n      };\n      var topModalIndex = 0;\n      var previousTopOpenedModal = null;\n      var ARIA_HIDDEN_ATTRIBUTE_NAME = 'data-bootstrap-modal-aria-hidden-count';\n\n      //Modal focus behavior\n      var tabbableSelector = 'a[href], area[href], input:not([disabled]):not([tabindex=\\'-1\\']), ' +\n        'button:not([disabled]):not([tabindex=\\'-1\\']),select:not([disabled]):not([tabindex=\\'-1\\']), textarea:not([disabled]):not([tabindex=\\'-1\\']), ' +\n        'iframe, object, embed, *[tabindex]:not([tabindex=\\'-1\\']), *[contenteditable=true]';\n      var scrollbarPadding;\n      var SNAKE_CASE_REGEXP = /[A-Z]/g;\n\n      // TODO: extract into common dependency with tooltip\n      function snake_case(name) {\n        var separator = '-';\n        return name.replace(SNAKE_CASE_REGEXP, function(letter, pos) {\n          return (pos ? separator : '') + letter.toLowerCase();\n        });\n      }\n\n      function isVisible(element) {\n        return !!(element.offsetWidth ||\n          element.offsetHeight ||\n          element.getClientRects().length);\n      }\n\n      function backdropIndex() {\n        var topBackdropIndex = -1;\n        var opened = openedWindows.keys();\n        for (var i = 0; i < opened.length; i++) {\n          if (openedWindows.get(opened[i]).value.backdrop) {\n            topBackdropIndex = i;\n          }\n        }\n\n        // If any backdrop exist, ensure that it's index is always\n        // right below the top modal\n        if (topBackdropIndex > -1 && topBackdropIndex < topModalIndex) {\n          topBackdropIndex = topModalIndex;\n        }\n        return topBackdropIndex;\n      }\n\n      $rootScope.$watch(backdropIndex, function(newBackdropIndex) {\n        if (backdropScope) {\n          backdropScope.index = newBackdropIndex;\n        }\n      });\n\n      function removeModalWindow(modalInstance, elementToReceiveFocus) {\n        var modalWindow = openedWindows.get(modalInstance).value;\n        var appendToElement = modalWindow.appendTo;\n\n        //clean up the stack\n        openedWindows.remove(modalInstance);\n        previousTopOpenedModal = openedWindows.top();\n        if (previousTopOpenedModal) {\n          topModalIndex = parseInt(previousTopOpenedModal.value.modalDomEl.attr('index'), 10);\n        }\n\n        removeAfterAnimate(modalWindow.modalDomEl, modalWindow.modalScope, function() {\n          var modalBodyClass = modalWindow.openedClass || OPENED_MODAL_CLASS;\n          openedClasses.remove(modalBodyClass, modalInstance);\n          var areAnyOpen = openedClasses.hasKey(modalBodyClass);\n          appendToElement.toggleClass(modalBodyClass, areAnyOpen);\n          if (!areAnyOpen && scrollbarPadding && scrollbarPadding.heightOverflow && scrollbarPadding.scrollbarWidth) {\n            if (scrollbarPadding.originalRight) {\n              appendToElement.css({paddingRight: scrollbarPadding.originalRight + 'px'});\n            } else {\n              appendToElement.css({paddingRight: ''});\n            }\n            scrollbarPadding = null;\n          }\n          toggleTopWindowClass(true);\n        }, modalWindow.closedDeferred);\n        checkRemoveBackdrop();\n\n        //move focus to specified element if available, or else to body\n        if (elementToReceiveFocus && elementToReceiveFocus.focus) {\n          elementToReceiveFocus.focus();\n        } else if (appendToElement.focus) {\n          appendToElement.focus();\n        }\n      }\n\n      // Add or remove \"windowTopClass\" from the top window in the stack\n      function toggleTopWindowClass(toggleSwitch) {\n        var modalWindow;\n\n        if (openedWindows.length() > 0) {\n          modalWindow = openedWindows.top().value;\n          modalWindow.modalDomEl.toggleClass(modalWindow.windowTopClass || '', toggleSwitch);\n        }\n      }\n\n      function checkRemoveBackdrop() {\n        //remove backdrop if no longer needed\n        if (backdropDomEl && backdropIndex() === -1) {\n          var backdropScopeRef = backdropScope;\n          removeAfterAnimate(backdropDomEl, backdropScope, function() {\n            backdropScopeRef = null;\n          });\n          backdropDomEl = undefined;\n          backdropScope = undefined;\n        }\n      }\n\n      function removeAfterAnimate(domEl, scope, done, closedDeferred) {\n        var asyncDeferred;\n        var asyncPromise = null;\n        var setIsAsync = function() {\n          if (!asyncDeferred) {\n            asyncDeferred = $q.defer();\n            asyncPromise = asyncDeferred.promise;\n          }\n\n          return function asyncDone() {\n            asyncDeferred.resolve();\n          };\n        };\n        scope.$broadcast($modalStack.NOW_CLOSING_EVENT, setIsAsync);\n\n        // Note that it's intentional that asyncPromise might be null.\n        // That's when setIsAsync has not been called during the\n        // NOW_CLOSING_EVENT broadcast.\n        return $q.when(asyncPromise).then(afterAnimating);\n\n        function afterAnimating() {\n          if (afterAnimating.done) {\n            return;\n          }\n          afterAnimating.done = true;\n\n          $animate.leave(domEl).then(function() {\n            if (done) {\n              done();\n            }\n\n            domEl.remove();\n            if (closedDeferred) {\n              closedDeferred.resolve();\n            }\n          });\n\n          scope.$destroy();\n        }\n      }\n\n      $document.on('keydown', keydownListener);\n\n      $rootScope.$on('$destroy', function() {\n        $document.off('keydown', keydownListener);\n      });\n\n      function keydownListener(evt) {\n        if (evt.isDefaultPrevented()) {\n          return evt;\n        }\n\n        var modal = openedWindows.top();\n        if (modal) {\n          switch (evt.which) {\n            case 27: {\n              if (modal.value.keyboard) {\n                evt.preventDefault();\n                $rootScope.$apply(function() {\n                  $modalStack.dismiss(modal.key, 'escape key press');\n                });\n              }\n              break;\n            }\n            case 9: {\n              var list = $modalStack.loadFocusElementList(modal);\n              var focusChanged = false;\n              if (evt.shiftKey) {\n                if ($modalStack.isFocusInFirstItem(evt, list) || $modalStack.isModalFocused(evt, modal)) {\n                  focusChanged = $modalStack.focusLastFocusableElement(list);\n                }\n              } else {\n                if ($modalStack.isFocusInLastItem(evt, list)) {\n                  focusChanged = $modalStack.focusFirstFocusableElement(list);\n                }\n              }\n\n              if (focusChanged) {\n                evt.preventDefault();\n                evt.stopPropagation();\n              }\n\n              break;\n            }\n          }\n        }\n      }\n\n      $modalStack.open = function(modalInstance, modal) {\n        var modalOpener = $document[0].activeElement,\n          modalBodyClass = modal.openedClass || OPENED_MODAL_CLASS;\n\n        toggleTopWindowClass(false);\n\n        // Store the current top first, to determine what index we ought to use\n        // for the current top modal\n        previousTopOpenedModal = openedWindows.top();\n\n        openedWindows.add(modalInstance, {\n          deferred: modal.deferred,\n          renderDeferred: modal.renderDeferred,\n          closedDeferred: modal.closedDeferred,\n          modalScope: modal.scope,\n          backdrop: modal.backdrop,\n          keyboard: modal.keyboard,\n          openedClass: modal.openedClass,\n          windowTopClass: modal.windowTopClass,\n          animation: modal.animation,\n          appendTo: modal.appendTo\n        });\n\n        openedClasses.put(modalBodyClass, modalInstance);\n\n        var appendToElement = modal.appendTo,\n            currBackdropIndex = backdropIndex();\n\n        if (!appendToElement.length) {\n          throw new Error('appendTo element not found. Make sure that the element passed is in DOM.');\n        }\n\n        if (currBackdropIndex >= 0 && !backdropDomEl) {\n          backdropScope = $rootScope.$new(true);\n          backdropScope.modalOptions = modal;\n          backdropScope.index = currBackdropIndex;\n          backdropDomEl = angular.element('<div uib-modal-backdrop=\"modal-backdrop\"></div>');\n          backdropDomEl.attr({\n            'class': 'modal-backdrop',\n            'ng-style': '{\\'z-index\\': 1040 + (index && 1 || 0) + index*10}',\n            'uib-modal-animation-class': 'fade',\n            'modal-in-class': 'in'\n          });\n          if (modal.backdropClass) {\n            backdropDomEl.addClass(modal.backdropClass);\n          }\n\n          if (modal.animation) {\n            backdropDomEl.attr('modal-animation', 'true');\n          }\n          $compile(backdropDomEl)(backdropScope);\n          $animate.enter(backdropDomEl, appendToElement);\n          if ($uibPosition.isScrollable(appendToElement)) {\n            scrollbarPadding = $uibPosition.scrollbarPadding(appendToElement);\n            if (scrollbarPadding.heightOverflow && scrollbarPadding.scrollbarWidth) {\n              appendToElement.css({paddingRight: scrollbarPadding.right + 'px'});\n            }\n          }\n        }\n\n        var content;\n        if (modal.component) {\n          content = document.createElement(snake_case(modal.component.name));\n          content = angular.element(content);\n          content.attr({\n            resolve: '$resolve',\n            'modal-instance': '$uibModalInstance',\n            close: '$close($value)',\n            dismiss: '$dismiss($value)'\n          });\n        } else {\n          content = modal.content;\n        }\n\n        // Set the top modal index based on the index of the previous top modal\n        topModalIndex = previousTopOpenedModal ? parseInt(previousTopOpenedModal.value.modalDomEl.attr('index'), 10) + 1 : 0;\n        var angularDomEl = angular.element('<div uib-modal-window=\"modal-window\"></div>');\n        angularDomEl.attr({\n          'class': 'modal',\n          'template-url': modal.windowTemplateUrl,\n          'window-top-class': modal.windowTopClass,\n          'role': 'dialog',\n          'aria-labelledby': modal.ariaLabelledBy,\n          'aria-describedby': modal.ariaDescribedBy,\n          'size': modal.size,\n          'index': topModalIndex,\n          'animate': 'animate',\n          'ng-style': '{\\'z-index\\': 1050 + $$topModalIndex*10, display: \\'block\\'}',\n          'tabindex': -1,\n          'uib-modal-animation-class': 'fade',\n          'modal-in-class': 'in'\n        }).append(content);\n        if (modal.windowClass) {\n          angularDomEl.addClass(modal.windowClass);\n        }\n\n        if (modal.animation) {\n          angularDomEl.attr('modal-animation', 'true');\n        }\n\n        appendToElement.addClass(modalBodyClass);\n        if (modal.scope) {\n          // we need to explicitly add the modal index to the modal scope\n          // because it is needed by ngStyle to compute the zIndex property.\n          modal.scope.$$topModalIndex = topModalIndex;\n        }\n        $animate.enter($compile(angularDomEl)(modal.scope), appendToElement);\n\n        openedWindows.top().value.modalDomEl = angularDomEl;\n        openedWindows.top().value.modalOpener = modalOpener;\n\n        applyAriaHidden(angularDomEl);\n\n        function applyAriaHidden(el) {\n          if (!el || el[0].tagName === 'BODY') {\n            return;\n          }\n\n          getSiblings(el).forEach(function(sibling) {\n            var elemIsAlreadyHidden = sibling.getAttribute('aria-hidden') === 'true',\n              ariaHiddenCount = parseInt(sibling.getAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME), 10);\n\n            if (!ariaHiddenCount) {\n              ariaHiddenCount = elemIsAlreadyHidden ? 1 : 0;  \n            }\n\n            sibling.setAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME, ariaHiddenCount + 1);\n            sibling.setAttribute('aria-hidden', 'true');\n          });\n\n          return applyAriaHidden(el.parent());\n\n          function getSiblings(el) {\n            var children = el.parent() ? el.parent().children() : [];\n\n            return Array.prototype.filter.call(children, function(child) {\n              return child !== el[0];\n            });\n          }\n        }\n      };\n\n      function broadcastClosing(modalWindow, resultOrReason, closing) {\n        return !modalWindow.value.modalScope.$broadcast('modal.closing', resultOrReason, closing).defaultPrevented;\n      }\n\n      function unhideBackgroundElements() {\n        Array.prototype.forEach.call(\n          document.querySelectorAll('[' + ARIA_HIDDEN_ATTRIBUTE_NAME + ']'),\n          function(hiddenEl) {\n            var ariaHiddenCount = parseInt(hiddenEl.getAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME), 10),\n              newHiddenCount = ariaHiddenCount - 1;\n            hiddenEl.setAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME, newHiddenCount);\n\n            if (!newHiddenCount) {\n              hiddenEl.removeAttribute(ARIA_HIDDEN_ATTRIBUTE_NAME);\n              hiddenEl.removeAttribute('aria-hidden');\n            }\n          }\n        );\n      }\n      \n      $modalStack.close = function(modalInstance, result) {\n        var modalWindow = openedWindows.get(modalInstance);\n        unhideBackgroundElements();\n        if (modalWindow && broadcastClosing(modalWindow, result, true)) {\n          modalWindow.value.modalScope.$$uibDestructionScheduled = true;\n          modalWindow.value.deferred.resolve(result);\n          removeModalWindow(modalInstance, modalWindow.value.modalOpener);\n          return true;\n        }\n\n        return !modalWindow;\n      };\n\n      $modalStack.dismiss = function(modalInstance, reason) {\n        var modalWindow = openedWindows.get(modalInstance);\n        unhideBackgroundElements();\n        if (modalWindow && broadcastClosing(modalWindow, reason, false)) {\n          modalWindow.value.modalScope.$$uibDestructionScheduled = true;\n          modalWindow.value.deferred.reject(reason);\n          removeModalWindow(modalInstance, modalWindow.value.modalOpener);\n          return true;\n        }\n        return !modalWindow;\n      };\n\n      $modalStack.dismissAll = function(reason) {\n        var topModal = this.getTop();\n        while (topModal && this.dismiss(topModal.key, reason)) {\n          topModal = this.getTop();\n        }\n      };\n\n      $modalStack.getTop = function() {\n        return openedWindows.top();\n      };\n\n      $modalStack.modalRendered = function(modalInstance) {\n        var modalWindow = openedWindows.get(modalInstance);\n        $modalStack.focusFirstFocusableElement($modalStack.loadFocusElementList(modalWindow));\n        if (modalWindow) {\n          modalWindow.value.renderDeferred.resolve();\n        }\n      };\n\n      $modalStack.focusFirstFocusableElement = function(list) {\n        if (list.length > 0) {\n          list[0].focus();\n          return true;\n        }\n        return false;\n      };\n\n      $modalStack.focusLastFocusableElement = function(list) {\n        if (list.length > 0) {\n          list[list.length - 1].focus();\n          return true;\n        }\n        return false;\n      };\n\n      $modalStack.isModalFocused = function(evt, modalWindow) {\n        if (evt && modalWindow) {\n          var modalDomEl = modalWindow.value.modalDomEl;\n          if (modalDomEl && modalDomEl.length) {\n            return (evt.target || evt.srcElement) === modalDomEl[0];\n          }\n        }\n        return false;\n      };\n\n      $modalStack.isFocusInFirstItem = function(evt, list) {\n        if (list.length > 0) {\n          return (evt.target || evt.srcElement) === list[0];\n        }\n        return false;\n      };\n\n      $modalStack.isFocusInLastItem = function(evt, list) {\n        if (list.length > 0) {\n          return (evt.target || evt.srcElement) === list[list.length - 1];\n        }\n        return false;\n      };\n\n      $modalStack.loadFocusElementList = function(modalWindow) {\n        if (modalWindow) {\n          var modalDomE1 = modalWindow.value.modalDomEl;\n          if (modalDomE1 && modalDomE1.length) {\n            var elements = modalDomE1[0].querySelectorAll(tabbableSelector);\n            return elements ?\n              Array.prototype.filter.call(elements, function(element) {\n                return isVisible(element);\n              }) : elements;\n          }\n        }\n      };\n\n      return $modalStack;\n    }])\n\n  .provider('$uibModal', function() {\n    var $modalProvider = {\n      options: {\n        animation: true,\n        backdrop: true, //can also be false or 'static'\n        keyboard: true\n      },\n      $get: ['$rootScope', '$q', '$document', '$templateRequest', '$controller', '$uibResolve', '$uibModalStack',\n        function ($rootScope, $q, $document, $templateRequest, $controller, $uibResolve, $modalStack) {\n          var $modal = {};\n\n          function getTemplatePromise(options) {\n            return options.template ? $q.when(options.template) :\n              $templateRequest(angular.isFunction(options.templateUrl) ?\n                options.templateUrl() : options.templateUrl);\n          }\n\n          var promiseChain = null;\n          $modal.getPromiseChain = function() {\n            return promiseChain;\n          };\n\n          $modal.open = function(modalOptions) {\n            var modalResultDeferred = $q.defer();\n            var modalOpenedDeferred = $q.defer();\n            var modalClosedDeferred = $q.defer();\n            var modalRenderDeferred = $q.defer();\n\n            //prepare an instance of a modal to be injected into controllers and returned to a caller\n            var modalInstance = {\n              result: modalResultDeferred.promise,\n              opened: modalOpenedDeferred.promise,\n              closed: modalClosedDeferred.promise,\n              rendered: modalRenderDeferred.promise,\n              close: function (result) {\n                return $modalStack.close(modalInstance, result);\n              },\n              dismiss: function (reason) {\n                return $modalStack.dismiss(modalInstance, reason);\n              }\n            };\n\n            //merge and clean up options\n            modalOptions = angular.extend({}, $modalProvider.options, modalOptions);\n            modalOptions.resolve = modalOptions.resolve || {};\n            modalOptions.appendTo = modalOptions.appendTo || $document.find('body').eq(0);\n\n            //verify options\n            if (!modalOptions.component && !modalOptions.template && !modalOptions.templateUrl) {\n              throw new Error('One of component or template or templateUrl options is required.');\n            }\n\n            var templateAndResolvePromise;\n            if (modalOptions.component) {\n              templateAndResolvePromise = $q.when($uibResolve.resolve(modalOptions.resolve, {}, null, null));\n            } else {\n              templateAndResolvePromise =\n                $q.all([getTemplatePromise(modalOptions), $uibResolve.resolve(modalOptions.resolve, {}, null, null)]);\n            }\n\n            function resolveWithTemplate() {\n              return templateAndResolvePromise;\n            }\n\n            // Wait for the resolution of the existing promise chain.\n            // Then switch to our own combined promise dependency (regardless of how the previous modal fared).\n            // Then add to $modalStack and resolve opened.\n            // Finally clean up the chain variable if no subsequent modal has overwritten it.\n            var samePromise;\n            samePromise = promiseChain = $q.all([promiseChain])\n              .then(resolveWithTemplate, resolveWithTemplate)\n              .then(function resolveSuccess(tplAndVars) {\n                var providedScope = modalOptions.scope || $rootScope;\n\n                var modalScope = providedScope.$new();\n                modalScope.$close = modalInstance.close;\n                modalScope.$dismiss = modalInstance.dismiss;\n\n                modalScope.$on('$destroy', function() {\n                  if (!modalScope.$$uibDestructionScheduled) {\n                    modalScope.$dismiss('$uibUnscheduledDestruction');\n                  }\n                });\n\n                var modal = {\n                  scope: modalScope,\n                  deferred: modalResultDeferred,\n                  renderDeferred: modalRenderDeferred,\n                  closedDeferred: modalClosedDeferred,\n                  animation: modalOptions.animation,\n                  backdrop: modalOptions.backdrop,\n                  keyboard: modalOptions.keyboard,\n                  backdropClass: modalOptions.backdropClass,\n                  windowTopClass: modalOptions.windowTopClass,\n                  windowClass: modalOptions.windowClass,\n                  windowTemplateUrl: modalOptions.windowTemplateUrl,\n                  ariaLabelledBy: modalOptions.ariaLabelledBy,\n                  ariaDescribedBy: modalOptions.ariaDescribedBy,\n                  size: modalOptions.size,\n                  openedClass: modalOptions.openedClass,\n                  appendTo: modalOptions.appendTo\n                };\n\n                var component = {};\n                var ctrlInstance, ctrlInstantiate, ctrlLocals = {};\n\n                if (modalOptions.component) {\n                  constructLocals(component, false, true, false);\n                  component.name = modalOptions.component;\n                  modal.component = component;\n                } else if (modalOptions.controller) {\n                  constructLocals(ctrlLocals, true, false, true);\n\n                  // the third param will make the controller instantiate later,private api\n                  // @see https://github.com/angular/angular.js/blob/master/src/ng/controller.js#L126\n                  ctrlInstantiate = $controller(modalOptions.controller, ctrlLocals, true, modalOptions.controllerAs);\n                  if (modalOptions.controllerAs && modalOptions.bindToController) {\n                    ctrlInstance = ctrlInstantiate.instance;\n                    ctrlInstance.$close = modalScope.$close;\n                    ctrlInstance.$dismiss = modalScope.$dismiss;\n                    angular.extend(ctrlInstance, {\n                      $resolve: ctrlLocals.$scope.$resolve\n                    }, providedScope);\n                  }\n\n                  ctrlInstance = ctrlInstantiate();\n\n                  if (angular.isFunction(ctrlInstance.$onInit)) {\n                    ctrlInstance.$onInit();\n                  }\n                }\n\n                if (!modalOptions.component) {\n                  modal.content = tplAndVars[0];\n                }\n\n                $modalStack.open(modalInstance, modal);\n                modalOpenedDeferred.resolve(true);\n\n                function constructLocals(obj, template, instanceOnScope, injectable) {\n                  obj.$scope = modalScope;\n                  obj.$scope.$resolve = {};\n                  if (instanceOnScope) {\n                    obj.$scope.$uibModalInstance = modalInstance;\n                  } else {\n                    obj.$uibModalInstance = modalInstance;\n                  }\n\n                  var resolves = template ? tplAndVars[1] : tplAndVars;\n                  angular.forEach(resolves, function(value, key) {\n                    if (injectable) {\n                      obj[key] = value;\n                    }\n\n                    obj.$scope.$resolve[key] = value;\n                  });\n                }\n            }, function resolveError(reason) {\n              modalOpenedDeferred.reject(reason);\n              modalResultDeferred.reject(reason);\n            })['finally'](function() {\n              if (promiseChain === samePromise) {\n                promiseChain = null;\n              }\n            });\n\n            return modalInstance;\n          };\n\n          return $modal;\n        }\n      ]\n    };\n\n    return $modalProvider;\n  });\n\nangular.module('ui.bootstrap.paging', [])\n/**\n * Helper internal service for generating common controller code between the\n * pager and pagination components\n */\n.factory('uibPaging', ['$parse', function($parse) {\n  return {\n    create: function(ctrl, $scope, $attrs) {\n      ctrl.setNumPages = $attrs.numPages ? $parse($attrs.numPages).assign : angular.noop;\n      ctrl.ngModelCtrl = { $setViewValue: angular.noop }; // nullModelCtrl\n      ctrl._watchers = [];\n\n      ctrl.init = function(ngModelCtrl, config) {\n        ctrl.ngModelCtrl = ngModelCtrl;\n        ctrl.config = config;\n\n        ngModelCtrl.$render = function() {\n          ctrl.render();\n        };\n\n        if ($attrs.itemsPerPage) {\n          ctrl._watchers.push($scope.$parent.$watch($attrs.itemsPerPage, function(value) {\n            ctrl.itemsPerPage = parseInt(value, 10);\n            $scope.totalPages = ctrl.calculateTotalPages();\n            ctrl.updatePage();\n          }));\n        } else {\n          ctrl.itemsPerPage = config.itemsPerPage;\n        }\n\n        $scope.$watch('totalItems', function(newTotal, oldTotal) {\n          if (angular.isDefined(newTotal) || newTotal !== oldTotal) {\n            $scope.totalPages = ctrl.calculateTotalPages();\n            ctrl.updatePage();\n          }\n        });\n      };\n\n      ctrl.calculateTotalPages = function() {\n        var totalPages = ctrl.itemsPerPage < 1 ? 1 : Math.ceil($scope.totalItems / ctrl.itemsPerPage);\n        return Math.max(totalPages || 0, 1);\n      };\n\n      ctrl.render = function() {\n        $scope.page = parseInt(ctrl.ngModelCtrl.$viewValue, 10) || 1;\n      };\n\n      $scope.selectPage = function(page, evt) {\n        if (evt) {\n          evt.preventDefault();\n        }\n\n        var clickAllowed = !$scope.ngDisabled || !evt;\n        if (clickAllowed && $scope.page !== page && page > 0 && page <= $scope.totalPages) {\n          if (evt && evt.target) {\n            evt.target.blur();\n          }\n          ctrl.ngModelCtrl.$setViewValue(page);\n          ctrl.ngModelCtrl.$render();\n        }\n      };\n\n      $scope.getText = function(key) {\n        return $scope[key + 'Text'] || ctrl.config[key + 'Text'];\n      };\n\n      $scope.noPrevious = function() {\n        return $scope.page === 1;\n      };\n\n      $scope.noNext = function() {\n        return $scope.page === $scope.totalPages;\n      };\n\n      ctrl.updatePage = function() {\n        ctrl.setNumPages($scope.$parent, $scope.totalPages); // Readonly variable\n\n        if ($scope.page > $scope.totalPages) {\n          $scope.selectPage($scope.totalPages);\n        } else {\n          ctrl.ngModelCtrl.$render();\n        }\n      };\n\n      $scope.$on('$destroy', function() {\n        while (ctrl._watchers.length) {\n          ctrl._watchers.shift()();\n        }\n      });\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.pager', ['ui.bootstrap.paging', 'ui.bootstrap.tabindex'])\n\n.controller('UibPagerController', ['$scope', '$attrs', 'uibPaging', 'uibPagerConfig', function($scope, $attrs, uibPaging, uibPagerConfig) {\n  $scope.align = angular.isDefined($attrs.align) ? $scope.$parent.$eval($attrs.align) : uibPagerConfig.align;\n\n  uibPaging.create(this, $scope, $attrs);\n}])\n\n.constant('uibPagerConfig', {\n  itemsPerPage: 10,\n  previousText: '« Previous',\n  nextText: 'Next »',\n  align: true\n})\n\n.directive('uibPager', ['uibPagerConfig', function(uibPagerConfig) {\n  return {\n    scope: {\n      totalItems: '=',\n      previousText: '@',\n      nextText: '@',\n      ngDisabled: '='\n    },\n    require: ['uibPager', '?ngModel'],\n    restrict: 'A',\n    controller: 'UibPagerController',\n    controllerAs: 'pager',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/pager/pager.html';\n    },\n    link: function(scope, element, attrs, ctrls) {\n      element.addClass('pager');\n      var paginationCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (!ngModelCtrl) {\n        return; // do nothing if no ng-model\n      }\n\n      paginationCtrl.init(ngModelCtrl, uibPagerConfig);\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.pagination', ['ui.bootstrap.paging', 'ui.bootstrap.tabindex'])\n.controller('UibPaginationController', ['$scope', '$attrs', '$parse', 'uibPaging', 'uibPaginationConfig', function($scope, $attrs, $parse, uibPaging, uibPaginationConfig) {\n  var ctrl = this;\n  // Setup configuration parameters\n  var maxSize = angular.isDefined($attrs.maxSize) ? $scope.$parent.$eval($attrs.maxSize) : uibPaginationConfig.maxSize,\n    rotate = angular.isDefined($attrs.rotate) ? $scope.$parent.$eval($attrs.rotate) : uibPaginationConfig.rotate,\n    forceEllipses = angular.isDefined($attrs.forceEllipses) ? $scope.$parent.$eval($attrs.forceEllipses) : uibPaginationConfig.forceEllipses,\n    boundaryLinkNumbers = angular.isDefined($attrs.boundaryLinkNumbers) ? $scope.$parent.$eval($attrs.boundaryLinkNumbers) : uibPaginationConfig.boundaryLinkNumbers,\n    pageLabel = angular.isDefined($attrs.pageLabel) ? function(idx) { return $scope.$parent.$eval($attrs.pageLabel, {$page: idx}); } : angular.identity;\n  $scope.boundaryLinks = angular.isDefined($attrs.boundaryLinks) ? $scope.$parent.$eval($attrs.boundaryLinks) : uibPaginationConfig.boundaryLinks;\n  $scope.directionLinks = angular.isDefined($attrs.directionLinks) ? $scope.$parent.$eval($attrs.directionLinks) : uibPaginationConfig.directionLinks;\n\n  uibPaging.create(this, $scope, $attrs);\n\n  if ($attrs.maxSize) {\n    ctrl._watchers.push($scope.$parent.$watch($parse($attrs.maxSize), function(value) {\n      maxSize = parseInt(value, 10);\n      ctrl.render();\n    }));\n  }\n\n  // Create page object used in template\n  function makePage(number, text, isActive) {\n    return {\n      number: number,\n      text: text,\n      active: isActive\n    };\n  }\n\n  function getPages(currentPage, totalPages) {\n    var pages = [];\n\n    // Default page limits\n    var startPage = 1, endPage = totalPages;\n    var isMaxSized = angular.isDefined(maxSize) && maxSize < totalPages;\n\n    // recompute if maxSize\n    if (isMaxSized) {\n      if (rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(maxSize / 2), 1);\n        endPage = startPage + maxSize - 1;\n\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage = (Math.ceil(currentPage / maxSize) - 1) * maxSize + 1;\n\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + maxSize - 1, totalPages);\n      }\n    }\n\n    // Add page number links\n    for (var number = startPage; number <= endPage; number++) {\n      var page = makePage(number, pageLabel(number), number === currentPage);\n      pages.push(page);\n    }\n\n    // Add links to move between page sets\n    if (isMaxSized && maxSize > 0 && (!rotate || forceEllipses || boundaryLinkNumbers)) {\n      if (startPage > 1) {\n        if (!boundaryLinkNumbers || startPage > 3) { //need ellipsis for all options unless range is too close to beginning\n        var previousPageSet = makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n        if (boundaryLinkNumbers) {\n          if (startPage === 3) { //need to replace ellipsis when the buttons would be sequential\n            var secondPageLink = makePage(2, '2', false);\n            pages.unshift(secondPageLink);\n          }\n          //add the first page\n          var firstPageLink = makePage(1, '1', false);\n          pages.unshift(firstPageLink);\n        }\n      }\n\n      if (endPage < totalPages) {\n        if (!boundaryLinkNumbers || endPage < totalPages - 2) { //need ellipsis for all options unless range is too close to end\n        var nextPageSet = makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n        if (boundaryLinkNumbers) {\n          if (endPage === totalPages - 2) { //need to replace ellipsis when the buttons would be sequential\n            var secondToLastPageLink = makePage(totalPages - 1, totalPages - 1, false);\n            pages.push(secondToLastPageLink);\n          }\n          //add the last page\n          var lastPageLink = makePage(totalPages, totalPages, false);\n          pages.push(lastPageLink);\n        }\n      }\n    }\n    return pages;\n  }\n\n  var originalRender = this.render;\n  this.render = function() {\n    originalRender();\n    if ($scope.page > 0 && $scope.page <= $scope.totalPages) {\n      $scope.pages = getPages($scope.page, $scope.totalPages);\n    }\n  };\n}])\n\n.constant('uibPaginationConfig', {\n  itemsPerPage: 10,\n  boundaryLinks: false,\n  boundaryLinkNumbers: false,\n  directionLinks: true,\n  firstText: 'First',\n  previousText: 'Previous',\n  nextText: 'Next',\n  lastText: 'Last',\n  rotate: true,\n  forceEllipses: false\n})\n\n.directive('uibPagination', ['$parse', 'uibPaginationConfig', function($parse, uibPaginationConfig) {\n  return {\n    scope: {\n      totalItems: '=',\n      firstText: '@',\n      previousText: '@',\n      nextText: '@',\n      lastText: '@',\n      ngDisabled:'='\n    },\n    require: ['uibPagination', '?ngModel'],\n    restrict: 'A',\n    controller: 'UibPaginationController',\n    controllerAs: 'pagination',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/pagination/pagination.html';\n    },\n    link: function(scope, element, attrs, ctrls) {\n      element.addClass('pagination');\n      var paginationCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (!ngModelCtrl) {\n         return; // do nothing if no ng-model\n      }\n\n      paginationCtrl.init(ngModelCtrl, uibPaginationConfig);\n    }\n  };\n}]);\n\n/**\n * The following features are still outstanding: animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, html tooltips, and selector delegation.\n */\nangular.module('ui.bootstrap.tooltip', ['ui.bootstrap.position', 'ui.bootstrap.stackedMap'])\n\n/**\n * The $tooltip service creates tooltip- and popover-like directives as well as\n * houses global options for them.\n */\n.provider('$uibTooltip', function() {\n  // The default options tooltip and popover.\n  var defaultOptions = {\n    placement: 'top',\n    placementClassPrefix: '',\n    animation: true,\n    popupDelay: 0,\n    popupCloseDelay: 0,\n    useContentExp: false\n  };\n\n  // Default hide triggers for each show trigger\n  var triggerMap = {\n    'mouseenter': 'mouseleave',\n    'click': 'click',\n    'outsideClick': 'outsideClick',\n    'focus': 'blur',\n    'none': ''\n  };\n\n  // The options specified to the provider globally.\n  var globalOptions = {};\n\n  /**\n   * `options({})` allows global configuration of all tooltips in the\n   * application.\n   *\n   *   var app = angular.module( 'App', ['ui.bootstrap.tooltip'], function( $tooltipProvider ) {\n   *     // place tooltips left instead of top by default\n   *     $tooltipProvider.options( { placement: 'left' } );\n   *   });\n   */\n\tthis.options = function(value) {\n\t\tangular.extend(globalOptions, value);\n\t};\n\n  /**\n   * This allows you to extend the set of trigger mappings available. E.g.:\n   *\n   *   $tooltipProvider.setTriggers( { 'openTrigger': 'closeTrigger' } );\n   */\n  this.setTriggers = function setTriggers(triggers) {\n    angular.extend(triggerMap, triggers);\n  };\n\n  /**\n   * This is a helper function for translating camel-case to snake_case.\n   */\n  function snake_case(name) {\n    var regexp = /[A-Z]/g;\n    var separator = '-';\n    return name.replace(regexp, function(letter, pos) {\n      return (pos ? separator : '') + letter.toLowerCase();\n    });\n  }\n\n  /**\n   * Returns the actual instance of the $tooltip service.\n   * TODO support multiple triggers\n   */\n  this.$get = ['$window', '$compile', '$timeout', '$document', '$uibPosition', '$interpolate', '$rootScope', '$parse', '$$stackedMap', function($window, $compile, $timeout, $document, $position, $interpolate, $rootScope, $parse, $$stackedMap) {\n    var openedTooltips = $$stackedMap.createNew();\n    $document.on('keyup', keypressListener);\n\n    $rootScope.$on('$destroy', function() {\n      $document.off('keyup', keypressListener);\n    });\n\n    function keypressListener(e) {\n      if (e.which === 27) {\n        var last = openedTooltips.top();\n        if (last) {\n          last.value.close();\n          last = null;\n        }\n      }\n    }\n\n    return function $tooltip(ttType, prefix, defaultTriggerShow, options) {\n      options = angular.extend({}, defaultOptions, globalOptions, options);\n\n      /**\n       * Returns an object of show and hide triggers.\n       *\n       * If a trigger is supplied,\n       * it is used to show the tooltip; otherwise, it will use the `trigger`\n       * option passed to the `$tooltipProvider.options` method; else it will\n       * default to the trigger supplied to this directive factory.\n       *\n       * The hide trigger is based on the show trigger. If the `trigger` option\n       * was passed to the `$tooltipProvider.options` method, it will use the\n       * mapped trigger from `triggerMap` or the passed trigger if the map is\n       * undefined; otherwise, it uses the `triggerMap` value of the show\n       * trigger; else it will just use the show trigger.\n       */\n      function getTriggers(trigger) {\n        var show = (trigger || options.trigger || defaultTriggerShow).split(' ');\n        var hide = show.map(function(trigger) {\n          return triggerMap[trigger] || trigger;\n        });\n        return {\n          show: show,\n          hide: hide\n        };\n      }\n\n      var directiveName = snake_case(ttType);\n\n      var startSym = $interpolate.startSymbol();\n      var endSym = $interpolate.endSymbol();\n      var template =\n        '<div '+ directiveName + '-popup ' +\n          'uib-title=\"' + startSym + 'title' + endSym + '\" ' +\n          (options.useContentExp ?\n            'content-exp=\"contentExp()\" ' :\n            'content=\"' + startSym + 'content' + endSym + '\" ') +\n          'origin-scope=\"origScope\" ' +\n          'class=\"uib-position-measure ' + prefix + '\" ' +\n          'tooltip-animation-class=\"fade\"' +\n          'uib-tooltip-classes ' +\n          'ng-class=\"{ in: isOpen }\" ' +\n          '>' +\n        '</div>';\n\n      return {\n        compile: function(tElem, tAttrs) {\n          var tooltipLinker = $compile(template);\n\n          return function link(scope, element, attrs, tooltipCtrl) {\n            var tooltip;\n            var tooltipLinkedScope;\n            var transitionTimeout;\n            var showTimeout;\n            var hideTimeout;\n            var positionTimeout;\n            var adjustmentTimeout;\n            var appendToBody = angular.isDefined(options.appendToBody) ? options.appendToBody : false;\n            var triggers = getTriggers(undefined);\n            var hasEnableExp = angular.isDefined(attrs[prefix + 'Enable']);\n            var ttScope = scope.$new(true);\n            var repositionScheduled = false;\n            var isOpenParse = angular.isDefined(attrs[prefix + 'IsOpen']) ? $parse(attrs[prefix + 'IsOpen']) : false;\n            var contentParse = options.useContentExp ? $parse(attrs[ttType]) : false;\n            var observers = [];\n            var lastPlacement;\n\n            var positionTooltip = function() {\n              // check if tooltip exists and is not empty\n              if (!tooltip || !tooltip.html()) { return; }\n\n              if (!positionTimeout) {\n                positionTimeout = $timeout(function() {\n                  var ttPosition = $position.positionElements(element, tooltip, ttScope.placement, appendToBody);\n                  var initialHeight = angular.isDefined(tooltip.offsetHeight) ? tooltip.offsetHeight : tooltip.prop('offsetHeight');\n                  var elementPos = appendToBody ? $position.offset(element) : $position.position(element);\n                  tooltip.css({ top: ttPosition.top + 'px', left: ttPosition.left + 'px' });\n                  var placementClasses = ttPosition.placement.split('-');\n\n                  if (!tooltip.hasClass(placementClasses[0])) {\n                    tooltip.removeClass(lastPlacement.split('-')[0]);\n                    tooltip.addClass(placementClasses[0]);\n                  }\n\n                  if (!tooltip.hasClass(options.placementClassPrefix + ttPosition.placement)) {\n                    tooltip.removeClass(options.placementClassPrefix + lastPlacement);\n                    tooltip.addClass(options.placementClassPrefix + ttPosition.placement);\n                  }\n\n                  adjustmentTimeout = $timeout(function() {\n                    var currentHeight = angular.isDefined(tooltip.offsetHeight) ? tooltip.offsetHeight : tooltip.prop('offsetHeight');\n                    var adjustment = $position.adjustTop(placementClasses, elementPos, initialHeight, currentHeight);\n                    if (adjustment) {\n                      tooltip.css(adjustment);\n                    }\n                    adjustmentTimeout = null;\n                  }, 0, false);\n\n                  // first time through tt element will have the\n                  // uib-position-measure class or if the placement\n                  // has changed we need to position the arrow.\n                  if (tooltip.hasClass('uib-position-measure')) {\n                    $position.positionArrow(tooltip, ttPosition.placement);\n                    tooltip.removeClass('uib-position-measure');\n                  } else if (lastPlacement !== ttPosition.placement) {\n                    $position.positionArrow(tooltip, ttPosition.placement);\n                  }\n                  lastPlacement = ttPosition.placement;\n\n                  positionTimeout = null;\n                }, 0, false);\n              }\n            };\n\n            // Set up the correct scope to allow transclusion later\n            ttScope.origScope = scope;\n\n            // By default, the tooltip is not open.\n            // TODO add ability to start tooltip opened\n            ttScope.isOpen = false;\n\n            function toggleTooltipBind() {\n              if (!ttScope.isOpen) {\n                showTooltipBind();\n              } else {\n                hideTooltipBind();\n              }\n            }\n\n            // Show the tooltip with delay if specified, otherwise show it immediately\n            function showTooltipBind() {\n              if (hasEnableExp && !scope.$eval(attrs[prefix + 'Enable'])) {\n                return;\n              }\n\n              cancelHide();\n              prepareTooltip();\n\n              if (ttScope.popupDelay) {\n                // Do nothing if the tooltip was already scheduled to pop-up.\n                // This happens if show is triggered multiple times before any hide is triggered.\n                if (!showTimeout) {\n                  showTimeout = $timeout(show, ttScope.popupDelay, false);\n                }\n              } else {\n                show();\n              }\n            }\n\n            function hideTooltipBind() {\n              cancelShow();\n\n              if (ttScope.popupCloseDelay) {\n                if (!hideTimeout) {\n                  hideTimeout = $timeout(hide, ttScope.popupCloseDelay, false);\n                }\n              } else {\n                hide();\n              }\n            }\n\n            // Show the tooltip popup element.\n            function show() {\n              cancelShow();\n              cancelHide();\n\n              // Don't show empty tooltips.\n              if (!ttScope.content) {\n                return angular.noop;\n              }\n\n              createTooltip();\n\n              // And show the tooltip.\n              ttScope.$evalAsync(function() {\n                ttScope.isOpen = true;\n                assignIsOpen(true);\n                positionTooltip();\n              });\n            }\n\n            function cancelShow() {\n              if (showTimeout) {\n                $timeout.cancel(showTimeout);\n                showTimeout = null;\n              }\n\n              if (positionTimeout) {\n                $timeout.cancel(positionTimeout);\n                positionTimeout = null;\n              }\n            }\n\n            // Hide the tooltip popup element.\n            function hide() {\n              if (!ttScope) {\n                return;\n              }\n\n              // First things first: we don't show it anymore.\n              ttScope.$evalAsync(function() {\n                if (ttScope) {\n                  ttScope.isOpen = false;\n                  assignIsOpen(false);\n                  // And now we remove it from the DOM. However, if we have animation, we\n                  // need to wait for it to expire beforehand.\n                  // FIXME: this is a placeholder for a port of the transitions library.\n                  // The fade transition in TWBS is 150ms.\n                  if (ttScope.animation) {\n                    if (!transitionTimeout) {\n                      transitionTimeout = $timeout(removeTooltip, 150, false);\n                    }\n                  } else {\n                    removeTooltip();\n                  }\n                }\n              });\n            }\n\n            function cancelHide() {\n              if (hideTimeout) {\n                $timeout.cancel(hideTimeout);\n                hideTimeout = null;\n              }\n\n              if (transitionTimeout) {\n                $timeout.cancel(transitionTimeout);\n                transitionTimeout = null;\n              }\n            }\n\n            function createTooltip() {\n              // There can only be one tooltip element per directive shown at once.\n              if (tooltip) {\n                return;\n              }\n\n              tooltipLinkedScope = ttScope.$new();\n              tooltip = tooltipLinker(tooltipLinkedScope, function(tooltip) {\n                if (appendToBody) {\n                  $document.find('body').append(tooltip);\n                } else {\n                  element.after(tooltip);\n                }\n              });\n\n              openedTooltips.add(ttScope, {\n                close: hide\n              });\n\n              prepObservers();\n            }\n\n            function removeTooltip() {\n              cancelShow();\n              cancelHide();\n              unregisterObservers();\n\n              if (tooltip) {\n                tooltip.remove();\n                \n                tooltip = null;\n                if (adjustmentTimeout) {\n                  $timeout.cancel(adjustmentTimeout);\n                }\n              }\n\n              openedTooltips.remove(ttScope);\n              \n              if (tooltipLinkedScope) {\n                tooltipLinkedScope.$destroy();\n                tooltipLinkedScope = null;\n              }\n            }\n\n            /**\n             * Set the initial scope values. Once\n             * the tooltip is created, the observers\n             * will be added to keep things in sync.\n             */\n            function prepareTooltip() {\n              ttScope.title = attrs[prefix + 'Title'];\n              if (contentParse) {\n                ttScope.content = contentParse(scope);\n              } else {\n                ttScope.content = attrs[ttType];\n              }\n\n              ttScope.popupClass = attrs[prefix + 'Class'];\n              ttScope.placement = angular.isDefined(attrs[prefix + 'Placement']) ? attrs[prefix + 'Placement'] : options.placement;\n              var placement = $position.parsePlacement(ttScope.placement);\n              lastPlacement = placement[1] ? placement[0] + '-' + placement[1] : placement[0];\n\n              var delay = parseInt(attrs[prefix + 'PopupDelay'], 10);\n              var closeDelay = parseInt(attrs[prefix + 'PopupCloseDelay'], 10);\n              ttScope.popupDelay = !isNaN(delay) ? delay : options.popupDelay;\n              ttScope.popupCloseDelay = !isNaN(closeDelay) ? closeDelay : options.popupCloseDelay;\n            }\n\n            function assignIsOpen(isOpen) {\n              if (isOpenParse && angular.isFunction(isOpenParse.assign)) {\n                isOpenParse.assign(scope, isOpen);\n              }\n            }\n\n            ttScope.contentExp = function() {\n              return ttScope.content;\n            };\n\n            /**\n             * Observe the relevant attributes.\n             */\n            attrs.$observe('disabled', function(val) {\n              if (val) {\n                cancelShow();\n              }\n\n              if (val && ttScope.isOpen) {\n                hide();\n              }\n            });\n\n            if (isOpenParse) {\n              scope.$watch(isOpenParse, function(val) {\n                if (ttScope && !val === ttScope.isOpen) {\n                  toggleTooltipBind();\n                }\n              });\n            }\n\n            function prepObservers() {\n              observers.length = 0;\n\n              if (contentParse) {\n                observers.push(\n                  scope.$watch(contentParse, function(val) {\n                    ttScope.content = val;\n                    if (!val && ttScope.isOpen) {\n                      hide();\n                    }\n                  })\n                );\n\n                observers.push(\n                  tooltipLinkedScope.$watch(function() {\n                    if (!repositionScheduled) {\n                      repositionScheduled = true;\n                      tooltipLinkedScope.$$postDigest(function() {\n                        repositionScheduled = false;\n                        if (ttScope && ttScope.isOpen) {\n                          positionTooltip();\n                        }\n                      });\n                    }\n                  })\n                );\n              } else {\n                observers.push(\n                  attrs.$observe(ttType, function(val) {\n                    ttScope.content = val;\n                    if (!val && ttScope.isOpen) {\n                      hide();\n                    } else {\n                      positionTooltip();\n                    }\n                  })\n                );\n              }\n\n              observers.push(\n                attrs.$observe(prefix + 'Title', function(val) {\n                  ttScope.title = val;\n                  if (ttScope.isOpen) {\n                    positionTooltip();\n                  }\n                })\n              );\n\n              observers.push(\n                attrs.$observe(prefix + 'Placement', function(val) {\n                  ttScope.placement = val ? val : options.placement;\n                  if (ttScope.isOpen) {\n                    positionTooltip();\n                  }\n                })\n              );\n            }\n\n            function unregisterObservers() {\n              if (observers.length) {\n                angular.forEach(observers, function(observer) {\n                  observer();\n                });\n                observers.length = 0;\n              }\n            }\n\n            // hide tooltips/popovers for outsideClick trigger\n            function bodyHideTooltipBind(e) {\n              if (!ttScope || !ttScope.isOpen || !tooltip) {\n                return;\n              }\n              // make sure the tooltip/popover link or tool tooltip/popover itself were not clicked\n              if (!element[0].contains(e.target) && !tooltip[0].contains(e.target)) {\n                hideTooltipBind();\n              }\n            }\n\n            var unregisterTriggers = function() {\n              triggers.show.forEach(function(trigger) {\n                if (trigger === 'outsideClick') {\n                  element.off('click', toggleTooltipBind);\n                } else {\n                  element.off(trigger, showTooltipBind);\n                  element.off(trigger, toggleTooltipBind);\n                }\n              });\n              triggers.hide.forEach(function(trigger) {\n                if (trigger === 'outsideClick') {\n                  $document.off('click', bodyHideTooltipBind);\n                } else {\n                  element.off(trigger, hideTooltipBind);\n                }\n              });\n            };\n\n            function prepTriggers() {\n              var showTriggers = [], hideTriggers = [];\n              var val = scope.$eval(attrs[prefix + 'Trigger']);\n              unregisterTriggers();\n\n              if (angular.isObject(val)) {\n                Object.keys(val).forEach(function(key) {\n                  showTriggers.push(key);\n                  hideTriggers.push(val[key]);\n                });\n                triggers = {\n                  show: showTriggers,\n                  hide: hideTriggers\n                };\n              } else {\n                triggers = getTriggers(val);\n              }\n\n              if (triggers.show !== 'none') {\n                triggers.show.forEach(function(trigger, idx) {\n                  if (trigger === 'outsideClick') {\n                    element.on('click', toggleTooltipBind);\n                    $document.on('click', bodyHideTooltipBind);\n                  } else if (trigger === triggers.hide[idx]) {\n                    element.on(trigger, toggleTooltipBind);\n                  } else if (trigger) {\n                    element.on(trigger, showTooltipBind);\n                    element.on(triggers.hide[idx], hideTooltipBind);\n                  }\n\n                  element.on('keypress', function(e) {\n                    if (e.which === 27) {\n                      hideTooltipBind();\n                    }\n                  });\n                });\n              }\n            }\n\n            prepTriggers();\n\n            var animation = scope.$eval(attrs[prefix + 'Animation']);\n            ttScope.animation = angular.isDefined(animation) ? !!animation : options.animation;\n\n            var appendToBodyVal;\n            var appendKey = prefix + 'AppendToBody';\n            if (appendKey in attrs && attrs[appendKey] === undefined) {\n              appendToBodyVal = true;\n            } else {\n              appendToBodyVal = scope.$eval(attrs[appendKey]);\n            }\n\n            appendToBody = angular.isDefined(appendToBodyVal) ? appendToBodyVal : appendToBody;\n\n            // Make sure tooltip is destroyed and removed.\n            scope.$on('$destroy', function onDestroyTooltip() {\n              unregisterTriggers();\n              removeTooltip();\n              ttScope = null;\n            });\n          };\n        }\n      };\n    };\n  }];\n})\n\n// This is mostly ngInclude code but with a custom scope\n.directive('uibTooltipTemplateTransclude', [\n         '$animate', '$sce', '$compile', '$templateRequest',\nfunction ($animate, $sce, $compile, $templateRequest) {\n  return {\n    link: function(scope, elem, attrs) {\n      var origScope = scope.$eval(attrs.tooltipTemplateTranscludeScope);\n\n      var changeCounter = 0,\n        currentScope,\n        previousElement,\n        currentElement;\n\n      var cleanupLastIncludeContent = function() {\n        if (previousElement) {\n          previousElement.remove();\n          previousElement = null;\n        }\n\n        if (currentScope) {\n          currentScope.$destroy();\n          currentScope = null;\n        }\n\n        if (currentElement) {\n          $animate.leave(currentElement).then(function() {\n            previousElement = null;\n          });\n          previousElement = currentElement;\n          currentElement = null;\n        }\n      };\n\n      scope.$watch($sce.parseAsResourceUrl(attrs.uibTooltipTemplateTransclude), function(src) {\n        var thisChangeId = ++changeCounter;\n\n        if (src) {\n          //set the 2nd param to true to ignore the template request error so that the inner\n          //contents and scope can be cleaned up.\n          $templateRequest(src, true).then(function(response) {\n            if (thisChangeId !== changeCounter) { return; }\n            var newScope = origScope.$new();\n            var template = response;\n\n            var clone = $compile(template)(newScope, function(clone) {\n              cleanupLastIncludeContent();\n              $animate.enter(clone, elem);\n            });\n\n            currentScope = newScope;\n            currentElement = clone;\n\n            currentScope.$emit('$includeContentLoaded', src);\n          }, function() {\n            if (thisChangeId === changeCounter) {\n              cleanupLastIncludeContent();\n              scope.$emit('$includeContentError', src);\n            }\n          });\n          scope.$emit('$includeContentRequested', src);\n        } else {\n          cleanupLastIncludeContent();\n        }\n      });\n\n      scope.$on('$destroy', cleanupLastIncludeContent);\n    }\n  };\n}])\n\n/**\n * Note that it's intentional that these classes are *not* applied through $animate.\n * They must not be animated as they're expected to be present on the tooltip on\n * initialization.\n */\n.directive('uibTooltipClasses', ['$uibPosition', function($uibPosition) {\n  return {\n    restrict: 'A',\n    link: function(scope, element, attrs) {\n      // need to set the primary position so the\n      // arrow has space during position measure.\n      // tooltip.positionTooltip()\n      if (scope.placement) {\n        // // There are no top-left etc... classes\n        // // in TWBS, so we need the primary position.\n        var position = $uibPosition.parsePlacement(scope.placement);\n        element.addClass(position[0]);\n      }\n\n      if (scope.popupClass) {\n        element.addClass(scope.popupClass);\n      }\n\n      if (scope.animation) {\n        element.addClass(attrs.tooltipAnimationClass);\n      }\n    }\n  };\n}])\n\n.directive('uibTooltipPopup', function() {\n  return {\n    restrict: 'A',\n    scope: { content: '@' },\n    templateUrl: 'uib/template/tooltip/tooltip-popup.html'\n  };\n})\n\n.directive('uibTooltip', [ '$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibTooltip', 'tooltip', 'mouseenter');\n}])\n\n.directive('uibTooltipTemplatePopup', function() {\n  return {\n    restrict: 'A',\n    scope: { contentExp: '&', originScope: '&' },\n    templateUrl: 'uib/template/tooltip/tooltip-template-popup.html'\n  };\n})\n\n.directive('uibTooltipTemplate', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibTooltipTemplate', 'tooltip', 'mouseenter', {\n    useContentExp: true\n  });\n}])\n\n.directive('uibTooltipHtmlPopup', function() {\n  return {\n    restrict: 'A',\n    scope: { contentExp: '&' },\n    templateUrl: 'uib/template/tooltip/tooltip-html-popup.html'\n  };\n})\n\n.directive('uibTooltipHtml', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibTooltipHtml', 'tooltip', 'mouseenter', {\n    useContentExp: true\n  });\n}]);\n\n/**\n * The following features are still outstanding: popup delay, animation as a\n * function, placement as a function, inside, support for more triggers than\n * just mouse enter/leave, and selector delegatation.\n */\nangular.module('ui.bootstrap.popover', ['ui.bootstrap.tooltip'])\n\n.directive('uibPopoverTemplatePopup', function() {\n  return {\n    restrict: 'A',\n    scope: { uibTitle: '@', contentExp: '&', originScope: '&' },\n    templateUrl: 'uib/template/popover/popover-template.html'\n  };\n})\n\n.directive('uibPopoverTemplate', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibPopoverTemplate', 'popover', 'click', {\n    useContentExp: true\n  });\n}])\n\n.directive('uibPopoverHtmlPopup', function() {\n  return {\n    restrict: 'A',\n    scope: { contentExp: '&', uibTitle: '@' },\n    templateUrl: 'uib/template/popover/popover-html.html'\n  };\n})\n\n.directive('uibPopoverHtml', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibPopoverHtml', 'popover', 'click', {\n    useContentExp: true\n  });\n}])\n\n.directive('uibPopoverPopup', function() {\n  return {\n    restrict: 'A',\n    scope: { uibTitle: '@', content: '@' },\n    templateUrl: 'uib/template/popover/popover.html'\n  };\n})\n\n.directive('uibPopover', ['$uibTooltip', function($uibTooltip) {\n  return $uibTooltip('uibPopover', 'popover', 'click');\n}]);\n\nangular.module('ui.bootstrap.progressbar', [])\n\n.constant('uibProgressConfig', {\n  animate: true,\n  max: 100\n})\n\n.controller('UibProgressController', ['$scope', '$attrs', 'uibProgressConfig', function($scope, $attrs, progressConfig) {\n  var self = this,\n      animate = angular.isDefined($attrs.animate) ? $scope.$parent.$eval($attrs.animate) : progressConfig.animate;\n\n  this.bars = [];\n  $scope.max = getMaxOrDefault();\n\n  this.addBar = function(bar, element, attrs) {\n    if (!animate) {\n      element.css({'transition': 'none'});\n    }\n\n    this.bars.push(bar);\n\n    bar.max = getMaxOrDefault();\n    bar.title = attrs && angular.isDefined(attrs.title) ? attrs.title : 'progressbar';\n\n    bar.$watch('value', function(value) {\n      bar.recalculatePercentage();\n    });\n\n    bar.recalculatePercentage = function() {\n      var totalPercentage = self.bars.reduce(function(total, bar) {\n        bar.percent = +(100 * bar.value / bar.max).toFixed(2);\n        return total + bar.percent;\n      }, 0);\n\n      if (totalPercentage > 100) {\n        bar.percent -= totalPercentage - 100;\n      }\n    };\n\n    bar.$on('$destroy', function() {\n      element = null;\n      self.removeBar(bar);\n    });\n  };\n\n  this.removeBar = function(bar) {\n    this.bars.splice(this.bars.indexOf(bar), 1);\n    this.bars.forEach(function (bar) {\n      bar.recalculatePercentage();\n    });\n  };\n\n  //$attrs.$observe('maxParam', function(maxParam) {\n  $scope.$watch('maxParam', function(maxParam) {\n    self.bars.forEach(function(bar) {\n      bar.max = getMaxOrDefault();\n      bar.recalculatePercentage();\n    });\n  });\n\n  function getMaxOrDefault () {\n    return angular.isDefined($scope.maxParam) ? $scope.maxParam : progressConfig.max;\n  }\n}])\n\n.directive('uibProgress', function() {\n  return {\n    replace: true,\n    transclude: true,\n    controller: 'UibProgressController',\n    require: 'uibProgress',\n    scope: {\n      maxParam: '=?max'\n    },\n    templateUrl: 'uib/template/progressbar/progress.html'\n  };\n})\n\n.directive('uibBar', function() {\n  return {\n    replace: true,\n    transclude: true,\n    require: '^uibProgress',\n    scope: {\n      value: '=',\n      type: '@'\n    },\n    templateUrl: 'uib/template/progressbar/bar.html',\n    link: function(scope, element, attrs, progressCtrl) {\n      progressCtrl.addBar(scope, element, attrs);\n    }\n  };\n})\n\n.directive('uibProgressbar', function() {\n  return {\n    replace: true,\n    transclude: true,\n    controller: 'UibProgressController',\n    scope: {\n      value: '=',\n      maxParam: '=?max',\n      type: '@'\n    },\n    templateUrl: 'uib/template/progressbar/progressbar.html',\n    link: function(scope, element, attrs, progressCtrl) {\n      progressCtrl.addBar(scope, angular.element(element.children()[0]), {title: attrs.title});\n    }\n  };\n});\n\nangular.module('ui.bootstrap.rating', [])\n\n.constant('uibRatingConfig', {\n  max: 5,\n  stateOn: null,\n  stateOff: null,\n  enableReset: true,\n  titles: ['one', 'two', 'three', 'four', 'five']\n})\n\n.controller('UibRatingController', ['$scope', '$attrs', 'uibRatingConfig', function($scope, $attrs, ratingConfig) {\n  var ngModelCtrl = { $setViewValue: angular.noop },\n    self = this;\n\n  this.init = function(ngModelCtrl_) {\n    ngModelCtrl = ngModelCtrl_;\n    ngModelCtrl.$render = this.render;\n\n    ngModelCtrl.$formatters.push(function(value) {\n      if (angular.isNumber(value) && value << 0 !== value) {\n        value = Math.round(value);\n      }\n\n      return value;\n    });\n\n    this.stateOn = angular.isDefined($attrs.stateOn) ? $scope.$parent.$eval($attrs.stateOn) : ratingConfig.stateOn;\n    this.stateOff = angular.isDefined($attrs.stateOff) ? $scope.$parent.$eval($attrs.stateOff) : ratingConfig.stateOff;\n    this.enableReset = angular.isDefined($attrs.enableReset) ?\n      $scope.$parent.$eval($attrs.enableReset) : ratingConfig.enableReset;\n    var tmpTitles = angular.isDefined($attrs.titles) ? $scope.$parent.$eval($attrs.titles) : ratingConfig.titles;\n    this.titles = angular.isArray(tmpTitles) && tmpTitles.length > 0 ?\n      tmpTitles : ratingConfig.titles;\n\n    var ratingStates = angular.isDefined($attrs.ratingStates) ?\n      $scope.$parent.$eval($attrs.ratingStates) :\n      new Array(angular.isDefined($attrs.max) ? $scope.$parent.$eval($attrs.max) : ratingConfig.max);\n    $scope.range = this.buildTemplateObjects(ratingStates);\n  };\n\n  this.buildTemplateObjects = function(states) {\n    for (var i = 0, n = states.length; i < n; i++) {\n      states[i] = angular.extend({ index: i }, { stateOn: this.stateOn, stateOff: this.stateOff, title: this.getTitle(i) }, states[i]);\n    }\n    return states;\n  };\n\n  this.getTitle = function(index) {\n    if (index >= this.titles.length) {\n      return index + 1;\n    }\n\n    return this.titles[index];\n  };\n\n  $scope.rate = function(value) {\n    if (!$scope.readonly && value >= 0 && value <= $scope.range.length) {\n      var newViewValue = self.enableReset && ngModelCtrl.$viewValue === value ? 0 : value;\n      ngModelCtrl.$setViewValue(newViewValue);\n      ngModelCtrl.$render();\n    }\n  };\n\n  $scope.enter = function(value) {\n    if (!$scope.readonly) {\n      $scope.value = value;\n    }\n    $scope.onHover({value: value});\n  };\n\n  $scope.reset = function() {\n    $scope.value = ngModelCtrl.$viewValue;\n    $scope.onLeave();\n  };\n\n  $scope.onKeydown = function(evt) {\n    if (/(37|38|39|40)/.test(evt.which)) {\n      evt.preventDefault();\n      evt.stopPropagation();\n      $scope.rate($scope.value + (evt.which === 38 || evt.which === 39 ? 1 : -1));\n    }\n  };\n\n  this.render = function() {\n    $scope.value = ngModelCtrl.$viewValue;\n    $scope.title = self.getTitle($scope.value - 1);\n  };\n}])\n\n.directive('uibRating', function() {\n  return {\n    require: ['uibRating', 'ngModel'],\n    restrict: 'A',\n    scope: {\n      readonly: '=?readOnly',\n      onHover: '&',\n      onLeave: '&'\n    },\n    controller: 'UibRatingController',\n    templateUrl: 'uib/template/rating/rating.html',\n    link: function(scope, element, attrs, ctrls) {\n      var ratingCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n      ratingCtrl.init(ngModelCtrl);\n    }\n  };\n});\n\nangular.module('ui.bootstrap.tabs', [])\n\n.controller('UibTabsetController', ['$scope', function ($scope) {\n  var ctrl = this,\n    oldIndex;\n  ctrl.tabs = [];\n\n  ctrl.select = function(index, evt) {\n    if (!destroyed) {\n      var previousIndex = findTabIndex(oldIndex);\n      var previousSelected = ctrl.tabs[previousIndex];\n      if (previousSelected) {\n        previousSelected.tab.onDeselect({\n          $event: evt,\n          $selectedIndex: index\n        });\n        if (evt && evt.isDefaultPrevented()) {\n          return;\n        }\n        previousSelected.tab.active = false;\n      }\n\n      var selected = ctrl.tabs[index];\n      if (selected) {\n        selected.tab.onSelect({\n          $event: evt\n        });\n        selected.tab.active = true;\n        ctrl.active = selected.index;\n        oldIndex = selected.index;\n      } else if (!selected && angular.isDefined(oldIndex)) {\n        ctrl.active = null;\n        oldIndex = null;\n      }\n    }\n  };\n\n  ctrl.addTab = function addTab(tab) {\n    ctrl.tabs.push({\n      tab: tab,\n      index: tab.index\n    });\n    ctrl.tabs.sort(function(t1, t2) {\n      if (t1.index > t2.index) {\n        return 1;\n      }\n\n      if (t1.index < t2.index) {\n        return -1;\n      }\n\n      return 0;\n    });\n\n    if (tab.index === ctrl.active || !angular.isDefined(ctrl.active) && ctrl.tabs.length === 1) {\n      var newActiveIndex = findTabIndex(tab.index);\n      ctrl.select(newActiveIndex);\n    }\n  };\n\n  ctrl.removeTab = function removeTab(tab) {\n    var index;\n    for (var i = 0; i < ctrl.tabs.length; i++) {\n      if (ctrl.tabs[i].tab === tab) {\n        index = i;\n        break;\n      }\n    }\n\n    if (ctrl.tabs[index].index === ctrl.active) {\n      var newActiveTabIndex = index === ctrl.tabs.length - 1 ?\n        index - 1 : index + 1 % ctrl.tabs.length;\n      ctrl.select(newActiveTabIndex);\n    }\n\n    ctrl.tabs.splice(index, 1);\n  };\n\n  $scope.$watch('tabset.active', function(val) {\n    if (angular.isDefined(val) && val !== oldIndex) {\n      ctrl.select(findTabIndex(val));\n    }\n  });\n\n  var destroyed;\n  $scope.$on('$destroy', function() {\n    destroyed = true;\n  });\n\n  function findTabIndex(index) {\n    for (var i = 0; i < ctrl.tabs.length; i++) {\n      if (ctrl.tabs[i].index === index) {\n        return i;\n      }\n    }\n  }\n}])\n\n.directive('uibTabset', function() {\n  return {\n    transclude: true,\n    replace: true,\n    scope: {},\n    bindToController: {\n      active: '=?',\n      type: '@'\n    },\n    controller: 'UibTabsetController',\n    controllerAs: 'tabset',\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/tabs/tabset.html';\n    },\n    link: function(scope, element, attrs) {\n      scope.vertical = angular.isDefined(attrs.vertical) ?\n        scope.$parent.$eval(attrs.vertical) : false;\n      scope.justified = angular.isDefined(attrs.justified) ?\n        scope.$parent.$eval(attrs.justified) : false;\n    }\n  };\n})\n\n.directive('uibTab', ['$parse', function($parse) {\n  return {\n    require: '^uibTabset',\n    replace: true,\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || 'uib/template/tabs/tab.html';\n    },\n    transclude: true,\n    scope: {\n      heading: '@',\n      index: '=?',\n      classes: '@?',\n      onSelect: '&select', //This callback is called in contentHeadingTransclude\n                          //once it inserts the tab's content into the dom\n      onDeselect: '&deselect'\n    },\n    controller: function() {\n      //Empty controller so other directives can require being 'under' a tab\n    },\n    controllerAs: 'tab',\n    link: function(scope, elm, attrs, tabsetCtrl, transclude) {\n      scope.disabled = false;\n      if (attrs.disable) {\n        scope.$parent.$watch($parse(attrs.disable), function(value) {\n          scope.disabled = !! value;\n        });\n      }\n\n      if (angular.isUndefined(attrs.index)) {\n        if (tabsetCtrl.tabs && tabsetCtrl.tabs.length) {\n          scope.index = Math.max.apply(null, tabsetCtrl.tabs.map(function(t) { return t.index; })) + 1;\n        } else {\n          scope.index = 0;\n        }\n      }\n\n      if (angular.isUndefined(attrs.classes)) {\n        scope.classes = '';\n      }\n\n      scope.select = function(evt) {\n        if (!scope.disabled) {\n          var index;\n          for (var i = 0; i < tabsetCtrl.tabs.length; i++) {\n            if (tabsetCtrl.tabs[i].tab === scope) {\n              index = i;\n              break;\n            }\n          }\n\n          tabsetCtrl.select(index, evt);\n        }\n      };\n\n      tabsetCtrl.addTab(scope);\n      scope.$on('$destroy', function() {\n        tabsetCtrl.removeTab(scope);\n      });\n\n      //We need to transclude later, once the content container is ready.\n      //when this link happens, we're inside a tab heading.\n      scope.$transcludeFn = transclude;\n    }\n  };\n}])\n\n.directive('uibTabHeadingTransclude', function() {\n  return {\n    restrict: 'A',\n    require: '^uibTab',\n    link: function(scope, elm) {\n      scope.$watch('headingElement', function updateHeadingElement(heading) {\n        if (heading) {\n          elm.html('');\n          elm.append(heading);\n        }\n      });\n    }\n  };\n})\n\n.directive('uibTabContentTransclude', function() {\n  return {\n    restrict: 'A',\n    require: '^uibTabset',\n    link: function(scope, elm, attrs) {\n      var tab = scope.$eval(attrs.uibTabContentTransclude).tab;\n\n      //Now our tab is ready to be transcluded: both the tab heading area\n      //and the tab content area are loaded.  Transclude 'em both.\n      tab.$transcludeFn(tab.$parent, function(contents) {\n        angular.forEach(contents, function(node) {\n          if (isTabHeading(node)) {\n            //Let tabHeadingTransclude know.\n            tab.headingElement = node;\n          } else {\n            elm.append(node);\n          }\n        });\n      });\n    }\n  };\n\n  function isTabHeading(node) {\n    return node.tagName && (\n      node.hasAttribute('uib-tab-heading') ||\n      node.hasAttribute('data-uib-tab-heading') ||\n      node.hasAttribute('x-uib-tab-heading') ||\n      node.tagName.toLowerCase() === 'uib-tab-heading' ||\n      node.tagName.toLowerCase() === 'data-uib-tab-heading' ||\n      node.tagName.toLowerCase() === 'x-uib-tab-heading' ||\n      node.tagName.toLowerCase() === 'uib:tab-heading'\n    );\n  }\n});\n\nangular.module('ui.bootstrap.timepicker', [])\n\n.constant('uibTimepickerConfig', {\n  hourStep: 1,\n  minuteStep: 1,\n  secondStep: 1,\n  showMeridian: true,\n  showSeconds: false,\n  meridians: null,\n  readonlyInput: false,\n  mousewheel: true,\n  arrowkeys: true,\n  showSpinners: true,\n  templateUrl: 'uib/template/timepicker/timepicker.html'\n})\n\n.controller('UibTimepickerController', ['$scope', '$element', '$attrs', '$parse', '$log', '$locale', 'uibTimepickerConfig', function($scope, $element, $attrs, $parse, $log, $locale, timepickerConfig) {\n  var hoursModelCtrl, minutesModelCtrl, secondsModelCtrl;\n  var selected = new Date(),\n    watchers = [],\n    ngModelCtrl = { $setViewValue: angular.noop }, // nullModelCtrl\n    meridians = angular.isDefined($attrs.meridians) ? $scope.$parent.$eval($attrs.meridians) : timepickerConfig.meridians || $locale.DATETIME_FORMATS.AMPMS,\n    padHours = angular.isDefined($attrs.padHours) ? $scope.$parent.$eval($attrs.padHours) : true;\n\n  $scope.tabindex = angular.isDefined($attrs.tabindex) ? $attrs.tabindex : 0;\n  $element.removeAttr('tabindex');\n\n  this.init = function(ngModelCtrl_, inputs) {\n    ngModelCtrl = ngModelCtrl_;\n    ngModelCtrl.$render = this.render;\n\n    ngModelCtrl.$formatters.unshift(function(modelValue) {\n      return modelValue ? new Date(modelValue) : null;\n    });\n\n    var hoursInputEl = inputs.eq(0),\n        minutesInputEl = inputs.eq(1),\n        secondsInputEl = inputs.eq(2);\n\n    hoursModelCtrl = hoursInputEl.controller('ngModel');\n    minutesModelCtrl = minutesInputEl.controller('ngModel');\n    secondsModelCtrl = secondsInputEl.controller('ngModel');\n\n    var mousewheel = angular.isDefined($attrs.mousewheel) ? $scope.$parent.$eval($attrs.mousewheel) : timepickerConfig.mousewheel;\n\n    if (mousewheel) {\n      this.setupMousewheelEvents(hoursInputEl, minutesInputEl, secondsInputEl);\n    }\n\n    var arrowkeys = angular.isDefined($attrs.arrowkeys) ? $scope.$parent.$eval($attrs.arrowkeys) : timepickerConfig.arrowkeys;\n    if (arrowkeys) {\n      this.setupArrowkeyEvents(hoursInputEl, minutesInputEl, secondsInputEl);\n    }\n\n    $scope.readonlyInput = angular.isDefined($attrs.readonlyInput) ? $scope.$parent.$eval($attrs.readonlyInput) : timepickerConfig.readonlyInput;\n    this.setupInputEvents(hoursInputEl, minutesInputEl, secondsInputEl);\n  };\n\n  var hourStep = timepickerConfig.hourStep;\n  if ($attrs.hourStep) {\n    watchers.push($scope.$parent.$watch($parse($attrs.hourStep), function(value) {\n      hourStep = +value;\n    }));\n  }\n\n  var minuteStep = timepickerConfig.minuteStep;\n  if ($attrs.minuteStep) {\n    watchers.push($scope.$parent.$watch($parse($attrs.minuteStep), function(value) {\n      minuteStep = +value;\n    }));\n  }\n\n  var min;\n  watchers.push($scope.$parent.$watch($parse($attrs.min), function(value) {\n    var dt = new Date(value);\n    min = isNaN(dt) ? undefined : dt;\n  }));\n\n  var max;\n  watchers.push($scope.$parent.$watch($parse($attrs.max), function(value) {\n    var dt = new Date(value);\n    max = isNaN(dt) ? undefined : dt;\n  }));\n\n  var disabled = false;\n  if ($attrs.ngDisabled) {\n    watchers.push($scope.$parent.$watch($parse($attrs.ngDisabled), function(value) {\n      disabled = value;\n    }));\n  }\n\n  $scope.noIncrementHours = function() {\n    var incrementedSelected = addMinutes(selected, hourStep * 60);\n    return disabled || incrementedSelected > max ||\n      incrementedSelected < selected && incrementedSelected < min;\n  };\n\n  $scope.noDecrementHours = function() {\n    var decrementedSelected = addMinutes(selected, -hourStep * 60);\n    return disabled || decrementedSelected < min ||\n      decrementedSelected > selected && decrementedSelected > max;\n  };\n\n  $scope.noIncrementMinutes = function() {\n    var incrementedSelected = addMinutes(selected, minuteStep);\n    return disabled || incrementedSelected > max ||\n      incrementedSelected < selected && incrementedSelected < min;\n  };\n\n  $scope.noDecrementMinutes = function() {\n    var decrementedSelected = addMinutes(selected, -minuteStep);\n    return disabled || decrementedSelected < min ||\n      decrementedSelected > selected && decrementedSelected > max;\n  };\n\n  $scope.noIncrementSeconds = function() {\n    var incrementedSelected = addSeconds(selected, secondStep);\n    return disabled || incrementedSelected > max ||\n      incrementedSelected < selected && incrementedSelected < min;\n  };\n\n  $scope.noDecrementSeconds = function() {\n    var decrementedSelected = addSeconds(selected, -secondStep);\n    return disabled || decrementedSelected < min ||\n      decrementedSelected > selected && decrementedSelected > max;\n  };\n\n  $scope.noToggleMeridian = function() {\n    if (selected.getHours() < 12) {\n      return disabled || addMinutes(selected, 12 * 60) > max;\n    }\n\n    return disabled || addMinutes(selected, -12 * 60) < min;\n  };\n\n  var secondStep = timepickerConfig.secondStep;\n  if ($attrs.secondStep) {\n    watchers.push($scope.$parent.$watch($parse($attrs.secondStep), function(value) {\n      secondStep = +value;\n    }));\n  }\n\n  $scope.showSeconds = timepickerConfig.showSeconds;\n  if ($attrs.showSeconds) {\n    watchers.push($scope.$parent.$watch($parse($attrs.showSeconds), function(value) {\n      $scope.showSeconds = !!value;\n    }));\n  }\n\n  // 12H / 24H mode\n  $scope.showMeridian = timepickerConfig.showMeridian;\n  if ($attrs.showMeridian) {\n    watchers.push($scope.$parent.$watch($parse($attrs.showMeridian), function(value) {\n      $scope.showMeridian = !!value;\n\n      if (ngModelCtrl.$error.time) {\n        // Evaluate from template\n        var hours = getHoursFromTemplate(), minutes = getMinutesFromTemplate();\n        if (angular.isDefined(hours) && angular.isDefined(minutes)) {\n          selected.setHours(hours);\n          refresh();\n        }\n      } else {\n        updateTemplate();\n      }\n    }));\n  }\n\n  // Get $scope.hours in 24H mode if valid\n  function getHoursFromTemplate() {\n    var hours = +$scope.hours;\n    var valid = $scope.showMeridian ? hours > 0 && hours < 13 :\n      hours >= 0 && hours < 24;\n    if (!valid || $scope.hours === '') {\n      return undefined;\n    }\n\n    if ($scope.showMeridian) {\n      if (hours === 12) {\n        hours = 0;\n      }\n      if ($scope.meridian === meridians[1]) {\n        hours = hours + 12;\n      }\n    }\n    return hours;\n  }\n\n  function getMinutesFromTemplate() {\n    var minutes = +$scope.minutes;\n    var valid = minutes >= 0 && minutes < 60;\n    if (!valid || $scope.minutes === '') {\n      return undefined;\n    }\n    return minutes;\n  }\n\n  function getSecondsFromTemplate() {\n    var seconds = +$scope.seconds;\n    return seconds >= 0 && seconds < 60 ? seconds : undefined;\n  }\n\n  function pad(value, noPad) {\n    if (value === null) {\n      return '';\n    }\n\n    return angular.isDefined(value) && value.toString().length < 2 && !noPad ?\n      '0' + value : value.toString();\n  }\n\n  // Respond on mousewheel spin\n  this.setupMousewheelEvents = function(hoursInputEl, minutesInputEl, secondsInputEl) {\n    var isScrollingUp = function(e) {\n      if (e.originalEvent) {\n        e = e.originalEvent;\n      }\n      //pick correct delta variable depending on event\n      var delta = e.wheelDelta ? e.wheelDelta : -e.deltaY;\n      return e.detail || delta > 0;\n    };\n\n    hoursInputEl.bind('mousewheel wheel', function(e) {\n      if (!disabled) {\n        $scope.$apply(isScrollingUp(e) ? $scope.incrementHours() : $scope.decrementHours());\n      }\n      e.preventDefault();\n    });\n\n    minutesInputEl.bind('mousewheel wheel', function(e) {\n      if (!disabled) {\n        $scope.$apply(isScrollingUp(e) ? $scope.incrementMinutes() : $scope.decrementMinutes());\n      }\n      e.preventDefault();\n    });\n\n     secondsInputEl.bind('mousewheel wheel', function(e) {\n      if (!disabled) {\n        $scope.$apply(isScrollingUp(e) ? $scope.incrementSeconds() : $scope.decrementSeconds());\n      }\n      e.preventDefault();\n    });\n  };\n\n  // Respond on up/down arrowkeys\n  this.setupArrowkeyEvents = function(hoursInputEl, minutesInputEl, secondsInputEl) {\n    hoursInputEl.bind('keydown', function(e) {\n      if (!disabled) {\n        if (e.which === 38) { // up\n          e.preventDefault();\n          $scope.incrementHours();\n          $scope.$apply();\n        } else if (e.which === 40) { // down\n          e.preventDefault();\n          $scope.decrementHours();\n          $scope.$apply();\n        }\n      }\n    });\n\n    minutesInputEl.bind('keydown', function(e) {\n      if (!disabled) {\n        if (e.which === 38) { // up\n          e.preventDefault();\n          $scope.incrementMinutes();\n          $scope.$apply();\n        } else if (e.which === 40) { // down\n          e.preventDefault();\n          $scope.decrementMinutes();\n          $scope.$apply();\n        }\n      }\n    });\n\n    secondsInputEl.bind('keydown', function(e) {\n      if (!disabled) {\n        if (e.which === 38) { // up\n          e.preventDefault();\n          $scope.incrementSeconds();\n          $scope.$apply();\n        } else if (e.which === 40) { // down\n          e.preventDefault();\n          $scope.decrementSeconds();\n          $scope.$apply();\n        }\n      }\n    });\n  };\n\n  this.setupInputEvents = function(hoursInputEl, minutesInputEl, secondsInputEl) {\n    if ($scope.readonlyInput) {\n      $scope.updateHours = angular.noop;\n      $scope.updateMinutes = angular.noop;\n      $scope.updateSeconds = angular.noop;\n      return;\n    }\n\n    var invalidate = function(invalidHours, invalidMinutes, invalidSeconds) {\n      ngModelCtrl.$setViewValue(null);\n      ngModelCtrl.$setValidity('time', false);\n      if (angular.isDefined(invalidHours)) {\n        $scope.invalidHours = invalidHours;\n        if (hoursModelCtrl) {\n          hoursModelCtrl.$setValidity('hours', false);\n        }\n      }\n\n      if (angular.isDefined(invalidMinutes)) {\n        $scope.invalidMinutes = invalidMinutes;\n        if (minutesModelCtrl) {\n          minutesModelCtrl.$setValidity('minutes', false);\n        }\n      }\n\n      if (angular.isDefined(invalidSeconds)) {\n        $scope.invalidSeconds = invalidSeconds;\n        if (secondsModelCtrl) {\n          secondsModelCtrl.$setValidity('seconds', false);\n        }\n      }\n    };\n\n    $scope.updateHours = function() {\n      var hours = getHoursFromTemplate(),\n        minutes = getMinutesFromTemplate();\n\n      ngModelCtrl.$setDirty();\n\n      if (angular.isDefined(hours) && angular.isDefined(minutes)) {\n        selected.setHours(hours);\n        selected.setMinutes(minutes);\n        if (selected < min || selected > max) {\n          invalidate(true);\n        } else {\n          refresh('h');\n        }\n      } else {\n        invalidate(true);\n      }\n    };\n\n    hoursInputEl.bind('blur', function(e) {\n      ngModelCtrl.$setTouched();\n      if (modelIsEmpty()) {\n        makeValid();\n      } else if ($scope.hours === null || $scope.hours === '') {\n        invalidate(true);\n      } else if (!$scope.invalidHours && $scope.hours < 10) {\n        $scope.$apply(function() {\n          $scope.hours = pad($scope.hours, !padHours);\n        });\n      }\n    });\n\n    $scope.updateMinutes = function() {\n      var minutes = getMinutesFromTemplate(),\n        hours = getHoursFromTemplate();\n\n      ngModelCtrl.$setDirty();\n\n      if (angular.isDefined(minutes) && angular.isDefined(hours)) {\n        selected.setHours(hours);\n        selected.setMinutes(minutes);\n        if (selected < min || selected > max) {\n          invalidate(undefined, true);\n        } else {\n          refresh('m');\n        }\n      } else {\n        invalidate(undefined, true);\n      }\n    };\n\n    minutesInputEl.bind('blur', function(e) {\n      ngModelCtrl.$setTouched();\n      if (modelIsEmpty()) {\n        makeValid();\n      } else if ($scope.minutes === null) {\n        invalidate(undefined, true);\n      } else if (!$scope.invalidMinutes && $scope.minutes < 10) {\n        $scope.$apply(function() {\n          $scope.minutes = pad($scope.minutes);\n        });\n      }\n    });\n\n    $scope.updateSeconds = function() {\n      var seconds = getSecondsFromTemplate();\n\n      ngModelCtrl.$setDirty();\n\n      if (angular.isDefined(seconds)) {\n        selected.setSeconds(seconds);\n        refresh('s');\n      } else {\n        invalidate(undefined, undefined, true);\n      }\n    };\n\n    secondsInputEl.bind('blur', function(e) {\n      if (modelIsEmpty()) {\n        makeValid();\n      } else if (!$scope.invalidSeconds && $scope.seconds < 10) {\n        $scope.$apply( function() {\n          $scope.seconds = pad($scope.seconds);\n        });\n      }\n    });\n\n  };\n\n  this.render = function() {\n    var date = ngModelCtrl.$viewValue;\n\n    if (isNaN(date)) {\n      ngModelCtrl.$setValidity('time', false);\n      $log.error('Timepicker directive: \"ng-model\" value must be a Date object, a number of milliseconds since 01.01.1970 or a string representing an RFC2822 or ISO 8601 date.');\n    } else {\n      if (date) {\n        selected = date;\n      }\n\n      if (selected < min || selected > max) {\n        ngModelCtrl.$setValidity('time', false);\n        $scope.invalidHours = true;\n        $scope.invalidMinutes = true;\n      } else {\n        makeValid();\n      }\n      updateTemplate();\n    }\n  };\n\n  // Call internally when we know that model is valid.\n  function refresh(keyboardChange) {\n    makeValid();\n    ngModelCtrl.$setViewValue(new Date(selected));\n    updateTemplate(keyboardChange);\n  }\n\n  function makeValid() {\n    if (hoursModelCtrl) {\n      hoursModelCtrl.$setValidity('hours', true);\n    }\n\n    if (minutesModelCtrl) {\n      minutesModelCtrl.$setValidity('minutes', true);\n    }\n\n    if (secondsModelCtrl) {\n      secondsModelCtrl.$setValidity('seconds', true);\n    }\n\n    ngModelCtrl.$setValidity('time', true);\n    $scope.invalidHours = false;\n    $scope.invalidMinutes = false;\n    $scope.invalidSeconds = false;\n  }\n\n  function updateTemplate(keyboardChange) {\n    if (!ngModelCtrl.$modelValue) {\n      $scope.hours = null;\n      $scope.minutes = null;\n      $scope.seconds = null;\n      $scope.meridian = meridians[0];\n    } else {\n      var hours = selected.getHours(),\n        minutes = selected.getMinutes(),\n        seconds = selected.getSeconds();\n\n      if ($scope.showMeridian) {\n        hours = hours === 0 || hours === 12 ? 12 : hours % 12; // Convert 24 to 12 hour system\n      }\n\n      $scope.hours = keyboardChange === 'h' ? hours : pad(hours, !padHours);\n      if (keyboardChange !== 'm') {\n        $scope.minutes = pad(minutes);\n      }\n      $scope.meridian = selected.getHours() < 12 ? meridians[0] : meridians[1];\n\n      if (keyboardChange !== 's') {\n        $scope.seconds = pad(seconds);\n      }\n      $scope.meridian = selected.getHours() < 12 ? meridians[0] : meridians[1];\n    }\n  }\n\n  function addSecondsToSelected(seconds) {\n    selected = addSeconds(selected, seconds);\n    refresh();\n  }\n\n  function addMinutes(selected, minutes) {\n    return addSeconds(selected, minutes*60);\n  }\n\n  function addSeconds(date, seconds) {\n    var dt = new Date(date.getTime() + seconds * 1000);\n    var newDate = new Date(date);\n    newDate.setHours(dt.getHours(), dt.getMinutes(), dt.getSeconds());\n    return newDate;\n  }\n\n  function modelIsEmpty() {\n    return ($scope.hours === null || $scope.hours === '') &&\n      ($scope.minutes === null || $scope.minutes === '') &&\n      (!$scope.showSeconds || $scope.showSeconds && ($scope.seconds === null || $scope.seconds === ''));\n  }\n\n  $scope.showSpinners = angular.isDefined($attrs.showSpinners) ?\n    $scope.$parent.$eval($attrs.showSpinners) : timepickerConfig.showSpinners;\n\n  $scope.incrementHours = function() {\n    if (!$scope.noIncrementHours()) {\n      addSecondsToSelected(hourStep * 60 * 60);\n    }\n  };\n\n  $scope.decrementHours = function() {\n    if (!$scope.noDecrementHours()) {\n      addSecondsToSelected(-hourStep * 60 * 60);\n    }\n  };\n\n  $scope.incrementMinutes = function() {\n    if (!$scope.noIncrementMinutes()) {\n      addSecondsToSelected(minuteStep * 60);\n    }\n  };\n\n  $scope.decrementMinutes = function() {\n    if (!$scope.noDecrementMinutes()) {\n      addSecondsToSelected(-minuteStep * 60);\n    }\n  };\n\n  $scope.incrementSeconds = function() {\n    if (!$scope.noIncrementSeconds()) {\n      addSecondsToSelected(secondStep);\n    }\n  };\n\n  $scope.decrementSeconds = function() {\n    if (!$scope.noDecrementSeconds()) {\n      addSecondsToSelected(-secondStep);\n    }\n  };\n\n  $scope.toggleMeridian = function() {\n    var minutes = getMinutesFromTemplate(),\n        hours = getHoursFromTemplate();\n\n    if (!$scope.noToggleMeridian()) {\n      if (angular.isDefined(minutes) && angular.isDefined(hours)) {\n        addSecondsToSelected(12 * 60 * (selected.getHours() < 12 ? 60 : -60));\n      } else {\n        $scope.meridian = $scope.meridian === meridians[0] ? meridians[1] : meridians[0];\n      }\n    }\n  };\n\n  $scope.blur = function() {\n    ngModelCtrl.$setTouched();\n  };\n\n  $scope.$on('$destroy', function() {\n    while (watchers.length) {\n      watchers.shift()();\n    }\n  });\n}])\n\n.directive('uibTimepicker', ['uibTimepickerConfig', function(uibTimepickerConfig) {\n  return {\n    require: ['uibTimepicker', '?^ngModel'],\n    restrict: 'A',\n    controller: 'UibTimepickerController',\n    controllerAs: 'timepicker',\n    scope: {},\n    templateUrl: function(element, attrs) {\n      return attrs.templateUrl || uibTimepickerConfig.templateUrl;\n    },\n    link: function(scope, element, attrs, ctrls) {\n      var timepickerCtrl = ctrls[0], ngModelCtrl = ctrls[1];\n\n      if (ngModelCtrl) {\n        timepickerCtrl.init(ngModelCtrl, element.find('input'));\n      }\n    }\n  };\n}]);\n\nangular.module('ui.bootstrap.typeahead', ['ui.bootstrap.debounce', 'ui.bootstrap.position'])\n\n/**\n * A helper service that can parse typeahead's syntax (string provided by users)\n * Extracted to a separate service for ease of unit testing\n */\n  .factory('uibTypeaheadParser', ['$parse', function($parse) {\n    //                      000001111111100000000000002222222200000000000000003333333333333330000000000044444444000\n    var TYPEAHEAD_REGEXP = /^\\s*([\\s\\S]+?)(?:\\s+as\\s+([\\s\\S]+?))?\\s+for\\s+(?:([\\$\\w][\\$\\w\\d]*))\\s+in\\s+([\\s\\S]+?)$/;\n    return {\n      parse: function(input) {\n        var match = input.match(TYPEAHEAD_REGEXP);\n        if (!match) {\n          throw new Error(\n            'Expected typeahead specification in form of \"_modelValue_ (as _label_)? for _item_ in _collection_\"' +\n              ' but got \"' + input + '\".');\n        }\n\n        return {\n          itemName: match[3],\n          source: $parse(match[4]),\n          viewMapper: $parse(match[2] || match[1]),\n          modelMapper: $parse(match[1])\n        };\n      }\n    };\n  }])\n\n  .controller('UibTypeaheadController', ['$scope', '$element', '$attrs', '$compile', '$parse', '$q', '$timeout', '$document', '$window', '$rootScope', '$$debounce', '$uibPosition', 'uibTypeaheadParser',\n    function(originalScope, element, attrs, $compile, $parse, $q, $timeout, $document, $window, $rootScope, $$debounce, $position, typeaheadParser) {\n    var HOT_KEYS = [9, 13, 27, 38, 40];\n    var eventDebounceTime = 200;\n    var modelCtrl, ngModelOptions;\n    //SUPPORTED ATTRIBUTES (OPTIONS)\n\n    //minimal no of characters that needs to be entered before typeahead kicks-in\n    var minLength = originalScope.$eval(attrs.typeaheadMinLength);\n    if (!minLength && minLength !== 0) {\n      minLength = 1;\n    }\n\n    originalScope.$watch(attrs.typeaheadMinLength, function (newVal) {\n        minLength = !newVal && newVal !== 0 ? 1 : newVal;\n    });\n\n    //minimal wait time after last character typed before typeahead kicks-in\n    var waitTime = originalScope.$eval(attrs.typeaheadWaitMs) || 0;\n\n    //should it restrict model values to the ones selected from the popup only?\n    var isEditable = originalScope.$eval(attrs.typeaheadEditable) !== false;\n    originalScope.$watch(attrs.typeaheadEditable, function (newVal) {\n      isEditable = newVal !== false;\n    });\n\n    //binding to a variable that indicates if matches are being retrieved asynchronously\n    var isLoadingSetter = $parse(attrs.typeaheadLoading).assign || angular.noop;\n\n    //a function to determine if an event should cause selection\n    var isSelectEvent = attrs.typeaheadShouldSelect ? $parse(attrs.typeaheadShouldSelect) : function(scope, vals) {\n      var evt = vals.$event;\n      return evt.which === 13 || evt.which === 9;\n    };\n\n    //a callback executed when a match is selected\n    var onSelectCallback = $parse(attrs.typeaheadOnSelect);\n\n    //should it select highlighted popup value when losing focus?\n    var isSelectOnBlur = angular.isDefined(attrs.typeaheadSelectOnBlur) ? originalScope.$eval(attrs.typeaheadSelectOnBlur) : false;\n\n    //binding to a variable that indicates if there were no results after the query is completed\n    var isNoResultsSetter = $parse(attrs.typeaheadNoResults).assign || angular.noop;\n\n    var inputFormatter = attrs.typeaheadInputFormatter ? $parse(attrs.typeaheadInputFormatter) : undefined;\n\n    var appendToBody = attrs.typeaheadAppendToBody ? originalScope.$eval(attrs.typeaheadAppendToBody) : false;\n\n    var appendTo = attrs.typeaheadAppendTo ?\n      originalScope.$eval(attrs.typeaheadAppendTo) : null;\n\n    var focusFirst = originalScope.$eval(attrs.typeaheadFocusFirst) !== false;\n\n    //If input matches an item of the list exactly, select it automatically\n    var selectOnExact = attrs.typeaheadSelectOnExact ? originalScope.$eval(attrs.typeaheadSelectOnExact) : false;\n\n    //binding to a variable that indicates if dropdown is open\n    var isOpenSetter = $parse(attrs.typeaheadIsOpen).assign || angular.noop;\n\n    var showHint = originalScope.$eval(attrs.typeaheadShowHint) || false;\n\n    //INTERNAL VARIABLES\n\n    //model setter executed upon match selection\n    var parsedModel = $parse(attrs.ngModel);\n    var invokeModelSetter = $parse(attrs.ngModel + '($$$p)');\n    var $setModelValue = function(scope, newValue) {\n      if (angular.isFunction(parsedModel(originalScope)) &&\n        ngModelOptions && ngModelOptions.$options && ngModelOptions.$options.getterSetter) {\n        return invokeModelSetter(scope, {$$$p: newValue});\n      }\n\n      return parsedModel.assign(scope, newValue);\n    };\n\n    //expressions used by typeahead\n    var parserResult = typeaheadParser.parse(attrs.uibTypeahead);\n\n    var hasFocus;\n\n    //Used to avoid bug in iOS webview where iOS keyboard does not fire\n    //mousedown & mouseup events\n    //Issue #3699\n    var selected;\n\n    //create a child scope for the typeahead directive so we are not polluting original scope\n    //with typeahead-specific data (matches, query etc.)\n    var scope = originalScope.$new();\n    var offDestroy = originalScope.$on('$destroy', function() {\n      scope.$destroy();\n    });\n    scope.$on('$destroy', offDestroy);\n\n    // WAI-ARIA\n    var popupId = 'typeahead-' + scope.$id + '-' + Math.floor(Math.random() * 10000);\n    element.attr({\n      'aria-autocomplete': 'list',\n      'aria-expanded': false,\n      'aria-owns': popupId\n    });\n\n    var inputsContainer, hintInputElem;\n    //add read-only input to show hint\n    if (showHint) {\n      inputsContainer = angular.element('<div></div>');\n      inputsContainer.css('position', 'relative');\n      element.after(inputsContainer);\n      hintInputElem = element.clone();\n      hintInputElem.attr('placeholder', '');\n      hintInputElem.attr('tabindex', '-1');\n      hintInputElem.val('');\n      hintInputElem.css({\n        'position': 'absolute',\n        'top': '0px',\n        'left': '0px',\n        'border-color': 'transparent',\n        'box-shadow': 'none',\n        'opacity': 1,\n        'background': 'none 0% 0% / auto repeat scroll padding-box border-box rgb(255, 255, 255)',\n        'color': '#999'\n      });\n      element.css({\n        'position': 'relative',\n        'vertical-align': 'top',\n        'background-color': 'transparent'\n      });\n\n      if (hintInputElem.attr('id')) {\n        hintInputElem.removeAttr('id'); // remove duplicate id if present.\n      }\n      inputsContainer.append(hintInputElem);\n      hintInputElem.after(element);\n    }\n\n    //pop-up element used to display matches\n    var popUpEl = angular.element('<div uib-typeahead-popup></div>');\n    popUpEl.attr({\n      id: popupId,\n      matches: 'matches',\n      active: 'activeIdx',\n      select: 'select(activeIdx, evt)',\n      'move-in-progress': 'moveInProgress',\n      query: 'query',\n      position: 'position',\n      'assign-is-open': 'assignIsOpen(isOpen)',\n      debounce: 'debounceUpdate'\n    });\n    //custom item template\n    if (angular.isDefined(attrs.typeaheadTemplateUrl)) {\n      popUpEl.attr('template-url', attrs.typeaheadTemplateUrl);\n    }\n\n    if (angular.isDefined(attrs.typeaheadPopupTemplateUrl)) {\n      popUpEl.attr('popup-template-url', attrs.typeaheadPopupTemplateUrl);\n    }\n\n    var resetHint = function() {\n      if (showHint) {\n        hintInputElem.val('');\n      }\n    };\n\n    var resetMatches = function() {\n      scope.matches = [];\n      scope.activeIdx = -1;\n      element.attr('aria-expanded', false);\n      resetHint();\n    };\n\n    var getMatchId = function(index) {\n      return popupId + '-option-' + index;\n    };\n\n    // Indicate that the specified match is the active (pre-selected) item in the list owned by this typeahead.\n    // This attribute is added or removed automatically when the `activeIdx` changes.\n    scope.$watch('activeIdx', function(index) {\n      if (index < 0) {\n        element.removeAttr('aria-activedescendant');\n      } else {\n        element.attr('aria-activedescendant', getMatchId(index));\n      }\n    });\n\n    var inputIsExactMatch = function(inputValue, index) {\n      if (scope.matches.length > index && inputValue) {\n        return inputValue.toUpperCase() === scope.matches[index].label.toUpperCase();\n      }\n\n      return false;\n    };\n\n    var getMatchesAsync = function(inputValue, evt) {\n      var locals = {$viewValue: inputValue};\n      isLoadingSetter(originalScope, true);\n      isNoResultsSetter(originalScope, false);\n      $q.when(parserResult.source(originalScope, locals)).then(function(matches) {\n        //it might happen that several async queries were in progress if a user were typing fast\n        //but we are interested only in responses that correspond to the current view value\n        var onCurrentRequest = inputValue === modelCtrl.$viewValue;\n        if (onCurrentRequest && hasFocus) {\n          if (matches && matches.length > 0) {\n            scope.activeIdx = focusFirst ? 0 : -1;\n            isNoResultsSetter(originalScope, false);\n            scope.matches.length = 0;\n\n            //transform labels\n            for (var i = 0; i < matches.length; i++) {\n              locals[parserResult.itemName] = matches[i];\n              scope.matches.push({\n                id: getMatchId(i),\n                label: parserResult.viewMapper(scope, locals),\n                model: matches[i]\n              });\n            }\n\n            scope.query = inputValue;\n            //position pop-up with matches - we need to re-calculate its position each time we are opening a window\n            //with matches as a pop-up might be absolute-positioned and position of an input might have changed on a page\n            //due to other elements being rendered\n            recalculatePosition();\n\n            element.attr('aria-expanded', true);\n\n            //Select the single remaining option if user input matches\n            if (selectOnExact && scope.matches.length === 1 && inputIsExactMatch(inputValue, 0)) {\n              if (angular.isNumber(scope.debounceUpdate) || angular.isObject(scope.debounceUpdate)) {\n                $$debounce(function() {\n                  scope.select(0, evt);\n                }, angular.isNumber(scope.debounceUpdate) ? scope.debounceUpdate : scope.debounceUpdate['default']);\n              } else {\n                scope.select(0, evt);\n              }\n            }\n\n            if (showHint) {\n              var firstLabel = scope.matches[0].label;\n              if (angular.isString(inputValue) &&\n                inputValue.length > 0 &&\n                firstLabel.slice(0, inputValue.length).toUpperCase() === inputValue.toUpperCase()) {\n                hintInputElem.val(inputValue + firstLabel.slice(inputValue.length));\n              } else {\n                hintInputElem.val('');\n              }\n            }\n          } else {\n            resetMatches();\n            isNoResultsSetter(originalScope, true);\n          }\n        }\n        if (onCurrentRequest) {\n          isLoadingSetter(originalScope, false);\n        }\n      }, function() {\n        resetMatches();\n        isLoadingSetter(originalScope, false);\n        isNoResultsSetter(originalScope, true);\n      });\n    };\n\n    // bind events only if appendToBody params exist - performance feature\n    if (appendToBody) {\n      angular.element($window).on('resize', fireRecalculating);\n      $document.find('body').on('scroll', fireRecalculating);\n    }\n\n    // Declare the debounced function outside recalculating for\n    // proper debouncing\n    var debouncedRecalculate = $$debounce(function() {\n      // if popup is visible\n      if (scope.matches.length) {\n        recalculatePosition();\n      }\n\n      scope.moveInProgress = false;\n    }, eventDebounceTime);\n\n    // Default progress type\n    scope.moveInProgress = false;\n\n    function fireRecalculating() {\n      if (!scope.moveInProgress) {\n        scope.moveInProgress = true;\n        scope.$digest();\n      }\n\n      debouncedRecalculate();\n    }\n\n    // recalculate actual position and set new values to scope\n    // after digest loop is popup in right position\n    function recalculatePosition() {\n      scope.position = appendToBody ? $position.offset(element) : $position.position(element);\n      scope.position.top += element.prop('offsetHeight');\n    }\n\n    //we need to propagate user's query so we can higlight matches\n    scope.query = undefined;\n\n    //Declare the timeout promise var outside the function scope so that stacked calls can be cancelled later\n    var timeoutPromise;\n\n    var scheduleSearchWithTimeout = function(inputValue) {\n      timeoutPromise = $timeout(function() {\n        getMatchesAsync(inputValue);\n      }, waitTime);\n    };\n\n    var cancelPreviousTimeout = function() {\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n    };\n\n    resetMatches();\n\n    scope.assignIsOpen = function (isOpen) {\n      isOpenSetter(originalScope, isOpen);\n    };\n\n    scope.select = function(activeIdx, evt) {\n      //called from within the $digest() cycle\n      var locals = {};\n      var model, item;\n\n      selected = true;\n      locals[parserResult.itemName] = item = scope.matches[activeIdx].model;\n      model = parserResult.modelMapper(originalScope, locals);\n      $setModelValue(originalScope, model);\n      modelCtrl.$setValidity('editable', true);\n      modelCtrl.$setValidity('parse', true);\n\n      onSelectCallback(originalScope, {\n        $item: item,\n        $model: model,\n        $label: parserResult.viewMapper(originalScope, locals),\n        $event: evt\n      });\n\n      resetMatches();\n\n      //return focus to the input element if a match was selected via a mouse click event\n      // use timeout to avoid $rootScope:inprog error\n      if (scope.$eval(attrs.typeaheadFocusOnSelect) !== false) {\n        $timeout(function() { element[0].focus(); }, 0, false);\n      }\n    };\n\n    //bind keyboard events: arrows up(38) / down(40), enter(13) and tab(9), esc(27)\n    element.on('keydown', function(evt) {\n      //typeahead is open and an \"interesting\" key was pressed\n      if (scope.matches.length === 0 || HOT_KEYS.indexOf(evt.which) === -1) {\n        return;\n      }\n\n      var shouldSelect = isSelectEvent(originalScope, {$event: evt});\n\n      /**\n       * if there's nothing selected (i.e. focusFirst) and enter or tab is hit\n       * or\n       * shift + tab is pressed to bring focus to the previous element\n       * then clear the results\n       */\n      if (scope.activeIdx === -1 && shouldSelect || evt.which === 9 && !!evt.shiftKey) {\n        resetMatches();\n        scope.$digest();\n        return;\n      }\n\n      evt.preventDefault();\n      var target;\n      switch (evt.which) {\n        case 27: // escape\n          evt.stopPropagation();\n\n          resetMatches();\n          originalScope.$digest();\n          break;\n        case 38: // up arrow\n          scope.activeIdx = (scope.activeIdx > 0 ? scope.activeIdx : scope.matches.length) - 1;\n          scope.$digest();\n          target = popUpEl[0].querySelectorAll('.uib-typeahead-match')[scope.activeIdx];\n          target.parentNode.scrollTop = target.offsetTop;\n          break;\n        case 40: // down arrow\n          scope.activeIdx = (scope.activeIdx + 1) % scope.matches.length;\n          scope.$digest();\n          target = popUpEl[0].querySelectorAll('.uib-typeahead-match')[scope.activeIdx];\n          target.parentNode.scrollTop = target.offsetTop;\n          break;\n        default:\n          if (shouldSelect) {\n            scope.$apply(function() {\n              if (angular.isNumber(scope.debounceUpdate) || angular.isObject(scope.debounceUpdate)) {\n                $$debounce(function() {\n                  scope.select(scope.activeIdx, evt);\n                }, angular.isNumber(scope.debounceUpdate) ? scope.debounceUpdate : scope.debounceUpdate['default']);\n              } else {\n                scope.select(scope.activeIdx, evt);\n              }\n            });\n          }\n      }\n    });\n\n    element.bind('focus', function (evt) {\n      hasFocus = true;\n      if (minLength === 0 && !modelCtrl.$viewValue) {\n        $timeout(function() {\n          getMatchesAsync(modelCtrl.$viewValue, evt);\n        }, 0);\n      }\n    });\n\n    element.bind('blur', function(evt) {\n      if (isSelectOnBlur && scope.matches.length && scope.activeIdx !== -1 && !selected) {\n        selected = true;\n        scope.$apply(function() {\n          if (angular.isObject(scope.debounceUpdate) && angular.isNumber(scope.debounceUpdate.blur)) {\n            $$debounce(function() {\n              scope.select(scope.activeIdx, evt);\n            }, scope.debounceUpdate.blur);\n          } else {\n            scope.select(scope.activeIdx, evt);\n          }\n        });\n      }\n      if (!isEditable && modelCtrl.$error.editable) {\n        modelCtrl.$setViewValue();\n        scope.$apply(function() {\n          // Reset validity as we are clearing\n          modelCtrl.$setValidity('editable', true);\n          modelCtrl.$setValidity('parse', true);\n        });\n        element.val('');\n      }\n      hasFocus = false;\n      selected = false;\n    });\n\n    // Keep reference to click handler to unbind it.\n    var dismissClickHandler = function(evt) {\n      // Issue #3973\n      // Firefox treats right click as a click on document\n      if (element[0] !== evt.target && evt.which !== 3 && scope.matches.length !== 0) {\n        resetMatches();\n        if (!$rootScope.$$phase) {\n          originalScope.$digest();\n        }\n      }\n    };\n\n    $document.on('click', dismissClickHandler);\n\n    originalScope.$on('$destroy', function() {\n      $document.off('click', dismissClickHandler);\n      if (appendToBody || appendTo) {\n        $popup.remove();\n      }\n\n      if (appendToBody) {\n        angular.element($window).off('resize', fireRecalculating);\n        $document.find('body').off('scroll', fireRecalculating);\n      }\n      // Prevent jQuery cache memory leak\n      popUpEl.remove();\n\n      if (showHint) {\n          inputsContainer.remove();\n      }\n    });\n\n    var $popup = $compile(popUpEl)(scope);\n\n    if (appendToBody) {\n      $document.find('body').append($popup);\n    } else if (appendTo) {\n      angular.element(appendTo).eq(0).append($popup);\n    } else {\n      element.after($popup);\n    }\n\n    this.init = function(_modelCtrl, _ngModelOptions) {\n      modelCtrl = _modelCtrl;\n      ngModelOptions = _ngModelOptions;\n\n      scope.debounceUpdate = modelCtrl.$options && $parse(modelCtrl.$options.debounce)(originalScope);\n\n      //plug into $parsers pipeline to open a typeahead on view changes initiated from DOM\n      //$parsers kick-in on all the changes coming from the view as well as manually triggered by $setViewValue\n      modelCtrl.$parsers.unshift(function(inputValue) {\n        hasFocus = true;\n\n        if (minLength === 0 || inputValue && inputValue.length >= minLength) {\n          if (waitTime > 0) {\n            cancelPreviousTimeout();\n            scheduleSearchWithTimeout(inputValue);\n          } else {\n            getMatchesAsync(inputValue);\n          }\n        } else {\n          isLoadingSetter(originalScope, false);\n          cancelPreviousTimeout();\n          resetMatches();\n        }\n\n        if (isEditable) {\n          return inputValue;\n        }\n\n        if (!inputValue) {\n          // Reset in case user had typed something previously.\n          modelCtrl.$setValidity('editable', true);\n          return null;\n        }\n\n        modelCtrl.$setValidity('editable', false);\n        return undefined;\n      });\n\n      modelCtrl.$formatters.push(function(modelValue) {\n        var candidateViewValue, emptyViewValue;\n        var locals = {};\n\n        // The validity may be set to false via $parsers (see above) if\n        // the model is restricted to selected values. If the model\n        // is set manually it is considered to be valid.\n        if (!isEditable) {\n          modelCtrl.$setValidity('editable', true);\n        }\n\n        if (inputFormatter) {\n          locals.$model = modelValue;\n          return inputFormatter(originalScope, locals);\n        }\n\n        //it might happen that we don't have enough info to properly render input value\n        //we need to check for this situation and simply return model value if we can't apply custom formatting\n        locals[parserResult.itemName] = modelValue;\n        candidateViewValue = parserResult.viewMapper(originalScope, locals);\n        locals[parserResult.itemName] = undefined;\n        emptyViewValue = parserResult.viewMapper(originalScope, locals);\n\n        return candidateViewValue !== emptyViewValue ? candidateViewValue : modelValue;\n      });\n    };\n  }])\n\n  .directive('uibTypeahead', function() {\n    return {\n      controller: 'UibTypeaheadController',\n      require: ['ngModel', '^?ngModelOptions', 'uibTypeahead'],\n      link: function(originalScope, element, attrs, ctrls) {\n        ctrls[2].init(ctrls[0], ctrls[1]);\n      }\n    };\n  })\n\n  .directive('uibTypeaheadPopup', ['$$debounce', function($$debounce) {\n    return {\n      scope: {\n        matches: '=',\n        query: '=',\n        active: '=',\n        position: '&',\n        moveInProgress: '=',\n        select: '&',\n        assignIsOpen: '&',\n        debounce: '&'\n      },\n      replace: true,\n      templateUrl: function(element, attrs) {\n        return attrs.popupTemplateUrl || 'uib/template/typeahead/typeahead-popup.html';\n      },\n      link: function(scope, element, attrs) {\n        scope.templateUrl = attrs.templateUrl;\n\n        scope.isOpen = function() {\n          var isDropdownOpen = scope.matches.length > 0;\n          scope.assignIsOpen({ isOpen: isDropdownOpen });\n          return isDropdownOpen;\n        };\n\n        scope.isActive = function(matchIdx) {\n          return scope.active === matchIdx;\n        };\n\n        scope.selectActive = function(matchIdx) {\n          scope.active = matchIdx;\n        };\n\n        scope.selectMatch = function(activeIdx, evt) {\n          var debounce = scope.debounce();\n          if (angular.isNumber(debounce) || angular.isObject(debounce)) {\n            $$debounce(function() {\n              scope.select({activeIdx: activeIdx, evt: evt});\n            }, angular.isNumber(debounce) ? debounce : debounce['default']);\n          } else {\n            scope.select({activeIdx: activeIdx, evt: evt});\n          }\n        };\n      }\n    };\n  }])\n\n  .directive('uibTypeaheadMatch', ['$templateRequest', '$compile', '$parse', function($templateRequest, $compile, $parse) {\n    return {\n      scope: {\n        index: '=',\n        match: '=',\n        query: '='\n      },\n      link: function(scope, element, attrs) {\n        var tplUrl = $parse(attrs.templateUrl)(scope.$parent) || 'uib/template/typeahead/typeahead-match.html';\n        $templateRequest(tplUrl).then(function(tplContent) {\n          var tplEl = angular.element(tplContent.trim());\n          element.replaceWith(tplEl);\n          $compile(tplEl)(scope);\n        });\n      }\n    };\n  }])\n\n  .filter('uibTypeaheadHighlight', ['$sce', '$injector', '$log', function($sce, $injector, $log) {\n    var isSanitizePresent;\n    isSanitizePresent = $injector.has('$sanitize');\n\n    function escapeRegexp(queryToEscape) {\n      // Regex: capture the whole query string and replace it with the string that will be used to match\n      // the results, for example if the capture is \"a\" the result will be \\a\n      return queryToEscape.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n    }\n\n    function containsHtml(matchItem) {\n      return /<.*>/g.test(matchItem);\n    }\n\n    return function(matchItem, query) {\n      if (!isSanitizePresent && containsHtml(matchItem)) {\n        $log.warn('Unsafe use of typeahead please use ngSanitize'); // Warn the user about the danger\n      }\n      matchItem = query ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<strong>$&</strong>') : matchItem; // Replaces the capture string with a the same string inside of a \"strong\" tag\n      if (!isSanitizePresent) {\n        matchItem = $sce.trustAsHtml(matchItem); // If $sanitize is not present we pack the string in a $sce object for the ng-bind-html directive\n      }\n      return matchItem;\n    };\n  }]);\n\nangular.module(\"uib/template/accordion/accordion-group.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/accordion/accordion-group.html\",\n    \"<div role=\\\"tab\\\" id=\\\"{{::headingId}}\\\" aria-selected=\\\"{{isOpen}}\\\" class=\\\"panel-heading\\\" ng-keypress=\\\"toggleOpen($event)\\\">\\n\" +\n    \"  <h4 class=\\\"panel-title\\\">\\n\" +\n    \"    <a role=\\\"button\\\" data-toggle=\\\"collapse\\\" href aria-expanded=\\\"{{isOpen}}\\\" aria-controls=\\\"{{::panelId}}\\\" tabindex=\\\"0\\\" class=\\\"accordion-toggle\\\" ng-click=\\\"toggleOpen()\\\" uib-accordion-transclude=\\\"heading\\\" ng-disabled=\\\"isDisabled\\\" uib-tabindex-toggle><span uib-accordion-header ng-class=\\\"{'text-muted': isDisabled}\\\">{{heading}}</span></a>\\n\" +\n    \"  </h4>\\n\" +\n    \"</div>\\n\" +\n    \"<div id=\\\"{{::panelId}}\\\" aria-labelledby=\\\"{{::headingId}}\\\" aria-hidden=\\\"{{!isOpen}}\\\" role=\\\"tabpanel\\\" class=\\\"panel-collapse collapse\\\" uib-collapse=\\\"!isOpen\\\">\\n\" +\n    \"  <div class=\\\"panel-body\\\" ng-transclude></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/accordion/accordion.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/accordion/accordion.html\",\n    \"<div role=\\\"tablist\\\" class=\\\"panel-group\\\" ng-transclude></div>\");\n}]);\n\nangular.module(\"uib/template/alert/alert.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/alert/alert.html\",\n    \"<button ng-show=\\\"closeable\\\" type=\\\"button\\\" class=\\\"close\\\" ng-click=\\\"close({$event: $event})\\\">\\n\" +\n    \"  <span aria-hidden=\\\"true\\\">&times;</span>\\n\" +\n    \"  <span class=\\\"sr-only\\\">Close</span>\\n\" +\n    \"</button>\\n\" +\n    \"<div ng-transclude></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/carousel/carousel.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/carousel/carousel.html\",\n    \"<div class=\\\"carousel-inner\\\" ng-transclude></div>\\n\" +\n    \"<a role=\\\"button\\\" href class=\\\"left carousel-control\\\" ng-click=\\\"prev()\\\" ng-class=\\\"{ disabled: isPrevDisabled() }\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n    \"  <span aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n\" +\n    \"  <span class=\\\"sr-only\\\">previous</span>\\n\" +\n    \"</a>\\n\" +\n    \"<a role=\\\"button\\\" href class=\\\"right carousel-control\\\" ng-click=\\\"next()\\\" ng-class=\\\"{ disabled: isNextDisabled() }\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n    \"  <span aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-right\\\"></span>\\n\" +\n    \"  <span class=\\\"sr-only\\\">next</span>\\n\" +\n    \"</a>\\n\" +\n    \"<ol class=\\\"carousel-indicators\\\" ng-show=\\\"slides.length > 1\\\">\\n\" +\n    \"  <li ng-repeat=\\\"slide in slides | orderBy:indexOfSlide track by $index\\\" ng-class=\\\"{ active: isActive(slide) }\\\" ng-click=\\\"select(slide)\\\">\\n\" +\n    \"    <span class=\\\"sr-only\\\">slide {{ $index + 1 }} of {{ slides.length }}<span ng-if=\\\"isActive(slide)\\\">, currently active</span></span>\\n\" +\n    \"  </li>\\n\" +\n    \"</ol>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/carousel/slide.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/carousel/slide.html\",\n    \"<div class=\\\"text-center\\\" ng-transclude></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/datepicker/datepicker.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/datepicker/datepicker.html\",\n    \"<div ng-switch=\\\"datepickerMode\\\">\\n\" +\n    \"  <div uib-daypicker ng-switch-when=\\\"day\\\" tabindex=\\\"0\\\" class=\\\"uib-daypicker\\\"></div>\\n\" +\n    \"  <div uib-monthpicker ng-switch-when=\\\"month\\\" tabindex=\\\"0\\\" class=\\\"uib-monthpicker\\\"></div>\\n\" +\n    \"  <div uib-yearpicker ng-switch-when=\\\"year\\\" tabindex=\\\"0\\\" class=\\\"uib-yearpicker\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/datepicker/day.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/datepicker/day.html\",\n    \"<table role=\\\"grid\\\" aria-labelledby=\\\"{{::uniqueId}}-title\\\" aria-activedescendant=\\\"{{activeDateId}}\\\">\\n\" +\n    \"  <thead>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-left uib-left\\\" ng-click=\\\"move(-1)\\\" tabindex=\\\"-1\\\"><i aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-left\\\"></i><span class=\\\"sr-only\\\">previous</span></button></th>\\n\" +\n    \"      <th colspan=\\\"{{::5 + showWeeks}}\\\"><button id=\\\"{{::uniqueId}}-title\\\" role=\\\"heading\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-sm uib-title\\\" ng-click=\\\"toggleMode()\\\" ng-disabled=\\\"datepickerMode === maxMode\\\" tabindex=\\\"-1\\\"><strong>{{title}}</strong></button></th>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-right uib-right\\\" ng-click=\\\"move(1)\\\" tabindex=\\\"-1\\\"><i aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-right\\\"></i><span class=\\\"sr-only\\\">next</span></button></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <th ng-if=\\\"showWeeks\\\" class=\\\"text-center\\\"></th>\\n\" +\n    \"      <th ng-repeat=\\\"label in ::labels track by $index\\\" class=\\\"text-center\\\"><small aria-label=\\\"{{::label.full}}\\\">{{::label.abbr}}</small></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </thead>\\n\" +\n    \"  <tbody>\\n\" +\n    \"    <tr class=\\\"uib-weeks\\\" ng-repeat=\\\"row in rows track by $index\\\" role=\\\"row\\\">\\n\" +\n    \"      <td ng-if=\\\"showWeeks\\\" class=\\\"text-center h6\\\"><em>{{ weekNumbers[$index] }}</em></td>\\n\" +\n    \"      <td ng-repeat=\\\"dt in row\\\" class=\\\"uib-day text-center\\\" role=\\\"gridcell\\\"\\n\" +\n    \"        id=\\\"{{::dt.uid}}\\\"\\n\" +\n    \"        ng-class=\\\"::dt.customClass\\\">\\n\" +\n    \"        <button type=\\\"button\\\" class=\\\"btn btn-default btn-sm\\\"\\n\" +\n    \"          uib-is-class=\\\"\\n\" +\n    \"            'btn-info' for selectedDt,\\n\" +\n    \"            'active' for activeDt\\n\" +\n    \"            on dt\\\"\\n\" +\n    \"          ng-click=\\\"select(dt.date)\\\"\\n\" +\n    \"          ng-disabled=\\\"::dt.disabled\\\"\\n\" +\n    \"          tabindex=\\\"-1\\\"><span ng-class=\\\"::{'text-muted': dt.secondary, 'text-info': dt.current}\\\">{{::dt.label}}</span></button>\\n\" +\n    \"      </td>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/datepicker/month.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/datepicker/month.html\",\n    \"<table role=\\\"grid\\\" aria-labelledby=\\\"{{::uniqueId}}-title\\\" aria-activedescendant=\\\"{{activeDateId}}\\\">\\n\" +\n    \"  <thead>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-left uib-left\\\" ng-click=\\\"move(-1)\\\" tabindex=\\\"-1\\\"><i aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-left\\\"></i><span class=\\\"sr-only\\\">previous</span></button></th>\\n\" +\n    \"      <th colspan=\\\"{{::yearHeaderColspan}}\\\"><button id=\\\"{{::uniqueId}}-title\\\" role=\\\"heading\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-sm uib-title\\\" ng-click=\\\"toggleMode()\\\" ng-disabled=\\\"datepickerMode === maxMode\\\" tabindex=\\\"-1\\\"><strong>{{title}}</strong></button></th>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-right uib-right\\\" ng-click=\\\"move(1)\\\" tabindex=\\\"-1\\\"><i aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-right\\\"></i><span class=\\\"sr-only\\\">next</span></i></button></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </thead>\\n\" +\n    \"  <tbody>\\n\" +\n    \"    <tr class=\\\"uib-months\\\" ng-repeat=\\\"row in rows track by $index\\\" role=\\\"row\\\">\\n\" +\n    \"      <td ng-repeat=\\\"dt in row\\\" class=\\\"uib-month text-center\\\" role=\\\"gridcell\\\"\\n\" +\n    \"        id=\\\"{{::dt.uid}}\\\"\\n\" +\n    \"        ng-class=\\\"::dt.customClass\\\">\\n\" +\n    \"        <button type=\\\"button\\\" class=\\\"btn btn-default\\\"\\n\" +\n    \"          uib-is-class=\\\"\\n\" +\n    \"            'btn-info' for selectedDt,\\n\" +\n    \"            'active' for activeDt\\n\" +\n    \"            on dt\\\"\\n\" +\n    \"          ng-click=\\\"select(dt.date)\\\"\\n\" +\n    \"          ng-disabled=\\\"::dt.disabled\\\"\\n\" +\n    \"          tabindex=\\\"-1\\\"><span ng-class=\\\"::{'text-info': dt.current}\\\">{{::dt.label}}</span></button>\\n\" +\n    \"      </td>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/datepicker/year.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/datepicker/year.html\",\n    \"<table role=\\\"grid\\\" aria-labelledby=\\\"{{::uniqueId}}-title\\\" aria-activedescendant=\\\"{{activeDateId}}\\\">\\n\" +\n    \"  <thead>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-left uib-left\\\" ng-click=\\\"move(-1)\\\" tabindex=\\\"-1\\\"><i aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-left\\\"></i><span class=\\\"sr-only\\\">previous</span></button></th>\\n\" +\n    \"      <th colspan=\\\"{{::columns - 2}}\\\"><button id=\\\"{{::uniqueId}}-title\\\" role=\\\"heading\\\" aria-live=\\\"assertive\\\" aria-atomic=\\\"true\\\" type=\\\"button\\\" class=\\\"btn btn-default btn-sm uib-title\\\" ng-click=\\\"toggleMode()\\\" ng-disabled=\\\"datepickerMode === maxMode\\\" tabindex=\\\"-1\\\"><strong>{{title}}</strong></button></th>\\n\" +\n    \"      <th><button type=\\\"button\\\" class=\\\"btn btn-default btn-sm pull-right uib-right\\\" ng-click=\\\"move(1)\\\" tabindex=\\\"-1\\\"><i aria-hidden=\\\"true\\\" class=\\\"glyphicon glyphicon-chevron-right\\\"></i><span class=\\\"sr-only\\\">next</span></button></th>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </thead>\\n\" +\n    \"  <tbody>\\n\" +\n    \"    <tr class=\\\"uib-years\\\" ng-repeat=\\\"row in rows track by $index\\\" role=\\\"row\\\">\\n\" +\n    \"      <td ng-repeat=\\\"dt in row\\\" class=\\\"uib-year text-center\\\" role=\\\"gridcell\\\"\\n\" +\n    \"        id=\\\"{{::dt.uid}}\\\"\\n\" +\n    \"        ng-class=\\\"::dt.customClass\\\">\\n\" +\n    \"        <button type=\\\"button\\\" class=\\\"btn btn-default\\\"\\n\" +\n    \"          uib-is-class=\\\"\\n\" +\n    \"            'btn-info' for selectedDt,\\n\" +\n    \"            'active' for activeDt\\n\" +\n    \"            on dt\\\"\\n\" +\n    \"          ng-click=\\\"select(dt.date)\\\"\\n\" +\n    \"          ng-disabled=\\\"::dt.disabled\\\"\\n\" +\n    \"          tabindex=\\\"-1\\\"><span ng-class=\\\"::{'text-info': dt.current}\\\">{{::dt.label}}</span></button>\\n\" +\n    \"      </td>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/datepickerPopup/popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/datepickerPopup/popup.html\",\n    \"<ul role=\\\"presentation\\\" class=\\\"uib-datepicker-popup dropdown-menu uib-position-measure\\\" dropdown-nested ng-if=\\\"isOpen\\\" ng-keydown=\\\"keydown($event)\\\" ng-click=\\\"$event.stopPropagation()\\\">\\n\" +\n    \"  <li ng-transclude></li>\\n\" +\n    \"  <li ng-if=\\\"showButtonBar\\\" class=\\\"uib-button-bar\\\">\\n\" +\n    \"    <span class=\\\"btn-group pull-left\\\">\\n\" +\n    \"      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-info uib-datepicker-current\\\" ng-click=\\\"select('today', $event)\\\" ng-disabled=\\\"isDisabled('today')\\\">{{ getText('current') }}</button>\\n\" +\n    \"      <button type=\\\"button\\\" class=\\\"btn btn-sm btn-danger uib-clear\\\" ng-click=\\\"select(null, $event)\\\">{{ getText('clear') }}</button>\\n\" +\n    \"    </span>\\n\" +\n    \"    <button type=\\\"button\\\" class=\\\"btn btn-sm btn-success pull-right uib-close\\\" ng-click=\\\"close($event)\\\">{{ getText('close') }}</button>\\n\" +\n    \"  </li>\\n\" +\n    \"</ul>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/modal/window.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/modal/window.html\",\n    \"<div class=\\\"modal-dialog {{size ? 'modal-' + size : ''}}\\\"><div class=\\\"modal-content\\\" uib-modal-transclude></div></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/pager/pager.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/pager/pager.html\",\n    \"<li ng-class=\\\"{disabled: noPrevious()||ngDisabled, previous: align}\\\"><a href ng-click=\\\"selectPage(page - 1, $event)\\\" ng-disabled=\\\"noPrevious()||ngDisabled\\\" uib-tabindex-toggle>{{::getText('previous')}}</a></li>\\n\" +\n    \"<li ng-class=\\\"{disabled: noNext()||ngDisabled, next: align}\\\"><a href ng-click=\\\"selectPage(page + 1, $event)\\\" ng-disabled=\\\"noNext()||ngDisabled\\\" uib-tabindex-toggle>{{::getText('next')}}</a></li>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/pagination/pagination.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/pagination/pagination.html\",\n    \"<li ng-if=\\\"::boundaryLinks\\\" ng-class=\\\"{disabled: noPrevious()||ngDisabled}\\\" class=\\\"pagination-first\\\"><a href ng-click=\\\"selectPage(1, $event)\\\" ng-disabled=\\\"noPrevious()||ngDisabled\\\" uib-tabindex-toggle>{{::getText('first')}}</a></li>\\n\" +\n    \"<li ng-if=\\\"::directionLinks\\\" ng-class=\\\"{disabled: noPrevious()||ngDisabled}\\\" class=\\\"pagination-prev\\\"><a href ng-click=\\\"selectPage(page - 1, $event)\\\" ng-disabled=\\\"noPrevious()||ngDisabled\\\" uib-tabindex-toggle>{{::getText('previous')}}</a></li>\\n\" +\n    \"<li ng-repeat=\\\"page in pages track by $index\\\" ng-class=\\\"{active: page.active,disabled: ngDisabled&&!page.active}\\\" class=\\\"pagination-page\\\"><a href ng-click=\\\"selectPage(page.number, $event)\\\" ng-disabled=\\\"ngDisabled&&!page.active\\\" uib-tabindex-toggle>{{page.text}}</a></li>\\n\" +\n    \"<li ng-if=\\\"::directionLinks\\\" ng-class=\\\"{disabled: noNext()||ngDisabled}\\\" class=\\\"pagination-next\\\"><a href ng-click=\\\"selectPage(page + 1, $event)\\\" ng-disabled=\\\"noNext()||ngDisabled\\\" uib-tabindex-toggle>{{::getText('next')}}</a></li>\\n\" +\n    \"<li ng-if=\\\"::boundaryLinks\\\" ng-class=\\\"{disabled: noNext()||ngDisabled}\\\" class=\\\"pagination-last\\\"><a href ng-click=\\\"selectPage(totalPages, $event)\\\" ng-disabled=\\\"noNext()||ngDisabled\\\" uib-tabindex-toggle>{{::getText('last')}}</a></li>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/tooltip/tooltip-html-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/tooltip/tooltip-html-popup.html\",\n    \"<div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"<div class=\\\"tooltip-inner\\\" ng-bind-html=\\\"contentExp()\\\"></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/tooltip/tooltip-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/tooltip/tooltip-popup.html\",\n    \"<div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"<div class=\\\"tooltip-inner\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/tooltip/tooltip-template-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/tooltip/tooltip-template-popup.html\",\n    \"<div class=\\\"tooltip-arrow\\\"></div>\\n\" +\n    \"<div class=\\\"tooltip-inner\\\"\\n\" +\n    \"  uib-tooltip-template-transclude=\\\"contentExp()\\\"\\n\" +\n    \"  tooltip-template-transclude-scope=\\\"originScope()\\\"></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/popover/popover-html.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/popover/popover-html.html\",\n    \"<div class=\\\"arrow\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"popover-inner\\\">\\n\" +\n    \"    <h3 class=\\\"popover-title\\\" ng-bind=\\\"uibTitle\\\" ng-if=\\\"uibTitle\\\"></h3>\\n\" +\n    \"    <div class=\\\"popover-content\\\" ng-bind-html=\\\"contentExp()\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/popover/popover-template.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/popover/popover-template.html\",\n    \"<div class=\\\"arrow\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"popover-inner\\\">\\n\" +\n    \"    <h3 class=\\\"popover-title\\\" ng-bind=\\\"uibTitle\\\" ng-if=\\\"uibTitle\\\"></h3>\\n\" +\n    \"    <div class=\\\"popover-content\\\"\\n\" +\n    \"      uib-tooltip-template-transclude=\\\"contentExp()\\\"\\n\" +\n    \"      tooltip-template-transclude-scope=\\\"originScope()\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/popover/popover.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/popover/popover.html\",\n    \"<div class=\\\"arrow\\\"></div>\\n\" +\n    \"\\n\" +\n    \"<div class=\\\"popover-inner\\\">\\n\" +\n    \"    <h3 class=\\\"popover-title\\\" ng-bind=\\\"uibTitle\\\" ng-if=\\\"uibTitle\\\"></h3>\\n\" +\n    \"    <div class=\\\"popover-content\\\" ng-bind=\\\"content\\\"></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/progressbar/bar.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/progressbar/bar.html\",\n    \"<div class=\\\"progress-bar\\\" ng-class=\\\"type && 'progress-bar-' + type\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"{{value}}\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"{{max}}\\\" ng-style=\\\"{width: (percent < 100 ? percent : 100) + '%'}\\\" aria-valuetext=\\\"{{percent | number:0}}%\\\" aria-labelledby=\\\"{{::title}}\\\" ng-transclude></div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/progressbar/progress.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/progressbar/progress.html\",\n    \"<div class=\\\"progress\\\" ng-transclude aria-labelledby=\\\"{{::title}}\\\"></div>\");\n}]);\n\nangular.module(\"uib/template/progressbar/progressbar.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/progressbar/progressbar.html\",\n    \"<div class=\\\"progress\\\">\\n\" +\n    \"  <div class=\\\"progress-bar\\\" ng-class=\\\"type && 'progress-bar-' + type\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"{{value}}\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"{{max}}\\\" ng-style=\\\"{width: (percent < 100 ? percent : 100) + '%'}\\\" aria-valuetext=\\\"{{percent | number:0}}%\\\" aria-labelledby=\\\"{{::title}}\\\" ng-transclude></div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/rating/rating.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/rating/rating.html\",\n    \"<span ng-mouseleave=\\\"reset()\\\" ng-keydown=\\\"onKeydown($event)\\\" tabindex=\\\"0\\\" role=\\\"slider\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"{{range.length}}\\\" aria-valuenow=\\\"{{value}}\\\" aria-valuetext=\\\"{{title}}\\\">\\n\" +\n    \"    <span ng-repeat-start=\\\"r in range track by $index\\\" class=\\\"sr-only\\\">({{ $index < value ? '*' : ' ' }})</span>\\n\" +\n    \"    <i ng-repeat-end ng-mouseenter=\\\"enter($index + 1)\\\" ng-click=\\\"rate($index + 1)\\\" class=\\\"glyphicon\\\" ng-class=\\\"$index < value && (r.stateOn || 'glyphicon-star') || (r.stateOff || 'glyphicon-star-empty')\\\" ng-attr-title=\\\"{{r.title}}\\\"></i>\\n\" +\n    \"</span>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/tabs/tab.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/tabs/tab.html\",\n    \"<li ng-class=\\\"[{active: active, disabled: disabled}, classes]\\\" class=\\\"uib-tab nav-item\\\">\\n\" +\n    \"  <a href ng-click=\\\"select($event)\\\" class=\\\"nav-link\\\" uib-tab-heading-transclude>{{heading}}</a>\\n\" +\n    \"</li>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/tabs/tabset.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/tabs/tabset.html\",\n    \"<div>\\n\" +\n    \"  <ul class=\\\"nav nav-{{tabset.type || 'tabs'}}\\\" ng-class=\\\"{'nav-stacked': vertical, 'nav-justified': justified}\\\" ng-transclude></ul>\\n\" +\n    \"  <div class=\\\"tab-content\\\">\\n\" +\n    \"    <div class=\\\"tab-pane\\\"\\n\" +\n    \"         ng-repeat=\\\"tab in tabset.tabs\\\"\\n\" +\n    \"         ng-class=\\\"{active: tabset.active === tab.index}\\\"\\n\" +\n    \"         uib-tab-content-transclude=\\\"tab\\\">\\n\" +\n    \"    </div>\\n\" +\n    \"  </div>\\n\" +\n    \"</div>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/timepicker/timepicker.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/timepicker/timepicker.html\",\n    \"<table class=\\\"uib-timepicker\\\">\\n\" +\n    \"  <tbody>\\n\" +\n    \"    <tr class=\\\"text-center\\\" ng-show=\\\"::showSpinners\\\">\\n\" +\n    \"      <td class=\\\"uib-increment hours\\\"><a ng-click=\\\"incrementHours()\\\" ng-class=\\\"{disabled: noIncrementHours()}\\\" class=\\\"btn btn-link\\\" ng-disabled=\\\"noIncrementHours()\\\" tabindex=\\\"-1\\\"><span class=\\\"glyphicon glyphicon-chevron-up\\\"></span></a></td>\\n\" +\n    \"      <td>&nbsp;</td>\\n\" +\n    \"      <td class=\\\"uib-increment minutes\\\"><a ng-click=\\\"incrementMinutes()\\\" ng-class=\\\"{disabled: noIncrementMinutes()}\\\" class=\\\"btn btn-link\\\" ng-disabled=\\\"noIncrementMinutes()\\\" tabindex=\\\"-1\\\"><span class=\\\"glyphicon glyphicon-chevron-up\\\"></span></a></td>\\n\" +\n    \"      <td ng-show=\\\"showSeconds\\\">&nbsp;</td>\\n\" +\n    \"      <td ng-show=\\\"showSeconds\\\" class=\\\"uib-increment seconds\\\"><a ng-click=\\\"incrementSeconds()\\\" ng-class=\\\"{disabled: noIncrementSeconds()}\\\" class=\\\"btn btn-link\\\" ng-disabled=\\\"noIncrementSeconds()\\\" tabindex=\\\"-1\\\"><span class=\\\"glyphicon glyphicon-chevron-up\\\"></span></a></td>\\n\" +\n    \"      <td ng-show=\\\"showMeridian\\\"></td>\\n\" +\n    \"    </tr>\\n\" +\n    \"    <tr>\\n\" +\n    \"      <td class=\\\"form-group uib-time hours\\\" ng-class=\\\"{'has-error': invalidHours}\\\">\\n\" +\n    \"        <input type=\\\"text\\\" placeholder=\\\"HH\\\" ng-model=\\\"hours\\\" ng-change=\\\"updateHours()\\\" class=\\\"form-control text-center\\\" ng-readonly=\\\"::readonlyInput\\\" maxlength=\\\"2\\\" tabindex=\\\"{{::tabindex}}\\\" ng-disabled=\\\"noIncrementHours()\\\" ng-blur=\\\"blur()\\\">\\n\" +\n    \"      </td>\\n\" +\n    \"      <td class=\\\"uib-separator\\\">:</td>\\n\" +\n    \"      <td class=\\\"form-group uib-time minutes\\\" ng-class=\\\"{'has-error': invalidMinutes}\\\">\\n\" +\n    \"        <input type=\\\"text\\\" placeholder=\\\"MM\\\" ng-model=\\\"minutes\\\" ng-change=\\\"updateMinutes()\\\" class=\\\"form-control text-center\\\" ng-readonly=\\\"::readonlyInput\\\" maxlength=\\\"2\\\" tabindex=\\\"{{::tabindex}}\\\" ng-disabled=\\\"noIncrementMinutes()\\\" ng-blur=\\\"blur()\\\">\\n\" +\n    \"      </td>\\n\" +\n    \"      <td ng-show=\\\"showSeconds\\\" class=\\\"uib-separator\\\">:</td>\\n\" +\n    \"      <td class=\\\"form-group uib-time seconds\\\" ng-class=\\\"{'has-error': invalidSeconds}\\\" ng-show=\\\"showSeconds\\\">\\n\" +\n    \"        <input type=\\\"text\\\" placeholder=\\\"SS\\\" ng-model=\\\"seconds\\\" ng-change=\\\"updateSeconds()\\\" class=\\\"form-control text-center\\\" ng-readonly=\\\"readonlyInput\\\" maxlength=\\\"2\\\" tabindex=\\\"{{::tabindex}}\\\" ng-disabled=\\\"noIncrementSeconds()\\\" ng-blur=\\\"blur()\\\">\\n\" +\n    \"      </td>\\n\" +\n    \"      <td ng-show=\\\"showMeridian\\\" class=\\\"uib-time am-pm\\\"><button type=\\\"button\\\" ng-class=\\\"{disabled: noToggleMeridian()}\\\" class=\\\"btn btn-default text-center\\\" ng-click=\\\"toggleMeridian()\\\" ng-disabled=\\\"noToggleMeridian()\\\" tabindex=\\\"{{::tabindex}}\\\">{{meridian}}</button></td>\\n\" +\n    \"    </tr>\\n\" +\n    \"    <tr class=\\\"text-center\\\" ng-show=\\\"::showSpinners\\\">\\n\" +\n    \"      <td class=\\\"uib-decrement hours\\\"><a ng-click=\\\"decrementHours()\\\" ng-class=\\\"{disabled: noDecrementHours()}\\\" class=\\\"btn btn-link\\\" ng-disabled=\\\"noDecrementHours()\\\" tabindex=\\\"-1\\\"><span class=\\\"glyphicon glyphicon-chevron-down\\\"></span></a></td>\\n\" +\n    \"      <td>&nbsp;</td>\\n\" +\n    \"      <td class=\\\"uib-decrement minutes\\\"><a ng-click=\\\"decrementMinutes()\\\" ng-class=\\\"{disabled: noDecrementMinutes()}\\\" class=\\\"btn btn-link\\\" ng-disabled=\\\"noDecrementMinutes()\\\" tabindex=\\\"-1\\\"><span class=\\\"glyphicon glyphicon-chevron-down\\\"></span></a></td>\\n\" +\n    \"      <td ng-show=\\\"showSeconds\\\">&nbsp;</td>\\n\" +\n    \"      <td ng-show=\\\"showSeconds\\\" class=\\\"uib-decrement seconds\\\"><a ng-click=\\\"decrementSeconds()\\\" ng-class=\\\"{disabled: noDecrementSeconds()}\\\" class=\\\"btn btn-link\\\" ng-disabled=\\\"noDecrementSeconds()\\\" tabindex=\\\"-1\\\"><span class=\\\"glyphicon glyphicon-chevron-down\\\"></span></a></td>\\n\" +\n    \"      <td ng-show=\\\"showMeridian\\\"></td>\\n\" +\n    \"    </tr>\\n\" +\n    \"  </tbody>\\n\" +\n    \"</table>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/typeahead/typeahead-match.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/typeahead/typeahead-match.html\",\n    \"<a href\\n\" +\n    \"   tabindex=\\\"-1\\\"\\n\" +\n    \"   ng-bind-html=\\\"match.label | uibTypeaheadHighlight:query\\\"\\n\" +\n    \"   ng-attr-title=\\\"{{match.label}}\\\"></a>\\n\" +\n    \"\");\n}]);\n\nangular.module(\"uib/template/typeahead/typeahead-popup.html\", []).run([\"$templateCache\", function($templateCache) {\n  $templateCache.put(\"uib/template/typeahead/typeahead-popup.html\",\n    \"<ul class=\\\"dropdown-menu\\\" ng-show=\\\"isOpen() && !moveInProgress\\\" ng-style=\\\"{top: position().top+'px', left: position().left+'px'}\\\" role=\\\"listbox\\\" aria-hidden=\\\"{{!isOpen()}}\\\">\\n\" +\n    \"    <li class=\\\"uib-typeahead-match\\\" ng-repeat=\\\"match in matches track by $index\\\" ng-class=\\\"{active: isActive($index) }\\\" ng-mouseenter=\\\"selectActive($index)\\\" ng-click=\\\"selectMatch($index, $event)\\\" role=\\\"option\\\" id=\\\"{{::match.id}}\\\">\\n\" +\n    \"        <div uib-typeahead-match index=\\\"$index\\\" match=\\\"match\\\" query=\\\"query\\\" template-url=\\\"templateUrl\\\"></div>\\n\" +\n    \"    </li>\\n\" +\n    \"</ul>\\n\" +\n    \"\");\n}]);\nangular.module('ui.bootstrap.carousel').run(function() {!angular.$$csp().noInlineStyle && !angular.$$uibCarouselCss && angular.element(document).find('head').prepend('<style type=\"text/css\">.ng-animate.item:not(.left):not(.right){-webkit-transition:0s ease-in-out left;transition:0s ease-in-out left}</style>'); angular.$$uibCarouselCss = true; });\nangular.module('ui.bootstrap.datepicker').run(function() {!angular.$$csp().noInlineStyle && !angular.$$uibDatepickerCss && angular.element(document).find('head').prepend('<style type=\"text/css\">.uib-datepicker .uib-title{width:100%;}.uib-day button,.uib-month button,.uib-year button{min-width:100%;}.uib-left,.uib-right{width:100%}</style>'); angular.$$uibDatepickerCss = true; });\nangular.module('ui.bootstrap.position').run(function() {!angular.$$csp().noInlineStyle && !angular.$$uibPositionCss && angular.element(document).find('head').prepend('<style type=\"text/css\">.uib-position-measure{display:block !important;visibility:hidden !important;position:absolute !important;top:-9999px !important;left:-9999px !important;}.uib-position-scrollbar-measure{position:absolute !important;top:-9999px !important;width:50px !important;height:50px !important;overflow:scroll !important;}.uib-position-body-scrollbar-measure{overflow:scroll !important;}</style>'); angular.$$uibPositionCss = true; });\nangular.module('ui.bootstrap.datepickerPopup').run(function() {!angular.$$csp().noInlineStyle && !angular.$$uibDatepickerpopupCss && angular.element(document).find('head').prepend('<style type=\"text/css\">.uib-datepicker-popup.dropdown-menu{display:block;float:none;margin:0;}.uib-button-bar{padding:10px 9px 2px;}</style>'); angular.$$uibDatepickerpopupCss = true; });\nangular.module('ui.bootstrap.tooltip').run(function() {!angular.$$csp().noInlineStyle && !angular.$$uibTooltipCss && angular.element(document).find('head').prepend('<style type=\"text/css\">[uib-tooltip-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-popup].tooltip.right-bottom > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-html-popup].tooltip.right-bottom > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-left > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.top-right > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-left > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.bottom-right > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-top > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.left-bottom > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-top > .tooltip-arrow,[uib-tooltip-template-popup].tooltip.right-bottom > .tooltip-arrow,[uib-popover-popup].popover.top-left > .arrow,[uib-popover-popup].popover.top-right > .arrow,[uib-popover-popup].popover.bottom-left > .arrow,[uib-popover-popup].popover.bottom-right > .arrow,[uib-popover-popup].popover.left-top > .arrow,[uib-popover-popup].popover.left-bottom > .arrow,[uib-popover-popup].popover.right-top > .arrow,[uib-popover-popup].popover.right-bottom > .arrow,[uib-popover-html-popup].popover.top-left > .arrow,[uib-popover-html-popup].popover.top-right > .arrow,[uib-popover-html-popup].popover.bottom-left > .arrow,[uib-popover-html-popup].popover.bottom-right > .arrow,[uib-popover-html-popup].popover.left-top > .arrow,[uib-popover-html-popup].popover.left-bottom > .arrow,[uib-popover-html-popup].popover.right-top > .arrow,[uib-popover-html-popup].popover.right-bottom > .arrow,[uib-popover-template-popup].popover.top-left > .arrow,[uib-popover-template-popup].popover.top-right > .arrow,[uib-popover-template-popup].popover.bottom-left > .arrow,[uib-popover-template-popup].popover.bottom-right > .arrow,[uib-popover-template-popup].popover.left-top > .arrow,[uib-popover-template-popup].popover.left-bottom > .arrow,[uib-popover-template-popup].popover.right-top > .arrow,[uib-popover-template-popup].popover.right-bottom > .arrow{top:auto;bottom:auto;left:auto;right:auto;margin:0;}[uib-popover-popup].popover,[uib-popover-html-popup].popover,[uib-popover-template-popup].popover{display:block !important;}</style>'); angular.$$uibTooltipCss = true; });\nangular.module('ui.bootstrap.timepicker').run(function() {!angular.$$csp().noInlineStyle && !angular.$$uibTimepickerCss && angular.element(document).find('head').prepend('<style type=\"text/css\">.uib-time input{width:50px;}</style>'); angular.$$uibTimepickerCss = true; });\nangular.module('ui.bootstrap.typeahead').run(function() {!angular.$$csp().noInlineStyle && !angular.$$uibTypeaheadCss && angular.element(document).find('head').prepend('<style type=\"text/css\">[uib-typeahead-popup].dropdown-menu{display:block;}</style>'); angular.$$uibTypeaheadCss = true; });","require('./dist/ui-bootstrap-tpls');\n\nmodule.exports = 'ui.bootstrap';\n","/*\n * angular-elastic v2.5.1\n * (c) 2014 Monospaced http://monospaced.com\n * License: MIT\n */\n\nif (typeof module !== 'undefined' &&\n    typeof exports !== 'undefined' &&\n    module.exports === exports){\n  module.exports = 'monospaced.elastic';\n}\n\nangular.module('monospaced.elastic', [])\n\n  .constant('msdElasticConfig', {\n    append: ''\n  })\n\n  .directive('msdElastic', [\n    '$timeout', '$window', 'msdElasticConfig',\n    function($timeout, $window, config) {\n      'use strict';\n\n      return {\n        require: 'ngModel',\n        restrict: 'A, C',\n        link: function(scope, element, attrs, ngModel) {\n\n          // cache a reference to the DOM element\n          var ta = element[0],\n              $ta = element;\n\n          // ensure the element is a textarea, and browser is capable\n          if (ta.nodeName !== 'TEXTAREA' || !$window.getComputedStyle) {\n            return;\n          }\n\n          // set these properties before measuring dimensions\n          $ta.css({\n            'overflow': 'hidden',\n            'overflow-y': 'hidden',\n            'word-wrap': 'break-word'\n          });\n\n          // force text reflow\n          var text = ta.value;\n          ta.value = '';\n          ta.value = text;\n\n          var append = attrs.msdElastic ? attrs.msdElastic.replace(/\\\\n/g, '\\n') : config.append,\n              $win = angular.element($window),\n              mirrorInitStyle = 'position: absolute; top: -999px; right: auto; bottom: auto;' +\n                                'left: 0; overflow: hidden; -webkit-box-sizing: content-box;' +\n                                '-moz-box-sizing: content-box; box-sizing: content-box;' +\n                                'min-height: 0 !important; height: 0 !important; padding: 0;' +\n                                'word-wrap: break-word; border: 0;',\n              $mirror = angular.element('<textarea aria-hidden=\"true\" tabindex=\"-1\" ' +\n                                        'style=\"' + mirrorInitStyle + '\"/>').data('elastic', true),\n              mirror = $mirror[0],\n              taStyle = getComputedStyle(ta),\n              resize = taStyle.getPropertyValue('resize'),\n              borderBox = taStyle.getPropertyValue('box-sizing') === 'border-box' ||\n                          taStyle.getPropertyValue('-moz-box-sizing') === 'border-box' ||\n                          taStyle.getPropertyValue('-webkit-box-sizing') === 'border-box',\n              boxOuter = !borderBox ? {width: 0, height: 0} : {\n                            width:  parseInt(taStyle.getPropertyValue('border-right-width'), 10) +\n                                    parseInt(taStyle.getPropertyValue('padding-right'), 10) +\n                                    parseInt(taStyle.getPropertyValue('padding-left'), 10) +\n                                    parseInt(taStyle.getPropertyValue('border-left-width'), 10),\n                            height: parseInt(taStyle.getPropertyValue('border-top-width'), 10) +\n                                    parseInt(taStyle.getPropertyValue('padding-top'), 10) +\n                                    parseInt(taStyle.getPropertyValue('padding-bottom'), 10) +\n                                    parseInt(taStyle.getPropertyValue('border-bottom-width'), 10)\n                          },\n              minHeightValue = parseInt(taStyle.getPropertyValue('min-height'), 10),\n              heightValue = parseInt(taStyle.getPropertyValue('height'), 10),\n              minHeight = Math.max(minHeightValue, heightValue) - boxOuter.height,\n              maxHeight = parseInt(taStyle.getPropertyValue('max-height'), 10),\n              mirrored,\n              active,\n              copyStyle = ['font-family',\n                           'font-size',\n                           'font-weight',\n                           'font-style',\n                           'letter-spacing',\n                           'line-height',\n                           'text-transform',\n                           'word-spacing',\n                           'text-indent'];\n\n          // exit if elastic already applied (or is the mirror element)\n          if ($ta.data('elastic')) {\n            return;\n          }\n\n          // Opera returns max-height of -1 if not set\n          maxHeight = maxHeight && maxHeight > 0 ? maxHeight : 9e4;\n\n          // append mirror to the DOM\n          if (mirror.parentNode !== document.body) {\n            angular.element(document.body).append(mirror);\n          }\n\n          // set resize and apply elastic\n          $ta.css({\n            'resize': (resize === 'none' || resize === 'vertical') ? 'none' : 'horizontal'\n          }).data('elastic', true);\n\n          /*\n           * methods\n           */\n\n          function initMirror() {\n            var mirrorStyle = mirrorInitStyle;\n\n            mirrored = ta;\n            // copy the essential styles from the textarea to the mirror\n            taStyle = getComputedStyle(ta);\n            angular.forEach(copyStyle, function(val) {\n              mirrorStyle += val + ':' + taStyle.getPropertyValue(val) + ';';\n            });\n            mirror.setAttribute('style', mirrorStyle);\n          }\n\n          function adjust() {\n            var taHeight,\n                taComputedStyleWidth,\n                mirrorHeight,\n                width,\n                overflow;\n\n            if (mirrored !== ta) {\n              initMirror();\n            }\n\n            // active flag prevents actions in function from calling adjust again\n            if (!active) {\n              active = true;\n\n              mirror.value = ta.value + append; // optional whitespace to improve animation\n              mirror.style.overflowY = ta.style.overflowY;\n\n              taHeight = ta.style.height === '' ? 'auto' : parseInt(ta.style.height, 10);\n\n              taComputedStyleWidth = getComputedStyle(ta).getPropertyValue('width');\n\n              // ensure getComputedStyle has returned a readable 'used value' pixel width\n              if (taComputedStyleWidth.substr(taComputedStyleWidth.length - 2, 2) === 'px') {\n                // update mirror width in case the textarea width has changed\n                width = parseInt(taComputedStyleWidth, 10) - boxOuter.width;\n                mirror.style.width = width + 'px';\n              }\n\n              mirrorHeight = mirror.scrollHeight;\n\n              if (mirrorHeight > maxHeight) {\n                mirrorHeight = maxHeight;\n                overflow = 'scroll';\n              } else if (mirrorHeight < minHeight) {\n                mirrorHeight = minHeight;\n              }\n              mirrorHeight += boxOuter.height;\n              ta.style.overflowY = overflow || 'hidden';\n\n              if (taHeight !== mirrorHeight) {\n                scope.$emit('elastic:resize', $ta, taHeight, mirrorHeight);\n                ta.style.height = mirrorHeight + 'px';\n              }\n\n              // small delay to prevent an infinite loop\n              $timeout(function() {\n                active = false;\n              }, 1, false);\n\n            }\n          }\n\n          function forceAdjust() {\n            active = false;\n            adjust();\n          }\n\n          /*\n           * initialise\n           */\n\n          // listen\n          if ('onpropertychange' in ta && 'oninput' in ta) {\n            // IE9\n            ta['oninput'] = ta.onkeyup = adjust;\n          } else {\n            ta['oninput'] = adjust;\n          }\n\n          $win.bind('resize', forceAdjust);\n\n          scope.$watch(function() {\n            return ngModel.$modelValue;\n          }, function(newValue) {\n            forceAdjust();\n          });\n\n          scope.$on('elastic:adjust', function() {\n            initMirror();\n            forceAdjust();\n          });\n\n          $timeout(adjust, 0, false);\n\n          /*\n           * destroy\n           */\n\n          scope.$on('$destroy', function() {\n            $mirror.remove();\n            $win.unbind('resize', forceAdjust);\n          });\n        }\n      };\n    }\n  ]);\n","'use strict';\n\nfunction RavenConfigError(message) {\n    this.name = 'RavenConfigError';\n    this.message = message;\n}\nRavenConfigError.prototype = new Error();\nRavenConfigError.prototype.constructor = RavenConfigError;\n\nmodule.exports = RavenConfigError;\n","'use strict';\n\nvar wrapMethod = function(console, level, callback) {\n    var originalConsoleLevel = console[level];\n    var originalConsole = console;\n\n    if (!(level in console)) {\n        return;\n    }\n\n    var sentryLevel = level === 'warn'\n        ? 'warning'\n        : level;\n\n    console[level] = function () {\n        var args = [].slice.call(arguments);\n\n        var msg = '' + args.join(' ');\n        var data = {level: sentryLevel, logger: 'console', extra: {'arguments': args}};\n        callback && callback(msg, data);\n\n        // this fails for some browsers. :(\n        if (originalConsoleLevel) {\n            // IE9 doesn't allow calling apply on console functions directly\n            // See: https://stackoverflow.com/questions/5472938/does-ie9-support-console-log-and-is-it-a-real-function#answer-5473193\n            Function.prototype.apply.call(\n                originalConsoleLevel,\n                originalConsole,\n                args\n            );\n        }\n    };\n};\n\nmodule.exports = {\n    wrapMethod: wrapMethod\n};\n","/*global XDomainRequest:false*/\n'use strict';\n\nvar TraceKit = require('../vendor/TraceKit/tracekit');\nvar RavenConfigError = require('./configError');\nvar utils = require('./utils');\nvar stringify = require('json-stringify-safe');\n\nvar isFunction = utils.isFunction;\nvar isUndefined = utils.isUndefined;\nvar isError = utils.isError;\nvar isEmptyObject = utils.isEmptyObject;\nvar hasKey = utils.hasKey;\nvar joinRegExp = utils.joinRegExp;\nvar each = utils.each;\nvar objectMerge = utils.objectMerge;\nvar truncate = utils.truncate;\nvar urlencode = utils.urlencode;\nvar uuid4 = utils.uuid4;\nvar htmlTreeAsString = utils.htmlTreeAsString;\nvar parseUrl = utils.parseUrl;\nvar isString = utils.isString;\nvar fill = utils.fill;\n\nvar wrapConsoleMethod = require('./console').wrapMethod;\n\nvar dsnKeys = 'source protocol user pass host port path'.split(' '),\n    dsnPattern = /^(?:(\\w+):)?\\/\\/(?:(\\w+)(:\\w+)?@)?([\\w\\.-]+)(?::(\\d+))?(\\/.*)/;\n\nfunction now() {\n    return +new Date();\n}\n\n\n// First, check for JSON support\n// If there is no JSON, we no-op the core features of Raven\n// since JSON is required to encode the payload\nfunction Raven() {\n    this._hasJSON = !!(typeof JSON === 'object' && JSON.stringify);\n    // Raven can run in contexts where there's no document (react-native)\n    this._hasDocument = typeof document !== 'undefined';\n    this._lastCapturedException = null;\n    this._lastEventId = null;\n    this._globalServer = null;\n    this._globalKey = null;\n    this._globalProject = null;\n    this._globalContext = {};\n    this._globalOptions = {\n        logger: 'javascript',\n        ignoreErrors: [],\n        ignoreUrls: [],\n        whitelistUrls: [],\n        includePaths: [],\n        crossOrigin: 'anonymous',\n        collectWindowErrors: true,\n        maxMessageLength: 0,\n        stackTraceLimit: 50,\n        autoBreadcrumbs: true\n    };\n    this._ignoreOnError = 0;\n    this._isRavenInstalled = false;\n    this._originalErrorStackTraceLimit = Error.stackTraceLimit;\n    // capture references to window.console *and* all its methods first\n    // before the console plugin has a chance to monkey patch\n    this._originalConsole = window.console || {};\n    this._originalConsoleMethods = {};\n    this._plugins = [];\n    this._startTime = now();\n    this._wrappedBuiltIns = [];\n    this._breadcrumbs = [];\n    this._lastCapturedEvent = null;\n    this._keypressTimeout;\n    this._location = window.location;\n    this._lastHref = this._location && this._location.href;\n\n    for (var method in this._originalConsole) {  // eslint-disable-line guard-for-in\n      this._originalConsoleMethods[method] = this._originalConsole[method];\n    }\n}\n\n/*\n * The core Raven singleton\n *\n * @this {Raven}\n */\n\nRaven.prototype = {\n    // Hardcode version string so that raven source can be loaded directly via\n    // webpack (using a build step causes webpack #1617). Grunt verifies that\n    // this value matches package.json during build.\n    //   See: https://github.com/getsentry/raven-js/issues/465\n    VERSION: '3.7.0',\n\n    debug: false,\n\n    TraceKit: TraceKit, // alias to TraceKit\n\n    /*\n     * Configure Raven with a DSN and extra options\n     *\n     * @param {string} dsn The public Sentry DSN\n     * @param {object} options Optional set of of global options [optional]\n     * @return {Raven}\n     */\n    config: function(dsn, options) {\n        var self = this;\n\n        if (this._globalServer) {\n                this._logDebug('error', 'Error: Raven has already been configured');\n            return this;\n        }\n        if (!dsn) return this;\n\n        // merge in options\n        if (options) {\n            each(options, function(key, value){\n                // tags and extra are special and need to be put into context\n                if (key === 'tags' || key === 'extra') {\n                    self._globalContext[key] = value;\n                } else {\n                    self._globalOptions[key] = value;\n                }\n            });\n        }\n\n        this.setDSN(dsn);\n\n        // \"Script error.\" is hard coded into browsers for errors that it can't read.\n        // this is the result of a script being pulled in from an external domain and CORS.\n        this._globalOptions.ignoreErrors.push(/^Script error\\.?$/);\n        this._globalOptions.ignoreErrors.push(/^Javascript error: Script error\\.? on line 0$/);\n\n        // join regexp rules into one big rule\n        this._globalOptions.ignoreErrors = joinRegExp(this._globalOptions.ignoreErrors);\n        this._globalOptions.ignoreUrls = this._globalOptions.ignoreUrls.length ? joinRegExp(this._globalOptions.ignoreUrls) : false;\n        this._globalOptions.whitelistUrls = this._globalOptions.whitelistUrls.length ? joinRegExp(this._globalOptions.whitelistUrls) : false;\n        this._globalOptions.includePaths = joinRegExp(this._globalOptions.includePaths);\n        this._globalOptions.maxBreadcrumbs = Math.max(0, Math.min(this._globalOptions.maxBreadcrumbs || 100, 100)); // default and hard limit is 100\n\n        var autoBreadcrumbDefaults = {\n            xhr: true,\n            console: true,\n            dom: true,\n            location: true\n        };\n\n        var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n        if ({}.toString.call(autoBreadcrumbs) === '[object Object]') {\n            autoBreadcrumbs = objectMerge(autoBreadcrumbDefaults, autoBreadcrumbs);\n        } else if (autoBreadcrumbs !== false) {\n            autoBreadcrumbs = autoBreadcrumbDefaults;\n        }\n        this._globalOptions.autoBreadcrumbs = autoBreadcrumbs;\n\n        TraceKit.collectWindowErrors = !!this._globalOptions.collectWindowErrors;\n\n        // return for chaining\n        return this;\n    },\n\n    /*\n     * Installs a global window.onerror error handler\n     * to capture and report uncaught exceptions.\n     * At this point, install() is required to be called due\n     * to the way TraceKit is set up.\n     *\n     * @return {Raven}\n     */\n    install: function() {\n        var self = this;\n        if (this.isSetup() && !this._isRavenInstalled) {\n            TraceKit.report.subscribe(function () {\n                self._handleOnErrorStackInfo.apply(self, arguments);\n            });\n            this._instrumentTryCatch();\n            if (self._globalOptions.autoBreadcrumbs)\n                this._instrumentBreadcrumbs();\n\n            // Install all of the plugins\n            this._drainPlugins();\n\n            this._isRavenInstalled = true;\n        }\n\n        Error.stackTraceLimit = this._globalOptions.stackTraceLimit;\n        return this;\n    },\n\n    /*\n     * Set the DSN (can be called multiple time unlike config)\n     *\n     * @param {string} dsn The public Sentry DSN\n     */\n    setDSN: function(dsn) {\n        var uri = this._parseDSN(dsn),\n          lastSlash = uri.path.lastIndexOf('/'),\n          path = uri.path.substr(1, lastSlash);\n\n        this._dsn = dsn;\n        this._globalKey = uri.user;\n        this._globalSecret = uri.pass && uri.pass.substr(1);\n        this._globalProject = uri.path.substr(lastSlash + 1);\n\n        this._globalServer = this._getGlobalServer(uri);\n\n        this._globalEndpoint = this._globalServer +\n            '/' + path + 'api/' + this._globalProject + '/store/';\n    },\n\n    /*\n     * Wrap code within a context so Raven can capture errors\n     * reliably across domains that is executed immediately.\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The callback to be immediately executed within the context\n     * @param {array} args An array of arguments to be called with the callback [optional]\n     */\n    context: function(options, func, args) {\n        if (isFunction(options)) {\n            args = func || [];\n            func = options;\n            options = undefined;\n        }\n\n        return this.wrap(options, func).apply(this, args);\n    },\n\n    /*\n     * Wrap code within a context and returns back a new function to be executed\n     *\n     * @param {object} options A specific set of options for this context [optional]\n     * @param {function} func The function to be wrapped in a new context\n     * @param {function} func A function to call before the try/catch wrapper [optional, private]\n     * @return {function} The newly wrapped functions with a context\n     */\n    wrap: function(options, func, _before) {\n        var self = this;\n        // 1 argument has been passed, and it's not a function\n        // so just return it\n        if (isUndefined(func) && !isFunction(options)) {\n            return options;\n        }\n\n        // options is optional\n        if (isFunction(options)) {\n            func = options;\n            options = undefined;\n        }\n\n        // At this point, we've passed along 2 arguments, and the second one\n        // is not a function either, so we'll just return the second argument.\n        if (!isFunction(func)) {\n            return func;\n        }\n\n        // We don't wanna wrap it twice!\n        try {\n            if (func.__raven__) {\n                return func;\n            }\n\n            // If this has already been wrapped in the past, return that\n            if (func.__raven_wrapper__ ){\n                return func.__raven_wrapper__ ;\n            }\n        } catch (e) {\n            // Just accessing custom props in some Selenium environments\n            // can cause a \"Permission denied\" exception (see raven-js#495).\n            // Bail on wrapping and return the function as-is (defers to window.onerror).\n            return func;\n        }\n\n        function wrapped() {\n            var args = [], i = arguments.length,\n                deep = !options || options && options.deep !== false;\n\n            if (_before && isFunction(_before)) {\n                _before.apply(this, arguments);\n            }\n\n            // Recursively wrap all of a function's arguments that are\n            // functions themselves.\n            while(i--) args[i] = deep ? self.wrap(options, arguments[i]) : arguments[i];\n\n            try {\n                return func.apply(this, args);\n            } catch(e) {\n                self._ignoreNextOnError();\n                self.captureException(e, options);\n                throw e;\n            }\n        }\n\n        // copy over properties of the old function\n        for (var property in func) {\n            if (hasKey(func, property)) {\n                wrapped[property] = func[property];\n            }\n        }\n        wrapped.prototype = func.prototype;\n\n        func.__raven_wrapper__ = wrapped;\n        // Signal that this function has been wrapped already\n        // for both debugging and to prevent it to being wrapped twice\n        wrapped.__raven__ = true;\n        wrapped.__inner__ = func;\n\n        return wrapped;\n    },\n\n    /*\n     * Uninstalls the global error handler.\n     *\n     * @return {Raven}\n     */\n    uninstall: function() {\n        TraceKit.report.uninstall();\n\n        this._restoreBuiltIns();\n\n        Error.stackTraceLimit = this._originalErrorStackTraceLimit;\n        this._isRavenInstalled = false;\n\n        return this;\n    },\n\n    /*\n     * Manually capture an exception and send it over to Sentry\n     *\n     * @param {error} ex An exception to be logged\n     * @param {object} options A specific set of options for this error [optional]\n     * @return {Raven}\n     */\n    captureException: function(ex, options) {\n        // If not an Error is passed through, recall as a message instead\n        if (!isError(ex)) {\n            return this.captureMessage(ex, objectMerge({\n                trimHeadFrames: 1,\n                stacktrace: true // if we fall back to captureMessage, default to attempting a new trace\n            }, options));\n        }\n\n        // Store the raw exception object for potential debugging and introspection\n        this._lastCapturedException = ex;\n\n        // TraceKit.report will re-raise any exception passed to it,\n        // which means you have to wrap it in try/catch. Instead, we\n        // can wrap it here and only re-raise if TraceKit.report\n        // raises an exception different from the one we asked to\n        // report on.\n        try {\n            var stack = TraceKit.computeStackTrace(ex);\n            this._handleStackInfo(stack, options);\n        } catch(ex1) {\n            if(ex !== ex1) {\n                throw ex1;\n            }\n        }\n\n        return this;\n    },\n\n    /*\n     * Manually send a message to Sentry\n     *\n     * @param {string} msg A plain message to be captured in Sentry\n     * @param {object} options A specific set of options for this message [optional]\n     * @return {Raven}\n     */\n    captureMessage: function(msg, options) {\n        // config() automagically converts ignoreErrors from a list to a RegExp so we need to test for an\n        // early call; we'll error on the side of logging anything called before configuration since it's\n        // probably something you should see:\n        if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(msg)) {\n            return;\n        }\n\n        var data = objectMerge({\n            message: msg + ''  // Make sure it's actually a string\n        }, options);\n\n        if (options && options.stacktrace) {\n            var ex;\n            // create a stack trace from this point; just trim\n            // off extra frames so they don't include this function call (or\n            // earlier Raven.js library fn calls)\n            try {\n                throw new Error(msg);\n            } catch (ex1) {\n                ex = ex1;\n            }\n\n            // null exception name so `Error` isn't prefixed to msg\n            ex.name = null;\n\n            options = objectMerge({\n                // fingerprint on msg, not stack trace (legacy behavior, could be\n                // revisited)\n                fingerprint: msg,\n                trimHeadFrames: (options.trimHeadFrames || 0) + 1\n            }, options);\n\n            var stack = TraceKit.computeStackTrace(ex);\n            var frames = this._prepareFrames(stack, options);\n            data.stacktrace = {\n                // Sentry expects frames oldest to newest\n                frames: frames.reverse()\n            }\n        }\n\n        // Fire away!\n        this._send(data);\n\n        return this;\n    },\n\n    captureBreadcrumb: function (obj) {\n        var crumb = objectMerge({\n            timestamp: now() / 1000\n        }, obj);\n\n        this._breadcrumbs.push(crumb);\n        if (this._breadcrumbs.length > this._globalOptions.maxBreadcrumbs) {\n            this._breadcrumbs.shift();\n        }\n        return this;\n    },\n\n    addPlugin: function(plugin /*arg1, arg2, ... argN*/) {\n        var pluginArgs = Array.prototype.slice.call(arguments, 1);\n\n        this._plugins.push([plugin, pluginArgs]);\n        if (this._isRavenInstalled) {\n            this._drainPlugins();\n        }\n\n        return this;\n    },\n\n    /*\n     * Set/clear a user to be sent along with the payload.\n     *\n     * @param {object} user An object representing user data [optional]\n     * @return {Raven}\n     */\n    setUserContext: function(user) {\n        // Intentionally do not merge here since that's an unexpected behavior.\n        this._globalContext.user = user;\n\n        return this;\n    },\n\n    /*\n     * Merge extra attributes to be sent along with the payload.\n     *\n     * @param {object} extra An object representing extra data [optional]\n     * @return {Raven}\n     */\n    setExtraContext: function(extra) {\n        this._mergeContext('extra', extra);\n\n        return this;\n    },\n\n    /*\n     * Merge tags to be sent along with the payload.\n     *\n     * @param {object} tags An object representing tags [optional]\n     * @return {Raven}\n     */\n    setTagsContext: function(tags) {\n        this._mergeContext('tags', tags);\n\n        return this;\n    },\n\n    /*\n     * Clear all of the context.\n     *\n     * @return {Raven}\n     */\n    clearContext: function() {\n        this._globalContext = {};\n\n        return this;\n    },\n\n    /*\n     * Get a copy of the current context. This cannot be mutated.\n     *\n     * @return {object} copy of context\n     */\n    getContext: function() {\n        // lol javascript\n        return JSON.parse(stringify(this._globalContext));\n    },\n\n\n    /*\n     * Set environment of application\n     *\n     * @param {string} environment Typically something like 'production'.\n     * @return {Raven}\n     */\n    setEnvironment: function(environment) {\n        this._globalOptions.environment = environment;\n\n        return this;\n    },\n\n    /*\n     * Set release version of application\n     *\n     * @param {string} release Typically something like a git SHA to identify version\n     * @return {Raven}\n     */\n    setRelease: function(release) {\n        this._globalOptions.release = release;\n\n        return this;\n    },\n\n    /*\n     * Set the dataCallback option\n     *\n     * @param {function} callback The callback to run which allows the\n     *                            data blob to be mutated before sending\n     * @return {Raven}\n     */\n    setDataCallback: function(callback) {\n        var original = this._globalOptions.dataCallback;\n        this._globalOptions.dataCallback = isFunction(callback)\n          ? function (data) { return callback(data, original); }\n          : callback;\n\n        return this;\n    },\n\n    /*\n     * Set the shouldSendCallback option\n     *\n     * @param {function} callback The callback to run which allows\n     *                            introspecting the blob before sending\n     * @return {Raven}\n     */\n    setShouldSendCallback: function(callback) {\n        var original = this._globalOptions.shouldSendCallback;\n        this._globalOptions.shouldSendCallback = isFunction(callback)\n            ? function (data) { return callback(data, original); }\n            : callback;\n\n        return this;\n    },\n\n    /**\n     * Override the default HTTP transport mechanism that transmits data\n     * to the Sentry server.\n     *\n     * @param {function} transport Function invoked instead of the default\n     *                             `makeRequest` handler.\n     *\n     * @return {Raven}\n     */\n    setTransport: function(transport) {\n        this._globalOptions.transport = transport;\n\n        return this;\n    },\n\n    /*\n     * Get the latest raw exception that was captured by Raven.\n     *\n     * @return {error}\n     */\n    lastException: function() {\n        return this._lastCapturedException;\n    },\n\n    /*\n     * Get the last event id\n     *\n     * @return {string}\n     */\n    lastEventId: function() {\n        return this._lastEventId;\n    },\n\n    /*\n     * Determine if Raven is setup and ready to go.\n     *\n     * @return {boolean}\n     */\n    isSetup: function() {\n        if (!this._hasJSON) return false;  // needs JSON support\n        if (!this._globalServer) {\n            if (!this.ravenNotConfiguredError) {\n              this.ravenNotConfiguredError = true;\n              this._logDebug('error', 'Error: Raven has not been configured.');\n            }\n            return false;\n        }\n        return true;\n    },\n\n    afterLoad: function () {\n        // TODO: remove window dependence?\n\n        // Attempt to initialize Raven on load\n        var RavenConfig = window.RavenConfig;\n        if (RavenConfig) {\n            this.config(RavenConfig.dsn, RavenConfig.config).install();\n        }\n    },\n\n    showReportDialog: function (options) {\n        if (!window.document) // doesn't work without a document (React native)\n            return;\n\n        options = options || {};\n\n        var lastEventId = options.eventId || this.lastEventId();\n        if (!lastEventId) {\n            throw new RavenConfigError('Missing eventId');\n        }\n\n        var dsn = options.dsn || this._dsn;\n        if (!dsn) {\n            throw new RavenConfigError('Missing DSN');\n        }\n\n        var encode = encodeURIComponent;\n        var qs = '';\n        qs += '?eventId=' + encode(lastEventId);\n        qs += '&dsn=' + encode(dsn);\n\n        var user = options.user || this._globalContext.user;\n        if (user) {\n            if (user.name)  qs += '&name=' + encode(user.name);\n            if (user.email) qs += '&email=' + encode(user.email);\n        }\n\n        var globalServer = this._getGlobalServer(this._parseDSN(dsn));\n\n        var script = document.createElement('script');\n        script.async = true;\n        script.src = globalServer + '/api/embed/error-page/' + qs;\n        (document.head || document.body).appendChild(script);\n    },\n\n    /**** Private functions ****/\n    _ignoreNextOnError: function () {\n        var self = this;\n        this._ignoreOnError += 1;\n        setTimeout(function () {\n            // onerror should trigger before setTimeout\n            self._ignoreOnError -= 1;\n        });\n    },\n\n    _triggerEvent: function(eventType, options) {\n        // NOTE: `event` is a native browser thing, so let's avoid conflicting wiht it\n        var evt, key;\n\n        if (!this._hasDocument)\n            return;\n\n        options = options || {};\n\n        eventType = 'raven' + eventType.substr(0,1).toUpperCase() + eventType.substr(1);\n\n        if (document.createEvent) {\n            evt = document.createEvent('HTMLEvents');\n            evt.initEvent(eventType, true, true);\n        } else {\n            evt = document.createEventObject();\n            evt.eventType = eventType;\n        }\n\n        for (key in options) if (hasKey(options, key)) {\n            evt[key] = options[key];\n        }\n\n        if (document.createEvent) {\n            // IE9 if standards\n            document.dispatchEvent(evt);\n        } else {\n            // IE8 regardless of Quirks or Standards\n            // IE9 if quirks\n            try {\n                document.fireEvent('on' + evt.eventType.toLowerCase(), evt);\n            } catch(e) {\n                // Do nothing\n            }\n        }\n    },\n\n    /**\n     * Wraps addEventListener to capture UI breadcrumbs\n     * @param evtName the event name (e.g. \"click\")\n     * @returns {Function}\n     * @private\n     */\n    _breadcrumbEventHandler: function(evtName) {\n        var self = this;\n        return function (evt) {\n            // reset keypress timeout; e.g. triggering a 'click' after\n            // a 'keypress' will reset the keypress debounce so that a new\n            // set of keypresses can be recorded\n            self._keypressTimeout = null;\n\n            // It's possible this handler might trigger multiple times for the same\n            // event (e.g. event propagation through node ancestors). Ignore if we've\n            // already captured the event.\n            if (self._lastCapturedEvent === evt)\n                return;\n\n            self._lastCapturedEvent = evt;\n            var elem = evt.target;\n\n            var target;\n\n            // try/catch htmlTreeAsString because it's particularly complicated, and\n            // just accessing the DOM incorrectly can throw an exception in some circumstances.\n            try {\n                target = htmlTreeAsString(elem);\n            } catch (e) {\n                target = '<unknown>';\n            }\n\n            self.captureBreadcrumb({\n                category: 'ui.' + evtName, // e.g. ui.click, ui.input\n                message: target\n            });\n        };\n    },\n\n    /**\n     * Wraps addEventListener to capture keypress UI events\n     * @returns {Function}\n     * @private\n     */\n    _keypressEventHandler: function() {\n        var self = this,\n            debounceDuration = 1000; // milliseconds\n\n        // TODO: if somehow user switches keypress target before\n        //       debounce timeout is triggered, we will only capture\n        //       a single breadcrumb from the FIRST target (acceptable?)\n\n        return function (evt) {\n            var target = evt.target,\n                tagName = target && target.tagName;\n\n            // only consider keypress events on actual input elements\n            // this will disregard keypresses targeting body (e.g. tabbing\n            // through elements, hotkeys, etc)\n            if (!tagName || tagName !== 'INPUT' && tagName !== 'TEXTAREA')\n                return;\n\n            // record first keypress in a series, but ignore subsequent\n            // keypresses until debounce clears\n            var timeout = self._keypressTimeout;\n            if (!timeout) {\n                self._breadcrumbEventHandler('input')(evt);\n            }\n            clearTimeout(timeout);\n            self._keypressTimeout = setTimeout(function () {\n               self._keypressTimeout = null;\n            }, debounceDuration);\n        };\n    },\n\n    /**\n     * Captures a breadcrumb of type \"navigation\", normalizing input URLs\n     * @param to the originating URL\n     * @param from the target URL\n     * @private\n     */\n    _captureUrlChange: function(from, to) {\n        var parsedLoc = parseUrl(this._location.href);\n        var parsedTo = parseUrl(to);\n        var parsedFrom = parseUrl(from);\n\n        // because onpopstate only tells you the \"new\" (to) value of location.href, and\n        // not the previous (from) value, we need to track the value of the current URL\n        // state ourselves\n        this._lastHref = to;\n\n        // Use only the path component of the URL if the URL matches the current\n        // document (almost all the time when using pushState)\n        if (parsedLoc.protocol === parsedTo.protocol && parsedLoc.host === parsedTo.host)\n            to = parsedTo.relative;\n        if (parsedLoc.protocol === parsedFrom.protocol && parsedLoc.host === parsedFrom.host)\n            from = parsedFrom.relative;\n\n        this.captureBreadcrumb({\n            category: 'navigation',\n            data: {\n                to: to,\n                from: from\n            }\n        });\n    },\n\n    /**\n     * Install any queued plugins\n     */\n    _instrumentTryCatch: function() {\n        var self = this;\n\n        var wrappedBuiltIns = self._wrappedBuiltIns;\n\n        function wrapTimeFn(orig) {\n            return function (fn, t) { // preserve arity\n                // Make a copy of the arguments to prevent deoptimization\n                // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n                var args = new Array(arguments.length);\n                for(var i = 0; i < args.length; ++i) {\n                    args[i] = arguments[i];\n                }\n                var originalCallback = args[0];\n                if (isFunction(originalCallback)) {\n                    args[0] = self.wrap(originalCallback);\n                }\n\n                // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\n                // also supports only two arguments and doesn't care what this is, so we\n                // can just call the original function directly.\n                if (orig.apply) {\n                    return orig.apply(this, args);\n                } else {\n                    return orig(args[0], args[1]);\n                }\n            };\n        }\n\n        var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n        function wrapEventTarget(global) {\n            var proto = window[global] && window[global].prototype;\n            if (proto && proto.hasOwnProperty && proto.hasOwnProperty('addEventListener')) {\n                fill(proto, 'addEventListener', function(orig) {\n                    return function (evtName, fn, capture, secure) { // preserve arity\n                        try {\n                            if (fn && fn.handleEvent) {\n                                fn.handleEvent = self.wrap(fn.handleEvent);\n                            }\n                        } catch (err) {\n                            // can sometimes get 'Permission denied to access property \"handle Event'\n                        }\n\n                        // More breadcrumb DOM capture ... done here and not in `_instrumentBreadcrumbs`\n                        // so that we don't have more than one wrapper function\n                        var before;\n                        if (autoBreadcrumbs && autoBreadcrumbs.dom && (global === 'EventTarget' || global === 'Node')) {\n                            if (evtName === 'click'){\n                                before = self._breadcrumbEventHandler(evtName);\n                            } else if (evtName === 'keypress') {\n                                before = self._keypressEventHandler();\n                            }\n                        }\n                        return orig.call(this, evtName, self.wrap(fn, undefined, before), capture, secure);\n                    };\n                }, wrappedBuiltIns);\n                fill(proto, 'removeEventListener', function (orig) {\n                    return function (evt, fn, capture, secure) {\n                        try {\n                            fn = fn && (fn.__raven_wrapper__ ? fn.__raven_wrapper__  : fn);\n                        } catch (e) {\n                            // ignore, accessing __raven_wrapper__ will throw in some Selenium environments\n                        }\n                        return orig.call(this, evt, fn, capture, secure);\n                    };\n                }, wrappedBuiltIns);\n            }\n        }\n\n        fill(window, 'setTimeout', wrapTimeFn, wrappedBuiltIns);\n        fill(window, 'setInterval', wrapTimeFn, wrappedBuiltIns);\n        if (window.requestAnimationFrame) {\n            fill(window, 'requestAnimationFrame', function (orig) {\n                return function (cb) {\n                    return orig(self.wrap(cb));\n                };\n            }, wrappedBuiltIns);\n        }\n\n        // event targets borrowed from bugsnag-js:\n        // https://github.com/bugsnag/bugsnag-js/blob/master/src/bugsnag.js#L666\n        var eventTargets = ['EventTarget', 'Window', 'Node', 'ApplicationCache', 'AudioTrackList', 'ChannelMergerNode', 'CryptoOperation', 'EventSource', 'FileReader', 'HTMLUnknownElement', 'IDBDatabase', 'IDBRequest', 'IDBTransaction', 'KeyOperation', 'MediaController', 'MessagePort', 'ModalWindow', 'Notification', 'SVGElementInstance', 'Screen', 'TextTrack', 'TextTrackCue', 'TextTrackList', 'WebSocket', 'WebSocketWorker', 'Worker', 'XMLHttpRequest', 'XMLHttpRequestEventTarget', 'XMLHttpRequestUpload'];\n        for (var i = 0; i < eventTargets.length; i++) {\n            wrapEventTarget(eventTargets[i]);\n        }\n\n        var $ = window.jQuery || window.$;\n        if ($ && $.fn && $.fn.ready) {\n            fill($.fn, 'ready', function (orig) {\n                return function (fn) {\n                    return orig.call(this, self.wrap(fn));\n                };\n            }, wrappedBuiltIns);\n        }\n    },\n\n\n    /**\n     * Instrument browser built-ins w/ breadcrumb capturing\n     *  - XMLHttpRequests\n     *  - DOM interactions (click/typing)\n     *  - window.location changes\n     *  - console\n     *\n     * Can be disabled or individually configured via the `autoBreadcrumbs` config option\n     */\n    _instrumentBreadcrumbs: function () {\n        var self = this;\n        var autoBreadcrumbs = this._globalOptions.autoBreadcrumbs;\n\n        var wrappedBuiltIns = self._wrappedBuiltIns;\n\n        function wrapProp(prop, xhr) {\n            if (prop in xhr && isFunction(xhr[prop])) {\n                fill(xhr, prop, function (orig) {\n                    return self.wrap(orig);\n                }); // intentionally don't track filled methods on XHR instances\n            }\n        }\n\n        if (autoBreadcrumbs.xhr && 'XMLHttpRequest' in window) {\n            var xhrproto = XMLHttpRequest.prototype;\n            fill(xhrproto, 'open', function(origOpen) {\n                return function (method, url) { // preserve arity\n\n                    // if Sentry key appears in URL, don't capture\n                    if (isString(url) && url.indexOf(self._globalKey) === -1) {\n                        this.__raven_xhr = {\n                            method: method,\n                            url: url,\n                            status_code: null\n                        };\n                    }\n\n                    return origOpen.apply(this, arguments);\n                };\n            }, wrappedBuiltIns);\n\n            fill(xhrproto, 'send', function(origSend) {\n                return function (data) { // preserve arity\n                    var xhr = this;\n\n                    function onreadystatechangeHandler() {\n                        if (xhr.__raven_xhr && (xhr.readyState === 1 || xhr.readyState === 4)) {\n                            try {\n                                // touching statusCode in some platforms throws\n                                // an exception\n                                xhr.__raven_xhr.status_code = xhr.status;\n                            } catch (e) { /* do nothing */ }\n                            self.captureBreadcrumb({\n                                type: 'http',\n                                category: 'xhr',\n                                data: xhr.__raven_xhr\n                            });\n                        }\n                    }\n\n                    var props = ['onload', 'onerror', 'onprogress'];\n                    for (var j = 0; j < props.length; j++) {\n                        wrapProp(props[j], xhr);\n                    }\n\n                    if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\n                        fill(xhr, 'onreadystatechange', function (orig) {\n                            return self.wrap(orig, undefined, onreadystatechangeHandler);\n                        } /* intentionally don't track this instrumentation */);\n                    } else {\n                        // if onreadystatechange wasn't actually set by the page on this xhr, we\n                        // are free to set our own and capture the breadcrumb\n                        xhr.onreadystatechange = onreadystatechangeHandler;\n                    }\n\n                    return origSend.apply(this, arguments);\n                };\n            }, wrappedBuiltIns);\n        }\n\n        // Capture breadcrumbs from any click that is unhandled / bubbled up all the way\n        // to the document. Do this before we instrument addEventListener.\n        if (autoBreadcrumbs.dom && this._hasDocument) {\n            if (document.addEventListener) {\n                document.addEventListener('click', self._breadcrumbEventHandler('click'), false);\n                document.addEventListener('keypress', self._keypressEventHandler(), false);\n            }\n            else {\n                // IE8 Compatibility\n                document.attachEvent('onclick', self._breadcrumbEventHandler('click'));\n                document.attachEvent('onkeypress', self._keypressEventHandler());\n            }\n        }\n\n        // record navigation (URL) changes\n        // NOTE: in Chrome App environment, touching history.pushState, *even inside\n        //       a try/catch block*, will cause Chrome to output an error to console.error\n        // borrowed from: https://github.com/angular/angular.js/pull/13945/files\n        var chrome = window.chrome;\n        var isChromePackagedApp = chrome && chrome.app && chrome.app.runtime;\n        var hasPushState = !isChromePackagedApp && window.history && history.pushState;\n        if (autoBreadcrumbs.location && hasPushState) {\n            // TODO: remove onpopstate handler on uninstall()\n            var oldOnPopState = window.onpopstate;\n            window.onpopstate = function () {\n                var currentHref = self._location.href;\n                self._captureUrlChange(self._lastHref, currentHref);\n\n                if (oldOnPopState) {\n                    return oldOnPopState.apply(this, arguments);\n                }\n            };\n\n            fill(history, 'pushState', function (origPushState) {\n                // note history.pushState.length is 0; intentionally not declaring\n                // params to preserve 0 arity\n                return function (/* state, title, url */) {\n                    var url = arguments.length > 2 ? arguments[2] : undefined;\n\n                    // url argument is optional\n                    if (url) {\n                        // coerce to string (this is what pushState does)\n                        self._captureUrlChange(self._lastHref, url + '');\n                    }\n\n                    return origPushState.apply(this, arguments);\n                };\n            }, wrappedBuiltIns);\n        }\n\n        if (autoBreadcrumbs.console && 'console' in window && console.log) {\n            // console\n            var consoleMethodCallback = function (msg, data) {\n                self.captureBreadcrumb({\n                    message: msg,\n                    level: data.level,\n                    category: 'console'\n                });\n            };\n\n            each(['debug', 'info', 'warn', 'error', 'log'], function (_, level) {\n                wrapConsoleMethod(console, level, consoleMethodCallback);\n            });\n        }\n\n    },\n\n    _restoreBuiltIns: function () {\n        // restore any wrapped builtins\n        var builtin;\n        while (this._wrappedBuiltIns.length) {\n            builtin = this._wrappedBuiltIns.shift();\n\n            var obj = builtin[0],\n              name = builtin[1],\n              orig = builtin[2];\n\n            obj[name] = orig;\n        }\n    },\n\n    _drainPlugins: function() {\n        var self = this;\n\n        // FIX ME TODO\n        each(this._plugins, function(_, plugin) {\n            var installer = plugin[0];\n            var args = plugin[1];\n            installer.apply(self, [self].concat(args));\n        });\n    },\n\n    _parseDSN: function(str) {\n        var m = dsnPattern.exec(str),\n            dsn = {},\n            i = 7;\n\n        try {\n            while (i--) dsn[dsnKeys[i]] = m[i] || '';\n        } catch(e) {\n            throw new RavenConfigError('Invalid DSN: ' + str);\n        }\n\n        if (dsn.pass && !this._globalOptions.allowSecretKey) {\n            throw new RavenConfigError('Do not specify your secret key in the DSN. See: http://bit.ly/raven-secret-key');\n        }\n\n        return dsn;\n    },\n\n    _getGlobalServer: function(uri) {\n        // assemble the endpoint from the uri pieces\n        var globalServer = '//' + uri.host +\n            (uri.port ? ':' + uri.port : '');\n\n        if (uri.protocol) {\n            globalServer = uri.protocol + ':' + globalServer;\n        }\n        return globalServer;\n    },\n\n    _handleOnErrorStackInfo: function() {\n        // if we are intentionally ignoring errors via onerror, bail out\n        if (!this._ignoreOnError) {\n            this._handleStackInfo.apply(this, arguments);\n        }\n    },\n\n    _handleStackInfo: function(stackInfo, options) {\n        var frames = this._prepareFrames(stackInfo, options);\n\n        this._triggerEvent('handle', {\n            stackInfo: stackInfo,\n            options: options\n        });\n\n        this._processException(\n            stackInfo.name,\n            stackInfo.message,\n            stackInfo.url,\n            stackInfo.lineno,\n            frames,\n            options\n        );\n    },\n\n    _prepareFrames: function(stackInfo, options) {\n        var self = this;\n        var frames = [];\n        if (stackInfo.stack && stackInfo.stack.length) {\n            each(stackInfo.stack, function(i, stack) {\n                var frame = self._normalizeFrame(stack);\n                if (frame) {\n                    frames.push(frame);\n                }\n            });\n\n            // e.g. frames captured via captureMessage throw\n            if (options && options.trimHeadFrames) {\n                for (var j = 0; j < options.trimHeadFrames && j < frames.length; j++) {\n                    frames[j].in_app = false;\n                }\n            }\n        }\n        frames = frames.slice(0, this._globalOptions.stackTraceLimit);\n        return frames;\n    },\n\n\n    _normalizeFrame: function(frame) {\n        if (!frame.url) return;\n\n        // normalize the frames data\n        var normalized = {\n            filename:   frame.url,\n            lineno:     frame.line,\n            colno:      frame.column,\n            'function': frame.func || '?'\n        };\n\n        normalized.in_app = !( // determine if an exception came from outside of our app\n            // first we check the global includePaths list.\n            !!this._globalOptions.includePaths.test && !this._globalOptions.includePaths.test(normalized.filename) ||\n            // Now we check for fun, if the function name is Raven or TraceKit\n            /(Raven|TraceKit)\\./.test(normalized['function']) ||\n            // finally, we do a last ditch effort and check for raven.min.js\n            /raven\\.(min\\.)?js$/.test(normalized.filename)\n        );\n\n        return normalized;\n    },\n\n    _processException: function(type, message, fileurl, lineno, frames, options) {\n        var stacktrace;\n        if (!!this._globalOptions.ignoreErrors.test && this._globalOptions.ignoreErrors.test(message)) return;\n\n        message += '';\n\n        if (frames && frames.length) {\n            fileurl = frames[0].filename || fileurl;\n            // Sentry expects frames oldest to newest\n            // and JS sends them as newest to oldest\n            frames.reverse();\n            stacktrace = {frames: frames};\n        } else if (fileurl) {\n            stacktrace = {\n                frames: [{\n                    filename: fileurl,\n                    lineno: lineno,\n                    in_app: true\n                }]\n            };\n        }\n\n        if (!!this._globalOptions.ignoreUrls.test && this._globalOptions.ignoreUrls.test(fileurl)) return;\n        if (!!this._globalOptions.whitelistUrls.test && !this._globalOptions.whitelistUrls.test(fileurl)) return;\n\n        var data = objectMerge({\n            // sentry.interfaces.Exception\n            exception: {\n                values: [{\n                    type: type,\n                    value: message,\n                    stacktrace: stacktrace\n                }]\n            },\n            culprit: fileurl\n        }, options);\n\n        // Fire away!\n        this._send(data);\n    },\n\n    _trimPacket: function(data) {\n        // For now, we only want to truncate the two different messages\n        // but this could/should be expanded to just trim everything\n        var max = this._globalOptions.maxMessageLength;\n        if (data.message) {\n            data.message = truncate(data.message, max);\n        }\n        if (data.exception) {\n            var exception = data.exception.values[0];\n            exception.value = truncate(exception.value, max);\n        }\n\n        return data;\n    },\n\n    _getHttpData: function() {\n        if (!this._hasDocument || !document.location || !document.location.href) {\n            return;\n        }\n\n        var httpData = {\n            headers: {\n                'User-Agent': navigator.userAgent\n            }\n        };\n\n        httpData.url = document.location.href;\n\n        if (document.referrer) {\n            httpData.headers.Referer = document.referrer;\n        }\n\n        return httpData;\n    },\n\n\n    _send: function(data) {\n        var globalOptions = this._globalOptions;\n\n        var baseData = {\n            project: this._globalProject,\n            logger: globalOptions.logger,\n            platform: 'javascript'\n        }, httpData = this._getHttpData();\n\n        if (httpData) {\n            baseData.request = httpData;\n        }\n\n        // HACK: delete `trimHeadFrames` to prevent from appearing in outbound payload\n        if (data.trimHeadFrames) delete data.trimHeadFrames;\n\n        data = objectMerge(baseData, data);\n\n        // Merge in the tags and extra separately since objectMerge doesn't handle a deep merge\n        data.tags = objectMerge(objectMerge({}, this._globalContext.tags), data.tags);\n        data.extra = objectMerge(objectMerge({}, this._globalContext.extra), data.extra);\n\n        // Send along our own collected metadata with extra\n        data.extra['session:duration'] = now() - this._startTime;\n\n        if (this._breadcrumbs && this._breadcrumbs.length > 0) {\n            // intentionally make shallow copy so that additions\n            // to breadcrumbs aren't accidentally sent in this request\n            data.breadcrumbs = {\n                values: [].slice.call(this._breadcrumbs, 0)\n            };\n        }\n\n        // If there are no tags/extra, strip the key from the payload alltogther.\n        if (isEmptyObject(data.tags)) delete data.tags;\n\n        if (this._globalContext.user) {\n            // sentry.interfaces.User\n            data.user = this._globalContext.user;\n        }\n\n        // Include the environment if it's defined in globalOptions\n        if (globalOptions.environment) data.environment = globalOptions.environment;\n\n        // Include the release if it's defined in globalOptions\n        if (globalOptions.release) data.release = globalOptions.release;\n\n        // Include server_name if it's defined in globalOptions\n        if (globalOptions.serverName) data.server_name = globalOptions.serverName;\n\n        if (isFunction(globalOptions.dataCallback)) {\n            data = globalOptions.dataCallback(data) || data;\n        }\n\n        // Why??????????\n        if (!data || isEmptyObject(data)) {\n            return;\n        }\n\n        // Check if the request should be filtered or not\n        if (isFunction(globalOptions.shouldSendCallback) && !globalOptions.shouldSendCallback(data)) {\n            return;\n        }\n\n        this._sendProcessedPayload(data);\n    },\n\n    _sendProcessedPayload: function(data, callback) {\n        var self = this;\n        var globalOptions = this._globalOptions;\n\n        // Send along an event_id if not explicitly passed.\n        // This event_id can be used to reference the error within Sentry itself.\n        // Set lastEventId after we know the error should actually be sent\n        this._lastEventId = data.event_id || (data.event_id = uuid4());\n\n        // Try and clean up the packet before sending by truncating long values\n        data = this._trimPacket(data);\n\n        this._logDebug('debug', 'Raven about to send:', data);\n\n        if (!this.isSetup()) return;\n\n        var auth = {\n            sentry_version: '7',\n            sentry_client: 'raven-js/' + this.VERSION,\n            sentry_key: this._globalKey\n        };\n        if (this._globalSecret) {\n            auth.sentry_secret = this._globalSecret;\n        }\n\n        var exception = data.exception && data.exception.values[0];\n        this.captureBreadcrumb({\n            category: 'sentry',\n            message: exception\n                ? (exception.type ? exception.type + ': ' : '') + exception.value\n                : data.message,\n            event_id: data.event_id,\n            level: data.level || 'error' // presume error unless specified\n        });\n\n        var url = this._globalEndpoint;\n        (globalOptions.transport || this._makeRequest).call(this, {\n            url: url,\n            auth: auth,\n            data: data,\n            options: globalOptions,\n            onSuccess: function success() {\n                self._triggerEvent('success', {\n                    data: data,\n                    src: url\n                });\n                callback && callback();\n            },\n            onError: function failure(error) {\n                self._triggerEvent('failure', {\n                    data: data,\n                    src: url\n                });\n                error = error || new Error('Raven send failed (no additional details provided)');\n                callback && callback(error);\n            }\n        });\n    },\n\n    _makeRequest: function(opts) {\n        var request = new XMLHttpRequest();\n\n        // if browser doesn't support CORS (e.g. IE7), we are out of luck\n        var hasCORS =\n            'withCredentials' in request ||\n            typeof XDomainRequest !== 'undefined';\n\n        if (!hasCORS) return;\n\n        var url = opts.url;\n        function handler() {\n            if (request.status === 200) {\n                if (opts.onSuccess) {\n                    opts.onSuccess();\n                }\n            } else if (opts.onError) {\n                opts.onError(new Error('Sentry error code: ' + request.status));\n            }\n        }\n\n        if ('withCredentials' in request) {\n            request.onreadystatechange = function () {\n                if (request.readyState !== 4) {\n                    return;\n                }\n                handler();\n            };\n        } else {\n            request = new XDomainRequest();\n            // xdomainrequest cannot go http -> https (or vice versa),\n            // so always use protocol relative\n            url = url.replace(/^https?:/, '');\n\n            // onreadystatechange not supported by XDomainRequest\n            request.onload = handler;\n        }\n\n        // NOTE: auth is intentionally sent as part of query string (NOT as custom\n        //       HTTP header) so as to avoid preflight CORS requests\n        request.open('POST', url + '?' + urlencode(opts.auth));\n        request.send(stringify(opts.data));\n    },\n\n    _logDebug: function(level) {\n        if (this._originalConsoleMethods[level] && this.debug) {\n            // In IE<10 console methods do not have their own 'apply' method\n            Function.prototype.apply.call(\n                this._originalConsoleMethods[level],\n                this._originalConsole,\n                [].slice.call(arguments, 1)\n            );\n        }\n    },\n\n    _mergeContext: function(key, context) {\n        if (isUndefined(context)) {\n            delete this._globalContext[key];\n        } else {\n            this._globalContext[key] = objectMerge(this._globalContext[key] || {}, context);\n        }\n    }\n};\n\n// Deprecations\nRaven.prototype.setUser = Raven.prototype.setUserContext;\nRaven.prototype.setReleaseContext = Raven.prototype.setRelease;\n\nmodule.exports = Raven;\n","/**\n * Enforces a single instance of the Raven client, and the\n * main entry point for Raven. If you are a consumer of the\n * Raven library, you SHOULD load this file (vs raven.js).\n **/\n\n'use strict';\n\nvar RavenConstructor = require('./raven');\n\nvar _Raven = window.Raven;\n\nvar Raven = new RavenConstructor();\n\n/*\n * Allow multiple versions of Raven to be installed.\n * Strip Raven from the global context and returns the instance.\n *\n * @return {Raven}\n */\nRaven.noConflict = function () {\n\twindow.Raven = _Raven;\n\treturn Raven;\n};\n\nRaven.afterLoad();\n\nmodule.exports = Raven;\n","/*eslint no-extra-parens:0*/\n'use strict';\n\nvar objectPrototype = Object.prototype;\n\nfunction isUndefined(what) {\n    return what === void 0;\n}\n\nfunction isFunction(what) {\n    return typeof what === 'function';\n}\n\nfunction isString(what) {\n    return objectPrototype.toString.call(what) === '[object String]';\n}\n\nfunction isObject(what) {\n    return typeof what === 'object' && what !== null;\n}\n\nfunction isEmptyObject(what) {\n    for (var _ in what) return false;  // eslint-disable-line guard-for-in, no-unused-vars\n    return true;\n}\n\n// Sorta yanked from https://github.com/joyent/node/blob/aa3b4b4/lib/util.js#L560\n// with some tiny modifications\nfunction isError(what) {\n    var toString = objectPrototype.toString.call(what);\n    return isObject(what) &&\n        toString === '[object Error]' ||\n        toString === '[object Exception]' || // Firefox NS_ERROR_FAILURE Exceptions\n        what instanceof Error;\n}\n\nfunction each(obj, callback) {\n    var i, j;\n\n    if (isUndefined(obj.length)) {\n        for (i in obj) {\n            if (hasKey(obj, i)) {\n                callback.call(null, i, obj[i]);\n            }\n        }\n    } else {\n        j = obj.length;\n        if (j) {\n            for (i = 0; i < j; i++) {\n                callback.call(null, i, obj[i]);\n            }\n        }\n    }\n}\n\nfunction objectMerge(obj1, obj2) {\n    if (!obj2) {\n        return obj1;\n    }\n    each(obj2, function(key, value){\n        obj1[key] = value;\n    });\n    return obj1;\n}\n\nfunction truncate(str, max) {\n    return !max || str.length <= max ? str : str.substr(0, max) + '\\u2026';\n}\n\n/**\n * hasKey, a better form of hasOwnProperty\n * Example: hasKey(MainHostObject, property) === true/false\n *\n * @param {Object} host object to check property\n * @param {string} key to check\n */\nfunction hasKey(object, key) {\n    return objectPrototype.hasOwnProperty.call(object, key);\n}\n\nfunction joinRegExp(patterns) {\n    // Combine an array of regular expressions and strings into one large regexp\n    // Be mad.\n    var sources = [],\n        i = 0, len = patterns.length,\n        pattern;\n\n    for (; i < len; i++) {\n        pattern = patterns[i];\n        if (isString(pattern)) {\n            // If it's a string, we need to escape it\n            // Taken from: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions\n            sources.push(pattern.replace(/([.*+?^=!:${}()|\\[\\]\\/\\\\])/g, '\\\\$1'));\n        } else if (pattern && pattern.source) {\n            // If it's a regexp already, we want to extract the source\n            sources.push(pattern.source);\n        }\n        // Intentionally skip other cases\n    }\n    return new RegExp(sources.join('|'), 'i');\n}\n\nfunction urlencode(o) {\n    var pairs = [];\n    each(o, function(key, value) {\n        pairs.push(encodeURIComponent(key) + '=' + encodeURIComponent(value));\n    });\n    return pairs.join('&');\n}\n\n// borrowed from https://tools.ietf.org/html/rfc3986#appendix-B\n// intentionally using regex and not <a/> href parsing trick because React Native and other\n// environments where DOM might not be available\nfunction parseUrl(url) {\n    var match = url.match(/^(([^:\\/?#]+):)?(\\/\\/([^\\/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?$/);\n    if (!match) return {};\n\n    // coerce to undefined values to empty string so we don't get 'undefined'\n    var query = match[6] || '';\n    var fragment = match[8] || '';\n    return {\n        protocol: match[2],\n        host: match[4],\n        path: match[5],\n        relative: match[5] + query + fragment // everything minus origin\n    };\n}\nfunction uuid4() {\n    var crypto = window.crypto || window.msCrypto;\n\n    if (!isUndefined(crypto) && crypto.getRandomValues) {\n        // Use window.crypto API if available\n        var arr = new Uint16Array(8);\n        crypto.getRandomValues(arr);\n\n        // set 4 in byte 7\n        arr[3] = arr[3] & 0xFFF | 0x4000;\n        // set 2 most significant bits of byte 9 to '10'\n        arr[4] = arr[4] & 0x3FFF | 0x8000;\n\n        var pad = function(num) {\n            var v = num.toString(16);\n            while (v.length < 4) {\n                v = '0' + v;\n            }\n            return v;\n        };\n\n        return pad(arr[0]) + pad(arr[1]) + pad(arr[2]) + pad(arr[3]) + pad(arr[4]) +\n        pad(arr[5]) + pad(arr[6]) + pad(arr[7]);\n    } else {\n        // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/2117523#2117523\n        return 'xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random()*16|0,\n                v = c === 'x' ? r : r&0x3|0x8;\n            return v.toString(16);\n        });\n    }\n}\n\n/**\n * Given a child DOM element, returns a query-selector statement describing that\n * and its ancestors\n * e.g. [HTMLElement] => body > div > input#foo.btn[name=baz]\n * @param elem\n * @returns {string}\n */\nfunction htmlTreeAsString(elem) {\n    var MAX_TRAVERSE_HEIGHT = 5,\n        MAX_OUTPUT_LEN = 80,\n        out = [],\n        height = 0,\n        len = 0,\n        separator = ' > ',\n        sepLength = separator.length,\n        nextStr;\n\n    while (elem && height++ < MAX_TRAVERSE_HEIGHT) {\n\n        nextStr = htmlElementAsString(elem);\n        // bail out if\n        // - nextStr is the 'html' element\n        // - the length of the string that would be created exceeds MAX_OUTPUT_LEN\n        //   (ignore this limit if we are on the first iteration)\n        if (nextStr === 'html' || height > 1 && len + (out.length * sepLength) + nextStr.length >= MAX_OUTPUT_LEN) {\n            break;\n        }\n\n        out.push(nextStr);\n\n        len += nextStr.length;\n        elem = elem.parentNode;\n    }\n\n    return out.reverse().join(separator);\n}\n\n/**\n * Returns a simple, query-selector representation of a DOM element\n * e.g. [HTMLElement] => input#foo.btn[name=baz]\n * @param HTMLElement\n * @returns {string}\n */\nfunction htmlElementAsString(elem) {\n    var out = [],\n        className,\n        classes,\n        key,\n        attr,\n        i;\n\n    if (!elem || !elem.tagName) {\n        return '';\n    }\n\n    out.push(elem.tagName.toLowerCase());\n    if (elem.id) {\n        out.push('#' + elem.id);\n    }\n\n    className = elem.className;\n    if (className && isString(className)) {\n        classes = className.split(' ');\n        for (i = 0; i < classes.length; i++) {\n            out.push('.' + classes[i]);\n        }\n    }\n    var attrWhitelist = ['type', 'name', 'title', 'alt'];\n    for (i = 0; i < attrWhitelist.length; i++) {\n        key = attrWhitelist[i];\n        attr = elem.getAttribute(key);\n        if (attr) {\n            out.push('[' + key + '=\"' + attr + '\"]');\n        }\n    }\n    return out.join('');\n}\n\n/**\n * Polyfill a method\n * @param obj object e.g. `document`\n * @param name method name present on object e.g. `addEventListener`\n * @param replacement replacement function\n * @param track {optional} record instrumentation to an array\n */\nfunction fill(obj, name, replacement, track) {\n    var orig = obj[name];\n    obj[name] = replacement(orig);\n    if (track) {\n        track.push([obj, name, orig]);\n    }\n}\n\nmodule.exports = {\n    isUndefined: isUndefined,\n    isFunction: isFunction,\n    isString: isString,\n    isObject: isObject,\n    isEmptyObject: isEmptyObject,\n    isError: isError,\n    each: each,\n    objectMerge: objectMerge,\n    truncate: truncate,\n    hasKey: hasKey,\n    joinRegExp: joinRegExp,\n    urlencode: urlencode,\n    uuid4: uuid4,\n    htmlTreeAsString: htmlTreeAsString,\n    htmlElementAsString: htmlElementAsString,\n    parseUrl: parseUrl,\n    fill: fill\n};\n","'use strict';\n\nvar utils = require('../../src/utils');\n\nvar hasKey = utils.hasKey;\nvar isString = utils.isString;\nvar isUndefined = utils.isUndefined;\n\n/*\n TraceKit - Cross brower stack traces - github.com/occ/TraceKit\n MIT license\n*/\n\nvar TraceKit = {\n    collectWindowErrors: true,\n    debug: false\n};\n\n// global reference to slice\nvar _slice = [].slice;\nvar UNKNOWN_FUNCTION = '?';\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Error_types\nvar ERROR_TYPES_RE = /^(?:Uncaught (?:exception: )?)?((?:Eval|Internal|Range|Reference|Syntax|Type|URI)Error): ?(.*)$/;\n\nfunction getLocationHref() {\n    if (typeof document === 'undefined')\n        return '';\n\n    return document.location.href;\n}\n\n/**\n * TraceKit.report: cross-browser processing of unhandled exceptions\n *\n * Syntax:\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\n *   TraceKit.report(exception)\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\n *\n * Supports:\n *   - Firefox: full stack trace with line numbers, plus column number\n *              on top frame; column number is not guaranteed\n *   - Opera:   full stack trace with line and column numbers\n *   - Chrome:  full stack trace with line and column numbers\n *   - Safari:  line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *   - IE:      line and column number for the top frame only; some frames\n *              may be missing, and column number is not guaranteed\n *\n * In theory, TraceKit should work on all of the following versions:\n *   - IE5.5+ (only 8.0 tested)\n *   - Firefox 0.9+ (only 3.5+ tested)\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\n *     Exceptions Have Stacktrace to be enabled in opera:config)\n *   - Safari 3+ (only 4+ tested)\n *   - Chrome 1+ (only 5+ tested)\n *   - Konqueror 3.5+ (untested)\n *\n * Requires TraceKit.computeStackTrace.\n *\n * Tries to catch all unhandled exceptions and report them to the\n * subscribed handlers. Please note that TraceKit.report will rethrow the\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\n * If the exception does not reach the top of the browser, you will only\n * get a stack trace from the point where TraceKit.report was called.\n *\n * Handlers receive a stackInfo object as described in the\n * TraceKit.computeStackTrace docs.\n */\nTraceKit.report = (function reportModuleWrapper() {\n    var handlers = [],\n        lastArgs = null,\n        lastException = null,\n        lastExceptionStack = null;\n\n    /**\n     * Add a crash handler.\n     * @param {Function} handler\n     */\n    function subscribe(handler) {\n        installGlobalHandler();\n        handlers.push(handler);\n    }\n\n    /**\n     * Remove a crash handler.\n     * @param {Function} handler\n     */\n    function unsubscribe(handler) {\n        for (var i = handlers.length - 1; i >= 0; --i) {\n            if (handlers[i] === handler) {\n                handlers.splice(i, 1);\n            }\n        }\n    }\n\n    /**\n     * Remove all crash handlers.\n     */\n    function unsubscribeAll() {\n        uninstallGlobalHandler();\n        handlers = [];\n    }\n\n    /**\n     * Dispatch stack information to all handlers.\n     * @param {Object.<string, *>} stack\n     */\n    function notifyHandlers(stack, isWindowError) {\n        var exception = null;\n        if (isWindowError && !TraceKit.collectWindowErrors) {\n          return;\n        }\n        for (var i in handlers) {\n            if (hasKey(handlers, i)) {\n                try {\n                    handlers[i].apply(null, [stack].concat(_slice.call(arguments, 2)));\n                } catch (inner) {\n                    exception = inner;\n                }\n            }\n        }\n\n        if (exception) {\n            throw exception;\n        }\n    }\n\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\n\n    /**\n     * Ensures all global unhandled exceptions are recorded.\n     * Supported by Gecko and IE.\n     * @param {string} message Error message.\n     * @param {string} url URL of script that generated the exception.\n     * @param {(number|string)} lineNo The line number at which the error\n     * occurred.\n     * @param {?(number|string)} colNo The column number at which the error\n     * occurred.\n     * @param {?Error} ex The actual Error object.\n     */\n    function traceKitWindowOnError(message, url, lineNo, colNo, ex) {\n        var stack = null;\n\n        if (lastExceptionStack) {\n            TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\n            processLastException();\n        } else if (ex) {\n            // New chrome and blink send along a real error object\n            // Let's just report that like a normal error.\n            // See: https://mikewest.org/2013/08/debugging-runtime-errors-with-window-onerror\n            stack = TraceKit.computeStackTrace(ex);\n            notifyHandlers(stack, true);\n        } else {\n            var location = {\n                'url': url,\n                'line': lineNo,\n                'column': colNo\n            };\n\n            var name = undefined;\n            var msg = message; // must be new var or will modify original `arguments`\n            var groups;\n            if (isString(message)) {\n                var groups = message.match(ERROR_TYPES_RE);\n                if (groups) {\n                    name = groups[1];\n                    msg = groups[2];\n                }\n            }\n\n            location.func = UNKNOWN_FUNCTION;\n\n            stack = {\n                'name': name,\n                'message': msg,\n                'url': getLocationHref(),\n                'stack': [location]\n            };\n            notifyHandlers(stack, true);\n        }\n\n        if (_oldOnerrorHandler) {\n            return _oldOnerrorHandler.apply(this, arguments);\n        }\n\n        return false;\n    }\n\n    function installGlobalHandler ()\n    {\n        if (_onErrorHandlerInstalled) {\n            return;\n        }\n        _oldOnerrorHandler = window.onerror;\n        window.onerror = traceKitWindowOnError;\n        _onErrorHandlerInstalled = true;\n    }\n\n    function uninstallGlobalHandler ()\n    {\n        if (!_onErrorHandlerInstalled) {\n            return;\n        }\n        window.onerror = _oldOnerrorHandler;\n        _onErrorHandlerInstalled = false;\n        _oldOnerrorHandler = undefined;\n    }\n\n    function processLastException() {\n        var _lastExceptionStack = lastExceptionStack,\n            _lastArgs = lastArgs;\n        lastArgs = null;\n        lastExceptionStack = null;\n        lastException = null;\n        notifyHandlers.apply(null, [_lastExceptionStack, false].concat(_lastArgs));\n    }\n\n    /**\n     * Reports an unhandled Error to TraceKit.\n     * @param {Error} ex\n     * @param {?boolean} rethrow If false, do not re-throw the exception.\n     * Only used for window.onerror to not cause an infinite loop of\n     * rethrowing.\n     */\n    function report(ex, rethrow) {\n        var args = _slice.call(arguments, 1);\n        if (lastExceptionStack) {\n            if (lastException === ex) {\n                return; // already caught by an inner catch block, ignore\n            } else {\n              processLastException();\n            }\n        }\n\n        var stack = TraceKit.computeStackTrace(ex);\n        lastExceptionStack = stack;\n        lastException = ex;\n        lastArgs = args;\n\n        // If the stack trace is incomplete, wait for 2 seconds for\n        // slow slow IE to see if onerror occurs or not before reporting\n        // this exception; otherwise, we will end up with an incomplete\n        // stack trace\n        window.setTimeout(function () {\n            if (lastException === ex) {\n                processLastException();\n            }\n        }, (stack.incomplete ? 2000 : 0));\n\n        if (rethrow !== false) {\n            throw ex; // re-throw to propagate to the top level (and cause window.onerror)\n        }\n    }\n\n    report.subscribe = subscribe;\n    report.unsubscribe = unsubscribe;\n    report.uninstall = unsubscribeAll;\n    return report;\n}());\n\n/**\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\n *\n * Syntax:\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\n * Returns:\n *   s.name              - exception name\n *   s.message           - exception message\n *   s.stack[i].url      - JavaScript or HTML file URL\n *   s.stack[i].func     - function name, or empty for anonymous functions (if guessing did not work)\n *   s.stack[i].args     - arguments passed to the function, if known\n *   s.stack[i].line     - line number, if known\n *   s.stack[i].column   - column number, if known\n *\n * Supports:\n *   - Firefox:  full stack trace with line numbers and unreliable column\n *               number on top frame\n *   - Opera 10: full stack trace with line and column numbers\n *   - Opera 9-: full stack trace with line numbers\n *   - Chrome:   full stack trace with line and column numbers\n *   - Safari:   line and column number for the topmost stacktrace element\n *               only\n *   - IE:       no line numbers whatsoever\n *\n * Tries to guess names of anonymous functions by looking for assignments\n * in the source code. In IE and Safari, we have to guess source file names\n * by searching for function bodies inside all page scripts. This will not\n * work for scripts that are loaded cross-domain.\n * Here be dragons: some function names may be guessed incorrectly, and\n * duplicate functions may be mismatched.\n *\n * TraceKit.computeStackTrace should only be used for tracing purposes.\n * Logging of unhandled exceptions should be done with TraceKit.report,\n * which builds on top of TraceKit.computeStackTrace and provides better\n * IE support by utilizing the window.onerror event to retrieve information\n * about the top of the stack.\n *\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\n * so computeStackTrace instead walks its *own* chain of callers.\n * This means that:\n *  * in Safari, some methods may be missing from the stack trace;\n *  * in IE, the topmost function in the stack trace will always be the\n *    caller of computeStackTrace.\n *\n * This is okay for tracing (because you are likely to be calling\n * computeStackTrace from the function you want to be the topmost element\n * of the stack trace anyway), but not okay for logging unhandled\n * exceptions (because your catch block will likely be far away from the\n * inner function that actually caused the exception).\n *\n */\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\n    /**\n     * Escapes special characters, except for whitespace, in a string to be\n     * used inside a regular expression as a string literal.\n     * @param {string} text The string.\n     * @return {string} The escaped string literal.\n     */\n    function escapeRegExp(text) {\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\n    }\n\n    /**\n     * Escapes special characters in a string to be used inside a regular\n     * expression as a string literal. Also ensures that HTML entities will\n     * be matched the same as their literal friends.\n     * @param {string} body The string.\n     * @return {string} The escaped string.\n     */\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\n    }\n\n    // Contents of Exception in various browsers.\n    //\n    // SAFARI:\n    // ex.message = Can't find variable: qq\n    // ex.line = 59\n    // ex.sourceId = 580238192\n    // ex.sourceURL = http://...\n    // ex.expressionBeginOffset = 96\n    // ex.expressionCaretOffset = 98\n    // ex.expressionEndOffset = 98\n    // ex.name = ReferenceError\n    //\n    // FIREFOX:\n    // ex.message = qq is not defined\n    // ex.fileName = http://...\n    // ex.lineNumber = 59\n    // ex.columnNumber = 69\n    // ex.stack = ...stack trace... (see the example below)\n    // ex.name = ReferenceError\n    //\n    // CHROME:\n    // ex.message = qq is not defined\n    // ex.name = ReferenceError\n    // ex.type = not_defined\n    // ex.arguments = ['aa']\n    // ex.stack = ...stack trace...\n    //\n    // INTERNET EXPLORER:\n    // ex.message = ...\n    // ex.name = ReferenceError\n    //\n    // OPERA:\n    // ex.message = ...message... (see the example below)\n    // ex.name = ReferenceError\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\n\n    /**\n     * Computes stack trace information from the stack property.\n     * Chrome and Gecko use this property.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceFromStackProp(ex) {\n        if (isUndefined(ex.stack) || !ex.stack) return;\n\n        var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|<anonymous>).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|\\[native).*?)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\n            lines = ex.stack.split('\\n'),\n            stack = [],\n            parts,\n            element,\n            reference = /^(.*) is undefined$/.exec(ex.message);\n\n        for (var i = 0, j = lines.length; i < j; ++i) {\n            if ((parts = chrome.exec(lines[i]))) {\n                var isNative = parts[2] && parts[2].indexOf('native') !== -1;\n                element = {\n                    'url': !isNative ? parts[2] : null,\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': isNative ? [parts[2]] : [],\n                    'line': parts[3] ? +parts[3] : null,\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ( parts = winjs.exec(lines[i]) ) {\n                element = {\n                    'url': parts[2],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': [],\n                    'line': +parts[3],\n                    'column': parts[4] ? +parts[4] : null\n                };\n            } else if ((parts = gecko.exec(lines[i]))) {\n                element = {\n                    'url': parts[3],\n                    'func': parts[1] || UNKNOWN_FUNCTION,\n                    'args': parts[2] ? parts[2].split(',') : [],\n                    'line': parts[4] ? +parts[4] : null,\n                    'column': parts[5] ? +parts[5] : null\n                };\n            } else {\n                continue;\n            }\n\n            if (!element.func && element.line) {\n                element.func = UNKNOWN_FUNCTION;\n            }\n\n            stack.push(element);\n        }\n\n        if (!stack.length) {\n            return null;\n        }\n\n        if (!stack[0].column && !isUndefined(ex.columnNumber)) {\n            // FireFox uses this awesome columnNumber property for its top frame\n            // Also note, Firefox's column number is 0-based and everything else expects 1-based,\n            // so adding 1\n            stack[0].column = ex.columnNumber + 1;\n        }\n\n        return {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref(),\n            'stack': stack\n        };\n    }\n\n    /**\n     * Adds information about the first frame to incomplete stack traces.\n     * Safari and IE require this to get complete data on the first frame.\n     * @param {Object.<string, *>} stackInfo Stack trace information from\n     * one of the compute* methods.\n     * @param {string} url The URL of the script that caused an error.\n     * @param {(number|string)} lineNo The line number of the script that\n     * caused an error.\n     * @param {string=} message The error generated by the browser, which\n     * hopefully contains the name of the object that caused the error.\n     * @return {boolean} Whether or not the stack information was\n     * augmented.\n     */\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\n        var initial = {\n            'url': url,\n            'line': lineNo\n        };\n\n        if (initial.url && initial.line) {\n            stackInfo.incomplete = false;\n\n            if (!initial.func) {\n                initial.func = UNKNOWN_FUNCTION;\n            }\n\n            if (stackInfo.stack.length > 0) {\n                if (stackInfo.stack[0].url === initial.url) {\n                    if (stackInfo.stack[0].line === initial.line) {\n                        return false; // already in stack trace\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\n                        stackInfo.stack[0].line = initial.line;\n                        return false;\n                    }\n                }\n            }\n\n            stackInfo.stack.unshift(initial);\n            stackInfo.partial = true;\n            return true;\n        } else {\n            stackInfo.incomplete = true;\n        }\n\n        return false;\n    }\n\n    /**\n     * Computes stack trace information by walking the arguments.caller\n     * chain at the time the exception occurred. This will cause earlier\n     * frames to be missed but is the only way to get any stack trace in\n     * Safari and IE. The top frame is restored by\n     * {@link augmentStackTraceWithInitialElement}.\n     * @param {Error} ex\n     * @return {?Object.<string, *>} Stack trace information.\n     */\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\n            stack = [],\n            funcs = {},\n            recursion = false,\n            parts,\n            item,\n            source;\n\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\n            if (curr === computeStackTrace || curr === TraceKit.report) {\n                // console.log('skipping internal function');\n                continue;\n            }\n\n            item = {\n                'url': null,\n                'func': UNKNOWN_FUNCTION,\n                'line': null,\n                'column': null\n            };\n\n            if (curr.name) {\n                item.func = curr.name;\n            } else if ((parts = functionName.exec(curr.toString()))) {\n                item.func = parts[1];\n            }\n\n            if (typeof item.func === 'undefined') {\n              try {\n                item.func = parts.input.substring(0, parts.input.indexOf('{'));\n              } catch (e) { }\n            }\n\n            if (funcs['' + curr]) {\n                recursion = true;\n            }else{\n                funcs['' + curr] = true;\n            }\n\n            stack.push(item);\n        }\n\n        if (depth) {\n            // console.log('depth is ' + depth);\n            // console.log('stack is ' + stack.length);\n            stack.splice(0, depth);\n        }\n\n        var result = {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref(),\n            'stack': stack\n        };\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\n        return result;\n    }\n\n    /**\n     * Computes a stack trace for an exception.\n     * @param {Error} ex\n     * @param {(string|number)=} depth\n     */\n    function computeStackTrace(ex, depth) {\n        var stack = null;\n        depth = (depth == null ? 0 : +depth);\n\n        try {\n            stack = computeStackTraceFromStackProp(ex);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (TraceKit.debug) {\n                throw e;\n            }\n        }\n\n        try {\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\n            if (stack) {\n                return stack;\n            }\n        } catch (e) {\n            if (TraceKit.debug) {\n                throw e;\n            }\n        }\n\n        return {\n            'name': ex.name,\n            'message': ex.message,\n            'url': getLocationHref()\n        };\n    }\n\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\n    computeStackTrace.computeStackTraceFromStackProp = computeStackTraceFromStackProp;\n\n    return computeStackTrace;\n}());\n\nmodule.exports = TraceKit;\n","/*!\n * sweetalert2 v4.1.9\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.Sweetalert2 = factory());\n}(this, function () { 'use strict';\n\n  var swalPrefix = 'swal2-';\n\n  var prefix = function(items) {\n    var result = {};\n    for (var i in items) {\n      result[items[i]] = swalPrefix + items[i];\n    }\n    return result;\n  };\n\n  var swalClasses = prefix([\n    'container',\n    'modal',\n    'overlay',\n    'close',\n    'content',\n    'spacer',\n    'confirm',\n    'cancel',\n    'icon',\n    'image',\n    'input',\n    'select',\n    'radio',\n    'checkbox',\n    'textarea',\n    'validationerror'\n  ]);\n\n  var iconTypes = prefix([\n    'success',\n    'warning',\n    'info',\n    'question',\n    'error'\n  ]);\n\n  var defaultParams = {\n    title: '',\n    text: '',\n    html: '',\n    type: null,\n    customClass: '',\n    animation: true,\n    allowOutsideClick: true,\n    allowEscapeKey: true,\n    showConfirmButton: true,\n    showCancelButton: false,\n    preConfirm: null,\n    confirmButtonText: 'OK',\n    confirmButtonColor: '#3085d6',\n    confirmButtonClass: null,\n    cancelButtonText: 'Cancel',\n    cancelButtonColor: '#aaa',\n    cancelButtonClass: null,\n    buttonsStyling: true,\n    reverseButtons: false,\n    focusCancel: false,\n    showCloseButton: false,\n    showLoaderOnConfirm: false,\n    imageUrl: null,\n    imageWidth: null,\n    imageHeight: null,\n    imageClass: null,\n    timer: null,\n    width: 500,\n    padding: 20,\n    background: '#fff',\n    input: null, // 'text' | 'email' | 'password' | 'select' | 'radio' | 'checkbox' | 'textarea' | 'file'\n    inputPlaceholder: '',\n    inputValue: '',\n    inputOptions: {},\n    inputAutoTrim: true,\n    inputClass: null,\n    inputAttributes: {},\n    inputValidator: null,\n    onOpen: null,\n    onClose: null\n  };\n\n  var sweetHTML = '<div class=\"' + swalClasses.overlay + '\" tabIndex=\"-1\"></div>' +\n    '<div class=\"' + swalClasses.modal + '\" style=\"display: none\" tabIndex=\"-1\">' +\n      '<div class=\"' + swalClasses.icon + ' ' + iconTypes.error + '\">' +\n        '<span class=\"x-mark\"><span class=\"line left\"></span><span class=\"line right\"></span></span>' +\n      '</div>' +\n      '<div class=\"' + swalClasses.icon + ' ' + iconTypes.question + '\">?</div>' +\n      '<div class=\"' + swalClasses.icon + ' ' + iconTypes.warning + '\">!</div>' +\n      '<div class=\"' + swalClasses.icon + ' ' + iconTypes.info + '\">i</div>' +\n      '<div class=\"' + swalClasses.icon + ' ' + iconTypes.success + '\">' +\n        '<span class=\"line tip\"></span> <span class=\"line long\"></span>' +\n        '<div class=\"placeholder\"></div> <div class=\"fix\"></div>' +\n      '</div>' +\n      '<img class=\"' + swalClasses.image + '\">' +\n      '<h2></h2>' +\n      '<div class=\"' + swalClasses.content + '\"></div>' +\n      '<input class=\"' + swalClasses.input + '\">' +\n      '<select class=\"' + swalClasses.select + '\"></select>' +\n      '<div class=\"' + swalClasses.radio + '\"></div>' +\n      '<label for=\"' + swalClasses.checkbox + '\" class=\"' + swalClasses.checkbox + '\">' +\n        '<input type=\"checkbox\" id=\"' + swalClasses.checkbox + '\">' +\n      '</label>' +\n      '<textarea class=\"' + swalClasses.textarea + '\"></textarea>' +\n      '<div class=\"' + swalClasses.validationerror + '\"></div>' +\n      '<hr class=\"' + swalClasses.spacer + '\">' +\n      '<button class=\"' + swalClasses.confirm + '\">OK</button>' +\n      '<button class=\"' + swalClasses.cancel + '\">Cancel</button>' +\n      '<span class=\"' + swalClasses.close + '\">&times;</span>' +\n    '</div>';\n\n  var extend = function(a, b) {\n    for (var key in b) {\n      if (b.hasOwnProperty(key)) {\n        a[key] = b[key];\n      }\n    }\n\n    return a;\n  };\n\n\n  /*\n   * Set hover, active and focus-states for buttons (source: http://www.sitepoint.com/javascript-generate-lighter-darker-color)\n   */\n  var colorLuminance = function(hex, lum) {\n    // Validate hex string\n    hex = String(hex).replace(/[^0-9a-f]/gi, '');\n    if (hex.length < 6) {\n      hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n    }\n    lum = lum || 0;\n\n    // Convert to decimal and change luminosity\n    var rgb = '#';\n    for (var i = 0; i < 3; i++) {\n      var c = parseInt(hex.substr(i * 2, 2), 16);\n      c = Math.round(Math.min(Math.max(0, c + (c * lum)), 255)).toString(16);\n      rgb += ('00' + c).substr(c.length);\n    }\n\n    return rgb;\n  };\n\n  /*\n   * check if variable is function type. http://stackoverflow.com/questions/5999998/how-can-i-check-if-a-javascript-variable-is-function-type\n   */\n  var isFunction = function(functionToCheck) {\n    return typeof functionToCheck === 'function';\n  };\n\n  var mediaqueryId = swalPrefix + 'mediaquery';\n\n  // Remember state in cases where opening and handling a modal will fiddle with it.\n  var states = {\n    previousWindowKeyDown: null,\n    previousActiveElement: null\n  };\n\n  /*\n   * Manipulate DOM\n   */\n  var elementByClass = function(className) {\n    return document.querySelector('.' + className);\n  };\n\n  var getModal = function() {\n    return elementByClass(swalClasses.modal);\n  };\n\n  var getOverlay = function() {\n    return elementByClass(swalClasses.overlay);\n  };\n\n  var getConfirmButton = function() {\n    return elementByClass(swalClasses.confirm);\n  };\n\n  var getCancelButton = function() {\n    return elementByClass(swalClasses.cancel);\n  };\n\n  var getCloseButton = function() {\n    return elementByClass(swalClasses.close);\n  };\n\n  var getFocusableElements = function(focusCancel) {\n    var buttons = [getConfirmButton(), getCancelButton()];\n    if (focusCancel) {\n      buttons.reverse();\n    }\n    return buttons.concat(Array.prototype.slice.call(\n      getModal().querySelectorAll('button:not([class^=' + swalPrefix + ']), input:not([type=hidden]), textarea, select')\n    ));\n  };\n\n  var hasClass = function(elem, className) {\n    return elem.classList.contains(className);\n  };\n\n  var focusInput = function(input) {\n    input.focus();\n\n    // http://stackoverflow.com/a/2345915/1331425\n    var val = input.value;\n    input.value = '';\n    input.value = val;\n  };\n\n  var addClass = function(elem, className) {\n    if (!elem || !className) {\n      return;\n    }\n    var classes = className.split(/\\s+/);\n    classes.forEach(function(className) {\n      elem.classList.add(className);\n    });\n  };\n\n  var removeClass = function(elem, className) {\n    if (!elem || !className) {\n      return;\n    }\n    var classes = className.split(/\\s+/);\n    classes.forEach(function(className) {\n      elem.classList.remove(className);\n    });\n  };\n\n  var getChildByClass = function(elem, className) {\n    for (var i = 0; i < elem.childNodes.length; i++) {\n      if (hasClass(elem.childNodes[i], className)) {\n        return elem.childNodes[i];\n      }\n    }\n  };\n\n  var _show = function(elem) {\n    elem.style.opacity = '';\n    elem.style.display = 'block';\n  };\n\n  var show = function(elems) {\n    if (elems && !elems.length) {\n      return _show(elems);\n    }\n    for (var i = 0; i < elems.length; ++i) {\n      _show(elems[i]);\n    }\n  };\n\n  var _hide = function(elem) {\n    elem.style.opacity = '';\n    elem.style.display = 'none';\n  };\n\n  var hide = function(elems) {\n    if (elems && !elems.length) {\n      return _hide(elems);\n    }\n    for (var i = 0; i < elems.length; ++i) {\n      _hide(elems[i]);\n    }\n  };\n\n  // borrowed from jqeury $(elem).is(':visible') implementation\n  var isVisible = function(elem) {\n    return elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length;\n  };\n\n  var removeStyleProperty = function(elem, property) {\n    if (elem.style.removeProperty) {\n      elem.style.removeProperty(property);\n    } else {\n      elem.style.removeAttribute(property);\n    }\n  };\n\n  var getTopMargin = function(elem) {\n    var elemDisplay = elem.style.display;\n    elem.style.left = '-9999px';\n    elem.style.display = 'block';\n\n    var height = elem.clientHeight;\n\n    elem.style.left = '';\n    elem.style.display = elemDisplay;\n    return ('-' + parseInt(height / 2, 10) + 'px');\n  };\n\n  var fadeIn = function(elem, interval) {\n    if (+elem.style.opacity < 1) {\n      interval = interval || 16;\n      elem.style.opacity = 0;\n      elem.style.display = 'block';\n      var last = +new Date();\n      var tick = function() {\n        var newOpacity = +elem.style.opacity + (new Date() - last) / 100;\n        elem.style.opacity = (newOpacity > 1) ? 1 : newOpacity;\n        last = +new Date();\n\n        if (+elem.style.opacity < 1) {\n          setTimeout(tick, interval);\n        }\n      };\n      tick();\n    }\n  };\n\n  var fadeOut = function(elem, interval) {\n    if (+elem.style.opacity > 0) {\n      interval = interval || 16;\n      var opacity = elem.style.opacity;\n      var last = +new Date();\n      var tick = function() {\n        var change = new Date() - last;\n        var newOpacity = +elem.style.opacity - change / (opacity * 100);\n        elem.style.opacity = newOpacity;\n        last = +new Date();\n\n        if (+elem.style.opacity > 0) {\n          setTimeout(tick, interval);\n        } else {\n          _hide(elem);\n        }\n      };\n      tick();\n    }\n  };\n\n  var fireClick = function(node) {\n    // Taken from http://www.nonobtrusive.com/2011/11/29/programatically-fire-crossbrowser-click-event-with-javascript/\n    // Then fixed for today's Chrome browser.\n    if (typeof MouseEvent === 'function') {\n      // Up-to-date approach\n      var mevt = new MouseEvent('click', {\n        view: window,\n        bubbles: false,\n        cancelable: true\n      });\n      node.dispatchEvent(mevt);\n    } else if (document.createEvent) {\n      // Fallback\n      var evt = document.createEvent('MouseEvents');\n      evt.initEvent('click', false, false);\n      node.dispatchEvent(evt);\n    } else if (document.createEventObject) {\n      node.fireEvent('onclick');\n    } else if (typeof node.onclick === 'function') {\n      node.onclick();\n    }\n  };\n\n  var stopEventPropagation = function(e) {\n    // In particular, make sure the space bar doesn't scroll the main window.\n    if (typeof e.stopPropagation === 'function') {\n      e.stopPropagation();\n      e.preventDefault();\n    } else if (window.event && window.event.hasOwnProperty('cancelBubble')) {\n      window.event.cancelBubble = true;\n    }\n  };\n\n  var animationEndEvent = (function() {\n    var testEl = document.createElement('div'),\n      transEndEventNames = {\n        'WebkitAnimation': 'webkitAnimationEnd',\n        'OAnimation': 'oAnimationEnd oanimationend',\n        'msAnimation': 'MSAnimationEnd',\n        'animation': 'animationend'\n      };\n    for (var i in transEndEventNames) {\n      if (transEndEventNames.hasOwnProperty(i) &&\n        testEl.style[i] !== undefined) {\n        return transEndEventNames[i];\n      }\n    }\n\n    return false;\n  })();\n\n\n  // Reset the page to its previous state\n  var resetPrevState = function() {\n    var modal = getModal();\n    window.onkeydown = states.previousWindowKeyDown;\n    if (states.previousActiveElement && states.previousActiveElement.focus) {\n      states.previousActiveElement.focus();\n    }\n    clearTimeout(modal.timeout);\n\n    // Remove dynamically created media query\n    var head = document.getElementsByTagName('head')[0];\n    var mediaquery = document.getElementById(mediaqueryId);\n    if (mediaquery) {\n      head.removeChild(mediaquery);\n    }\n  };\n\n  var modalParams = extend({}, defaultParams);\n\n  /*\n   * Set type, text and actions on modal\n   */\n  var setParameters = function(params) {\n    var modal = getModal();\n\n    for (var param in params) {\n      if (!defaultParams.hasOwnProperty(param) && param !== 'extraParams') {\n        console.warn('SweetAlert2: Unknown parameter \"' + param + '\"');\n      }\n    }\n\n    // set modal width, padding and margin-left\n    modal.style.width = params.width + 'px';\n    modal.style.padding = params.padding + 'px';\n    modal.style.marginLeft = -params.width / 2 + 'px';\n    modal.style.background = params.background;\n\n    // add dynamic media query css\n    var head = document.getElementsByTagName('head')[0];\n    var cssNode = document.createElement('style');\n    cssNode.type = 'text/css';\n    cssNode.id = mediaqueryId;\n    var margin = 5; // %\n    var mediaQueryMaxWidth = params.width + parseInt(params.width * (margin/100) * 2, 10);\n    cssNode.innerHTML =\n      '@media screen and (max-width: ' + mediaQueryMaxWidth + 'px) {' +\n        '.' + swalClasses.modal + ' {' +\n          'width: auto !important;' +\n          'left: ' + margin + '% !important;' +\n          'right: ' + margin + '% !important;' +\n          'margin-left: 0 !important;' +\n        '}' +\n      '}';\n    head.appendChild(cssNode);\n\n    var $title = modal.querySelector('h2');\n    var $content = modal.querySelector('.' + swalClasses.content);\n    var $confirmBtn = getConfirmButton();\n    var $cancelBtn = getCancelButton();\n    var $spacer = modal.querySelector('.' + swalClasses.spacer);\n    var $closeButton = modal.querySelector('.' + swalClasses.close);\n\n    // Title\n    $title.innerHTML = params.title.split('\\n').join('<br>');\n\n    // Content\n    if (params.text || params.html) {\n      if (typeof params.html === 'object') {\n        $content.innerHTML = '';\n        if (0 in params.html) {\n          for (var i = 0; i in params.html; i++) {\n            $content.appendChild(params.html[i]);\n          }\n        } else {\n          $content.appendChild(params.html);\n        }\n      } else {\n        $content.innerHTML = params.html || (params.text.split('\\n').join('<br>'));\n      }\n      show($content);\n    } else {\n      hide($content);\n    }\n\n    // Close button\n    if (params.showCloseButton) {\n      show($closeButton);\n    } else {\n      hide($closeButton);\n    }\n\n    // Custom Class\n    modal.className = swalClasses.modal;\n    if (params.customClass) {\n      addClass(modal, params.customClass);\n    }\n\n    // Icon\n    hide(modal.querySelectorAll('.' + swalClasses.icon));\n    if (params.type) {\n      var validType = false;\n      for (var iconType in iconTypes) {\n        if (params.type === iconType) {\n          validType = true;\n          break;\n        }\n      }\n      if (!validType) {\n        console.error('SweetAlert2: Unknown alert type: ' + params.type);\n        return false;\n      }\n      var $icon = modal.querySelector('.' + swalClasses.icon + '.' + iconTypes[params.type]);\n      show($icon);\n\n      // Animate icon\n      switch (params.type) {\n        case 'success':\n          addClass($icon, 'animate');\n          addClass($icon.querySelector('.tip'), 'animate-success-tip');\n          addClass($icon.querySelector('.long'), 'animate-success-long');\n          break;\n        case 'error':\n          addClass($icon, 'animate-error-icon');\n          addClass($icon.querySelector('.x-mark'), 'animate-x-mark');\n          break;\n        case 'warning':\n          addClass($icon, 'pulse-warning');\n          break;\n        default:\n          break;\n      }\n\n    }\n\n    // Custom image\n    var $customImage = modal.querySelector('.' + swalClasses.image);\n    if (params.imageUrl) {\n      $customImage.setAttribute('src', params.imageUrl);\n      show($customImage);\n\n      if (params.imageWidth) {\n        $customImage.setAttribute('width', params.imageWidth);\n      } else {\n        $customImage.removeAttribute('width');\n      }\n\n      if (params.imageHeight) {\n        $customImage.setAttribute('height', params.imageHeight);\n      } else {\n        $customImage.removeAttribute('height');\n      }\n\n      $customImage.className = swalClasses.image;\n      if (params.imageClass) {\n        addClass($customImage, params.imageClass);\n      }\n    } else {\n      hide($customImage);\n    }\n\n    // Cancel button\n    if (params.showCancelButton) {\n      $cancelBtn.style.display = 'inline-block';\n    } else {\n      hide($cancelBtn);\n    }\n\n    // Confirm button\n    if (params.showConfirmButton) {\n      removeStyleProperty($confirmBtn, 'display');\n    } else {\n      hide($confirmBtn);\n    }\n\n    // Buttons spacer\n    if (!params.showConfirmButton && !params.showCancelButton) {\n      hide($spacer);\n    } else {\n      show($spacer);\n    }\n\n    // Edit text on cancel and confirm buttons\n    $confirmBtn.innerHTML = params.confirmButtonText;\n    $cancelBtn.innerHTML = params.cancelButtonText;\n\n    // Set buttons to selected background colors\n    if (params.buttonsStyling) {\n      $confirmBtn.style.backgroundColor = params.confirmButtonColor;\n      $cancelBtn.style.backgroundColor = params.cancelButtonColor;\n    }\n\n    // Add buttons custom classes\n    $confirmBtn.className = swalClasses.confirm;\n    addClass($confirmBtn, params.confirmButtonClass);\n    $cancelBtn.className = swalClasses.cancel;\n    addClass($cancelBtn, params.cancelButtonClass);\n\n    // Buttons styling\n    if (params.buttonsStyling) {\n      addClass($confirmBtn, 'styled');\n      addClass($cancelBtn, 'styled');\n    } else {\n      removeClass($confirmBtn, 'styled');\n      removeClass($cancelBtn, 'styled');\n\n      $confirmBtn.style.backgroundColor = $confirmBtn.style.borderLeftColor = $confirmBtn.style.borderRightColor = '';\n      $cancelBtn.style.backgroundColor = $cancelBtn.style.borderLeftColor = $cancelBtn.style.borderRightColor = '';\n    }\n\n    // CSS animation\n    if (params.animation === true) {\n      removeClass(modal, 'no-animation');\n    } else {\n      addClass(modal, 'no-animation');\n    }\n  };\n\n  /*\n   * Animations\n   */\n  var openModal = function(animation, onComplete) {\n    var modal = getModal();\n    if (animation) {\n      fadeIn(getOverlay(), 10);\n      addClass(modal, 'show-swal2');\n      removeClass(modal, 'hide-swal2');\n    } else {\n      show(getOverlay());\n    }\n    show(modal);\n    states.previousActiveElement = document.activeElement;\n    if (onComplete !== null && typeof onComplete === 'function') {\n      onComplete.call(this, modal);\n    }\n  };\n\n  /*\n   * Set 'margin-top'-property on modal based on its computed height\n   */\n  var fixVerticalPosition = function() {\n    var modal = getModal();\n\n    if (modal !== null) {\n      modal.style.marginTop = getTopMargin(modal);\n    }\n  };\n\n  function modalDependant() {\n\n    if (arguments[0] === undefined) {\n      console.error('SweetAlert2 expects at least 1 attribute!');\n      return false;\n    }\n\n    var params = extend({}, modalParams);\n\n    switch (typeof arguments[0]) {\n\n      case 'string':\n        params.title = arguments[0];\n        params.text  = arguments[1] || '';\n        params.type  = arguments[2] || '';\n\n        break;\n\n      case 'object':\n        extend(params, arguments[0]);\n        params.extraParams = arguments[0].extraParams;\n\n        if (params.input === 'email' && params.inputValidator === null) {\n          params.inputValidator = function(email) {\n            return new Promise(function(resolve, reject) {\n              var emailRegex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,6}$/;\n              if (emailRegex.test(email)) {\n                resolve();\n              } else {\n                reject('Invalid email address');\n              }\n            });\n          };\n        }\n\n        break;\n\n      default:\n        console.error('SweetAlert2: Unexpected type of argument! Expected \"string\" or \"object\", got ' + typeof arguments[0]);\n        return false;\n    }\n\n    setParameters(params);\n\n    // Modal interactions\n    var modal = getModal();\n\n    return new Promise(function(resolve, reject) {\n      // Close on timer\n      if (params.timer) {\n        modal.timeout = setTimeout(function() {\n          sweetAlert.closeModal(params.onClose);\n          reject('timer');\n        }, params.timer);\n      }\n\n      var getInput = function() {\n        switch (params.input) {\n          case 'select':\n            return getChildByClass(modal, swalClasses.select);\n          case 'radio':\n            return modal.querySelector('.' + swalClasses.radio + ' input:checked') ||\n              modal.querySelector('.' + swalClasses.radio + ' input:first-child');\n          case 'checkbox':\n            return modal.querySelector('#' + swalClasses.checkbox);\n          case 'textarea':\n            return getChildByClass(modal, swalClasses.textarea);\n          default:\n            return getChildByClass(modal, swalClasses.input);\n        }\n      };\n      var getInputValue = function() {\n        var input = getInput();\n        switch (params.input) {\n          case 'checkbox':\n            return input.checked ? 1 : 0;\n          case 'radio':\n            return input.checked ? input.value : null;\n          case 'file':\n            return input.files.length ? input.files[0] : null;\n          default:\n            return params.inputAutoTrim? input.value.trim() : input.value;\n        }\n      };\n\n      if (params.input) {\n        setTimeout(function() {\n          var input = getInput();\n          if (input) {\n            focusInput(input);\n          }\n        }, 0);\n      }\n\n      var confirm = function(value) {\n        if (params.showLoaderOnConfirm) {\n          sweetAlert.showLoading();\n        }\n\n        if (params.preConfirm) {\n          params.preConfirm(value, params.extraParams).then(\n            function(preConfirmValue) {\n              sweetAlert.closeModal(params.onClose);\n              resolve(preConfirmValue || value);\n            },\n            function(error) {\n              sweetAlert.hideLoading();\n              if (error) {\n                sweetAlert.showValidationError(error);\n              }\n            }\n          );\n        } else {\n          sweetAlert.closeModal(params.onClose);\n          resolve(value);\n        }\n      };\n\n      // Mouse interactions\n      var onButtonEvent = function(event) {\n        var e = event || window.event;\n        var target = e.target || e.srcElement;\n        var confirmBtn = getConfirmButton();\n        var cancelBtn = getCancelButton();\n        var targetedConfirm = confirmBtn === target || confirmBtn.contains(target);\n        var targetedCancel = cancelBtn === target || cancelBtn.contains(target);\n\n        switch (e.type) {\n          case 'mouseover':\n          case 'mouseup':\n            if (params.buttonsStyling) {\n              if (targetedConfirm) {\n                confirmBtn.style.backgroundColor = colorLuminance(params.confirmButtonColor, -0.1);\n              } else if (targetedCancel) {\n                cancelBtn.style.backgroundColor = colorLuminance(params.cancelButtonColor, -0.1);\n              }\n            }\n            break;\n          case 'mouseout':\n            if (params.buttonsStyling) {\n              if (targetedConfirm) {\n                confirmBtn.style.backgroundColor = params.confirmButtonColor;\n              } else if (targetedCancel) {\n                cancelBtn.style.backgroundColor = params.cancelButtonColor;\n              }\n            }\n            break;\n          case 'mousedown':\n            if (params.buttonsStyling) {\n              if (targetedConfirm) {\n                confirmBtn.style.backgroundColor = colorLuminance(params.confirmButtonColor, -0.2);\n              } else if (targetedCancel) {\n                cancelBtn.style.backgroundColor = colorLuminance(params.cancelButtonColor, -0.2);\n              }\n            }\n            break;\n          case 'click':\n            // Clicked 'confirm'\n            if (targetedConfirm && sweetAlert.isVisible()) {\n              if (params.input) {\n                var inputValue = getInputValue();\n\n                if (params.inputValidator) {\n                  sweetAlert.disableInput();\n                  params.inputValidator(inputValue, params.extraParams).then(\n                    function() {\n                      sweetAlert.enableInput();\n                      confirm(inputValue);\n                    },\n                    function(error) {\n                      sweetAlert.enableInput();\n                      if (error) {\n                        sweetAlert.showValidationError(error);\n                      }\n                    }\n                  );\n                } else {\n                  confirm(inputValue);\n                }\n\n              } else {\n                confirm(true);\n              }\n\n            // Clicked 'cancel'\n            } else if (targetedCancel && sweetAlert.isVisible()) {\n              sweetAlert.closeModal(params.onClose);\n              reject('cancel');\n            }\n\n            break;\n          default:\n        }\n      };\n\n      var $buttons = modal.querySelectorAll('button');\n      var i;\n      for (i = 0; i < $buttons.length; i++) {\n        $buttons[i].onclick     = onButtonEvent;\n        $buttons[i].onmouseover = onButtonEvent;\n        $buttons[i].onmouseout  = onButtonEvent;\n        $buttons[i].onmousedown = onButtonEvent;\n      }\n\n      // Closing modal by close button\n      getCloseButton().onclick = function() {\n        sweetAlert.closeModal(params.onClose);\n        reject('close');\n      };\n\n      // Closing modal by overlay click\n      getOverlay().onclick = function() {\n        if (params.allowOutsideClick) {\n          sweetAlert.closeModal(params.onClose);\n          reject('overlay');\n        }\n      };\n\n      var $confirmButton = getConfirmButton();\n      var $cancelButton = getCancelButton();\n\n      // Reverse buttons if neede d\n      if (params.reverseButtons) {\n        $confirmButton.parentNode.insertBefore($cancelButton, $confirmButton);\n      } else {\n        $confirmButton.parentNode.insertBefore($confirmButton, $cancelButton);\n      }\n\n      // Focus handling\n      function setFocus(index, increment) {\n        var focusableElements = getFocusableElements(params.focusCancel);\n        // search for visible elements and select the next possible match\n        for (var i = 0; i < focusableElements.length; i++) {\n          index = index + increment;\n\n          // rollover to first item\n          if (index === focusableElements.length) {\n            index = 0;\n\n          // go to last item\n          } else if (index === -1) {\n            index = focusableElements.length - 1;\n          }\n\n          // determine if element is visible\n          var el = focusableElements[index];\n          if (isVisible(el)) {\n            return el.focus();\n          }\n        }\n      }\n\n      function handleKeyDown(event) {\n        var e = event || window.event;\n        var keyCode = e.keyCode || e.which;\n\n        if ([9, 13, 32, 27].indexOf(keyCode) === -1) {\n          // Don't do work on keys we don't care about.\n          return;\n        }\n\n        var $targetElement = e.target || e.srcElement;\n\n        var focusableElements = getFocusableElements(params.focusCancel);\n        var btnIndex = -1; // Find the button - note, this is a nodelist, not an array.\n        for (var i = 0; i < focusableElements.length; i++) {\n          if ($targetElement === focusableElements[i]) {\n            btnIndex = i;\n            break;\n          }\n        }\n\n        // TAB\n        if (keyCode === 9) {\n          if (!e.shiftKey) {\n            // Cycle to the next button\n            setFocus(btnIndex, 1);\n          } else {\n            // Cycle to the prev button\n            setFocus(btnIndex, -1);\n          }\n\n          stopEventPropagation(e);\n\n        } else {\n          if (keyCode === 13 || keyCode === 32) {\n            if (btnIndex === -1) {\n              // ENTER/SPACE clicked outside of a button.\n              if (params.focusCancel) {\n                fireClick($cancelButton, e);\n              } else {\n                fireClick($confirmButton, e);\n              }\n            }\n          } else if (keyCode === 27 && params.allowEscapeKey === true) {\n            sweetAlert.closeModal(params.onClose);\n            reject('esc');\n          }\n        }\n      }\n\n      states.previousWindowKeyDown = window.onkeydown;\n      window.onkeydown = handleKeyDown;\n\n      // Loading state\n      if (params.buttonsStyling) {\n        $confirmButton.style.borderLeftColor = params.confirmButtonColor;\n        $confirmButton.style.borderRightColor = params.confirmButtonColor;\n      }\n\n      /**\n       * Show spinner instead of Confirm button and disable Cancel button\n       */\n      sweetAlert.showLoading = sweetAlert.enableLoading = function() {\n        addClass($confirmButton, 'loading');\n        addClass(modal, 'loading');\n        $confirmButton.disabled = true;\n        $cancelButton.disabled = true;\n      };\n\n      /**\n       * Show spinner instead of Confirm button and disable Cancel button\n       */\n      sweetAlert.hideLoading = sweetAlert.disableLoading = function() {\n        removeClass($confirmButton, 'loading');\n        removeClass(modal, 'loading');\n        $confirmButton.disabled = false;\n        $cancelButton.disabled = false;\n      };\n\n      sweetAlert.enableButtons = function() {\n        $confirmButton.disabled = false;\n        $cancelButton.disabled = false;\n      };\n\n      sweetAlert.disableButtons = function() {\n        $confirmButton.disabled = true;\n        $cancelButton.disabled = true;\n      };\n\n      sweetAlert.enableConfirmButton = function() {\n        $confirmButton.disabled = false;\n      };\n\n      sweetAlert.disableConfirmButton = function() {\n        $confirmButton.disabled = true;\n      };\n\n      sweetAlert.enableInput = function() {\n        var input = getInput();\n        if (input.type === 'radio') {\n          var radiosContainer = input.parentNode.parentNode;\n          var radios = radiosContainer.querySelectorAll('input');\n          for (var i = 0; i < radios.length; i++) {\n            radios[i].disabled = false;\n          }\n        } else {\n          input.disabled = false;\n        }\n      };\n\n      sweetAlert.disableInput = function() {\n        var input = getInput();\n        if (input.type === 'radio') {\n          var radiosContainer = input.parentNode.parentNode;\n          var radios = radiosContainer.querySelectorAll('input');\n          for (var i = 0; i < radios.length; i++) {\n            radios[i].disabled = true;\n          }\n        } else {\n          input.disabled = true;\n        }\n      };\n\n      sweetAlert.showValidationError = function(error) {\n        var $validationError = modal.querySelector('.' + swalClasses.validationerror);\n        $validationError.innerHTML = error;\n        show($validationError);\n\n        var input = getInput();\n        focusInput(input);\n        addClass(input, 'error');\n      };\n\n      sweetAlert.resetValidationError = function() {\n        var $validationError = modal.querySelector('.' + swalClasses.validationerror);\n        hide($validationError);\n\n        var input = getInput();\n        if (input) {\n          removeClass(input, 'error');\n        }\n      };\n\n      sweetAlert.enableButtons();\n      sweetAlert.hideLoading();\n      sweetAlert.resetValidationError();\n\n      // input, select\n      var inputTypes = ['input', 'select', 'radio', 'checkbox', 'textarea'];\n      var input;\n      for (i = 0; i < inputTypes.length; i++) {\n        var inputClass = swalClasses[inputTypes[i]];\n        input = getChildByClass(modal, inputClass);\n\n        // set attributes\n        while (input.attributes.length > 0) {\n          input.removeAttribute(input.attributes[0].name);\n        }\n        for (var attr in params.inputAttributes) {\n          input.setAttribute(attr, params.inputAttributes[attr]);\n        }\n\n        // set class\n        input.className = inputClass;\n        if (params.inputClass) {\n          addClass(input, params.inputClass);\n        }\n\n        _hide(input);\n      }\n\n      var populateInputOptions;\n      switch (params.input) {\n        case 'text':\n        case 'email':\n        case 'password':\n        case 'file':\n          input = getChildByClass(modal, swalClasses.input);\n          input.value = params.inputValue;\n          input.placeholder = params.inputPlaceholder;\n          input.type = params.input;\n          _show(input);\n          break;\n        case 'select':\n          var select = getChildByClass(modal, swalClasses.select);\n          select.innerHTML = '';\n          if (params.inputPlaceholder) {\n            var placeholder = document.createElement('option');\n            placeholder.innerHTML = params.inputPlaceholder;\n            placeholder.value = '';\n            placeholder.disabled = true;\n            placeholder.selected = true;\n            select.appendChild(placeholder);\n          }\n          populateInputOptions = function(inputOptions) {\n            for (var optionValue in inputOptions) {\n              var option = document.createElement('option');\n              option.value = optionValue;\n              option.innerHTML = inputOptions[optionValue];\n              if (params.inputValue === optionValue) {\n                option.selected = true;\n              }\n              select.appendChild(option);\n            }\n            _show(select);\n            select.focus();\n          };\n          break;\n        case 'radio':\n          var radio = getChildByClass(modal, swalClasses.radio);\n          radio.innerHTML = '';\n          populateInputOptions = function(inputOptions) {\n            for (var radioValue in inputOptions) {\n              var id = 1;\n              var radioInput = document.createElement('input');\n              var radioLabel = document.createElement('label');\n              var radioLabelSpan = document.createElement('span');\n              radioInput.type = 'radio';\n              radioInput.name = swalClasses.radio;\n              radioInput.value = radioValue;\n              radioInput.id = swalClasses.radio + '-' + (id++);\n              if (params.inputValue === radioValue) {\n                radioInput.checked = true;\n              }\n              radioLabelSpan.innerHTML = inputOptions[radioValue];\n              radioLabel.appendChild(radioInput);\n              radioLabel.appendChild(radioLabelSpan);\n              radioLabel.for = radioInput.id;\n              radio.appendChild(radioLabel);\n            }\n            _show(radio);\n            var radios = radio.querySelectorAll('input');\n            if (radios.length) {\n              radios[0].focus();\n            }\n          };\n          break;\n        case 'checkbox':\n          var checkbox = getChildByClass(modal, swalClasses.checkbox);\n          var checkboxInput = modal.querySelector('#' + swalClasses.checkbox);\n          checkboxInput.value = 1;\n          checkboxInput.checked = Boolean(params.inputValue);\n          var label = checkbox.getElementsByTagName('span');\n          if (label.length) {\n            checkbox.removeChild(label[0]);\n          }\n          label = document.createElement('span');\n          label.innerHTML = params.inputPlaceholder;\n          checkbox.appendChild(label);\n          _show(checkbox);\n          break;\n        case 'textarea':\n          var textarea = getChildByClass(modal, swalClasses.textarea);\n          textarea.value = params.inputValue;\n          textarea.placeholder = params.inputPlaceholder;\n          _show(textarea);\n          break;\n        case null:\n          break;\n        default:\n          console.error('SweetAlert2: Unexpected type of input! Expected \"text\" or \"email\" or \"password\", \"select\", \"checkbox\", \"textarea\" or \"file\", got \"' + params.input + '\"');\n          break;\n      }\n\n      if (params.input === 'select' || params.input === 'radio') {\n        if (params.inputOptions instanceof Promise) {\n          sweetAlert.showLoading();\n          params.inputOptions.then(function(inputOptions) {\n            sweetAlert.hideLoading();\n            populateInputOptions(inputOptions);\n          });\n        } else if (typeof params.inputOptions === 'object') {\n          populateInputOptions(params.inputOptions);\n        } else {\n          console.error('SweetAlert2: Unexpected type of inputOptions! Expected object or Promise, got ' + typeof params.inputOptions);\n        }\n      }\n\n      fixVerticalPosition();\n      openModal(params.animation, params.onOpen);\n\n      // Focus the first element (input or button)\n      setFocus(-1, 1);\n    });\n  }\n\n  // SweetAlert function\n  function sweetAlert() {\n    // Copy arguments to the local args variable\n    var args = arguments;\n    var modal = getModal();\n\n    if (modal === null) {\n      sweetAlert.init();\n      modal = getModal();\n    }\n\n    if (sweetAlert.isVisible()) {\n      resetPrevState();\n    }\n\n    return modalDependant.apply(this, args);\n  }\n\n  /*\n   * Global function to determine if swal2 modal is visible\n   */\n  sweetAlert.isVisible = function() {\n    var modal = getModal();\n    return isVisible(modal);\n  };\n\n  /*\n   * Global function for chaining sweetAlert modals\n   */\n  sweetAlert.queue = function(steps) {\n    return new Promise(function(resolve, reject) {\n      (function step(i, callback) {\n        var nextStep = null;\n        if (isFunction(steps)) {\n          nextStep = steps(i);\n        } else if (i < steps.length) {\n          nextStep = steps[i];\n        }\n        if (nextStep) {\n          sweetAlert(nextStep).then(function() {\n            step(i+1, callback);\n          }, function(dismiss) {\n            reject(dismiss);\n          });\n        } else {\n          resolve();\n        }\n      })(0);\n    });\n  };\n\n  /*\n   * Global function to close sweetAlert\n   */\n  sweetAlert.close = sweetAlert.closeModal = function(onComplete) {\n    var modal = getModal();\n    removeClass(modal, 'show-swal2');\n    addClass(modal, 'hide-swal2');\n\n    // Reset icon animations\n    var $successIcon = modal.querySelector('.' + swalClasses.icon + '.' + iconTypes.success);\n    removeClass($successIcon, 'animate');\n    removeClass($successIcon.querySelector('.tip'), 'animate-success-tip');\n    removeClass($successIcon.querySelector('.long'), 'animate-success-long');\n\n    var $errorIcon = modal.querySelector('.' + swalClasses.icon + '.' + iconTypes.error);\n    removeClass($errorIcon, 'animate-error-icon');\n    removeClass($errorIcon.querySelector('.x-mark'), 'animate-x-mark');\n\n    var $warningIcon = modal.querySelector('.' + swalClasses.icon + '.' + iconTypes.warning);\n    removeClass($warningIcon, 'pulse-warning');\n\n    // If animation is supported, animate then clean\n    if (animationEndEvent && !hasClass(modal, 'no-animation')) {\n      modal.addEventListener(animationEndEvent, function swalCloseEventFinished() {\n        modal.removeEventListener(animationEndEvent, swalCloseEventFinished);\n        if (hasClass(modal, 'hide-swal2')) {\n          _hide(modal);\n          fadeOut(getOverlay(), 0);\n        }\n\n        resetPrevState();\n      });\n    } else {\n      // Otherwise, clean immediately\n      _hide(modal);\n      _hide(getOverlay());\n      resetPrevState();\n    }\n    if (onComplete !== null && typeof onComplete === 'function') {\n      onComplete.call(this, modal);\n    }\n  };\n\n  /*\n   * Global function to click 'Confirm' button\n   */\n  sweetAlert.clickConfirm = function() {\n    getConfirmButton().click();\n  };\n\n  /*\n   * Global function to click 'Cancel' button\n   */\n  sweetAlert.clickCancel = function() {\n    getCancelButton().click();\n  };\n\n  /*\n   * Add modal + overlay to DOM\n   */\n  sweetAlert.init = function() {\n    if (typeof document === 'undefined') {\n      console.log('SweetAlert2 requires document to initialize');\n      return;\n    } else if (document.getElementsByClassName(swalClasses.container).length) {\n      return;\n    }\n\n    var sweetWrap = document.createElement('div');\n    sweetWrap.className = swalClasses.container;\n\n    sweetWrap.innerHTML = sweetHTML;\n\n    document.body.appendChild(sweetWrap);\n\n    var modal = getModal();\n    var $input = getChildByClass(modal, swalClasses.input);\n    var $select = getChildByClass(modal, swalClasses.select);\n    var $checkbox = modal.querySelector('#' + swalClasses.checkbox);\n    var $textarea = getChildByClass(modal, swalClasses.textarea);\n    var $customImg = getChildByClass(modal, swalClasses.image);\n\n    $input.oninput = function() {\n      sweetAlert.resetValidationError();\n    };\n\n    $input.onkeyup = function(event) {\n      event.stopPropagation();\n      if (event.keyCode === 13) {\n        sweetAlert.clickConfirm();\n      }\n    };\n\n    $select.onchange = function() {\n      sweetAlert.resetValidationError();\n    };\n\n    $checkbox.onchange = function() {\n      sweetAlert.resetValidationError();\n    };\n\n    $textarea.oninput = function() {\n      sweetAlert.resetValidationError();\n    };\n\n    $customImg.onload = $customImg.onerror = fixVerticalPosition;\n\n    window.addEventListener('resize', fixVerticalPosition, false);\n  };\n\n  /**\n   * Set default params for each popup\n   * @param {Object} userParams\n   */\n  sweetAlert.setDefaults = function(userParams) {\n    if (!userParams) {\n      throw new Error('userParams is required');\n    }\n    if (typeof userParams !== 'object') {\n      throw new Error('userParams has to be a object');\n    }\n\n    extend(modalParams, userParams);\n  };\n\n  /**\n   * Reset default params for each popup\n   */\n  sweetAlert.resetDefaults = function() {\n    modalParams = extend({}, defaultParams);\n  };\n\n  sweetAlert.version = '4.1.9';\n\n  window.sweetAlert = window.swal = sweetAlert;\n\n  /*\n  * If library is injected after page has loaded\n  */\n  (function() {\n    if (document.readyState === 'complete' || document.readyState === 'interactive' && document.body) {\n      sweetAlert.init();\n    } else {\n      document.addEventListener('DOMContentLoaded', function onDomContentLoaded() {\n        document.removeEventListener('DOMContentLoaded', onDomContentLoaded, false);\n        sweetAlert.init();\n      }, false);\n    }\n  })();\n\n  if (typeof Promise === 'function') {\n    Promise.prototype.done = Promise.prototype.done || function() {\n      return this.catch(function() {\n        // Catch promise rejections silently.\n        // https://github.com/limonte/sweetalert2/issues/177\n      });\n    };\n  } else {\n    console.warn('SweetAlert2: Please inlude Promise polyfill BEFORE including sweetalert2.js if IE10+ support needed.');\n  }\n\n  return sweetAlert;\n\n}));","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","angular.module('app.base').config(appConfig);\n\nappConfig.$inject = ['$stateProvider'];\nfunction appConfig($stateProvider) {\n    $stateProvider.state('base', {\n        controller: BaseController,\n        ncyBreadcrumb: {\n            label: 'Lily',\n        },\n    });\n}\n\nangular.module('app.base').controller('BaseController', BaseController);\n\nBaseController.$inject = ['$scope', '$state', '$http', 'AppHash', 'Settings', 'HLShortcuts'];\nfunction BaseController($scope, $state, $http, AppHash, Settings, HLShortcuts) {\n    // Make sure the settings are available everywhere.\n    $scope.settings = Settings;\n\n    $scope.loadNotifications = loadNotifications;\n\n    activate();\n\n    //////////\n\n    function activate() {\n        $scope.$on('$stateChangeStart', function() {\n            AppHash.get().$promise.then(function(response) {\n                // App hash is set, so compare with the response.\n                if (window.appHash && window.appHash !== response.app_hash) {\n                    // Reload the page so we get new static files.\n                    window.location.reload(true);\n                } else {\n                    window.appHash = response.app_hash;\n                }\n            });\n\n            new window.Intercom('update', {email: currentUser.email});\n        });\n\n        $scope.$on('$stateChangeSuccess', _setPreviousState);\n        $scope.$on('$viewContentLoaded', _contentLoadedActions);\n\n        $scope.$on('$stateChangeError', _handleResolveErrors);\n    }\n\n    function loadNotifications() {\n        $http.get('/api/utils/notifications/').then(function(notifications) {  // On success\n            angular.forEach(notifications.data, function(message) {\n                toastr[message.level](message.message);\n            });\n        }, function(error) {  // On error\n            toastr.error(error, 'Couldn\\'t load notifications');\n        });\n    }\n\n    function _setPreviousState(event, toState, toParams, fromState, fromParams) {\n        var previousInbox;\n\n        $scope.previousState = $state.href(fromState, fromParams);\n        Settings.page.previousState = {state: fromState, params: fromParams};\n\n        if (fromState.name === 'base.email.list' || fromState.name === 'base.email.accountList') {\n            previousInbox = {\n                state: fromState.name,\n                params: fromParams,\n            };\n\n            Settings.email.setPreviousInbox(previousInbox);\n        }\n\n        if (Settings.email.sidebar && fromState && fromState.name === 'base.email.detail') {\n            Settings.email.resetEmailSettings();\n\n            $scope.$$phase || $scope.apply();\n        }\n\n        Settings.page.toolbar.data = null;\n\n        // For some reason we need to do two update calls to display messages\n        // when they should.\n        new window.Intercom('update', {email: currentUser.email});\n    }\n\n    function _contentLoadedActions() {\n        Metronic.unblockUI();\n        Metronic.initComponents(); // init core components\n        //HLSelect2.init();\n        //HLFormsets.init();\n        autosize($('textarea'));\n\n        //$scope.loadNotifications();\n        $scope.toolbar = Settings.page.toolbar.data;\n    }\n\n    function _handleResolveErrors(event, toState, toParams, fromState, fromParams, error) {\n        switch (error.status) {\n            case 404:\n                $state.go('base.404');\n                break;\n            default:\n                // With JS errors, error isn't an object, but still the default case gets called.\n                $state.go('base.500');\n        }\n    }\n}\n","angular.module('app.base').controller('footerController', footerController);\n\nfooterController.$inject = ['$scope'];\nfunction footerController($scope) {\n}\n","angular.module('app.base').controller('headerController', headerController);\n\nheaderController.$inject = ['$scope'];\nfunction headerController($scope) {\n    $scope.$on('$includeContentLoaded', function() {\n        Layout.initHeader(); // init header\n    });\n}\n","angular.module('app.base').controller('sidebarController', sidebarController);\n\nsidebarController.$inject = ['$scope'];\nfunction sidebarController($scope) {\n    $scope.$on('$includeContentLoaded', function() {\n        Layout.initSidebar(); // init sidebar\n    });\n}\n","angular.module('app.directives').directive('activateSelect', activateSelect);\n\nfunction activateSelect($timeout) {\n    return {\n        restrict: 'A',\n        require: '?uiSelect',\n        link: function(scope, element, attrs, $select) {\n            // TODO: Once Select2 implements default select behaviour we can convert all\n            // current normal selects to Select2. After that we can uncomment this code\n            // and make it so selects automatically get opened when inline editing.\n            // Note: When building the app minified look out for the following error:\n            // vendor.js:6 Error: [$injector:unpr] Unknown provider: rProvider <- r <- activateSelectDirective\n            // This doesn't happen when building normally (and not sure if it happens on live.), but something\n            // that needs to be looked at.\n            // scope.$watch('$form.$visible', function() {\n            //     $timeout(function() {\n                    // Open the select on the next digest cycle.\n                    // if ($select) {\n                        // $select.activate();\n                    // }\n            //     });\n            // });\n        },\n    };\n}\n","angular.module('app.directives').directive('autofocusIf', autofocusIf);\n\nfunction autofocusIf() {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            scope.$watch(function() {\n                return scope.$eval(attrs.autofocusIf);\n            }, function(bool) {\n                if (bool === true) {\n                    element[0].focus();\n                }\n            });\n        },\n    };\n}\n","angular.module('app.directives').directive('callerInfo', callerInfo);\n\nfunction callerInfo() {\n    return {\n        restrict: 'E',\n        scope: true,\n        templateUrl: 'base/directives/caller_info.html',\n        controller: CallerInfoController,\n        controllerAs: 'vm',\n        transclude: true,\n        bindToController: true,\n    };\n}\n\nCallerInfoController.$inject = ['$state', 'Account', 'Call'];\nfunction CallerInfoController($state, Account, Call) {\n    var vm = this;\n\n    vm.fetchCallerInfo = fetchCallerInfo;\n\n    function fetchCallerInfo() {\n        // Get the latest call of the current user based on the internal number.\n        Call.getLatestCall().$promise.then(function(callInfo) {\n            var call = callInfo.call;\n\n            if (call) {\n                // There was a call for the current user, so try to find an account with the given number.\n                Account.searchByPhoneNumber({number: call.caller_number}).$promise.then(function(response) {\n                    if (response.data.accounts.length) {\n                        // Account found so redirect to the account.\n                        $state.go('base.accounts.detail', {id: response.data.accounts[0]}, {reload: true});\n                    } else if (response.data.contacts.length) {\n                        // Contact found so redirect to the contact.\n                        $state.go('base.contacts.detail', {id: response.data.contacts[0]}, {reload: true});\n                    } else {\n                        // No account or contact found so redirect to create account form.\n                        $state.go(\n                            'base.accounts.create',\n                            {\n                                'name': call.caller_name,\n                                'phone_number': call.caller_number,\n                            },\n                            {reload: true}\n                        );\n                    }\n                });\n            } else {\n                toastr.error('No calls for you right now', 'No calls');\n            }\n        });\n    }\n}\n","/**\n * checkbox Directive makes a nice uniform checkbox and binds to a model\n *\n * @param model object: model to bind checkbox with\n *\n * Example:\n * <checkbox model=\"table.visibility.name\">Name</checkbox>\n */\nangular.module('app.directives').directive('checkbox', checkbox);\n\nfunction checkbox() {\n    return {\n        restrict: 'E',\n        replace: true,\n        transclude: true,\n        scope: {\n            model: '=',\n        },\n        templateUrl: 'base/directives/checkbox.html',\n    };\n}\n","/**\n * Directive give a nice formatting on input elements.\n *\n * It makes sure that the value of the ngModel on the scope has a nice\n * formatting for the user\n */\nangular.module('app.directives').directive('dateFormatter', dateFormatter);\n\ndateFormatter.$inject = ['dateFilter'];\nfunction dateFormatter(dateFilter) {\n    return {\n        restrict: 'A',\n        require: 'ngModel',\n        link: function(scope, element, attrs, ngModel) {\n            ngModel.$formatters.push(function(value) {\n                if (value) {\n                    return dateFilter(value, attrs.dateFormatter);\n                }\n\n                return value;\n            });\n        },\n    };\n}\n","/**\n * Directive to show a confirmation box before deleting.\n */\nangular.module('app.directives').directive('deleteConfirmation', deleteConfirmation);\nfunction deleteConfirmation() {\n    return {\n        restrict: 'E',\n        scope: {\n            model: '@',\n            object: '=',\n            displayField: '@?',\n            callback: '&?',\n            buttonClass: '@?',\n            iconClass: '@?',\n            messageObject: '=?',\n            helpText: '@?',\n        },\n        templateUrl: 'base/directives/delete_confirmation.html',\n        controller: DeleteConfirmationController,\n        controllerAs: 'vm',\n        transclude: true,\n        bindToController: true,\n    };\n}\n\nDeleteConfirmationController.$inject = ['$state', 'HLResource', 'Settings'];\nfunction DeleteConfirmationController($state, HLResource, Settings) {\n    var vm = this;\n\n    vm.openConfirmationModal = openConfirmationModal;\n\n    activate();\n\n    ////\n\n    function activate() {\n        if (!vm.buttonClass) {\n            vm.buttonClass = '';\n        }\n\n        if (!vm.iconClass) {\n            vm.iconClass = 'lilicon hl-trashcan-icon';\n        }\n\n        if (!vm.helpText) {\n            vm.helpText = 'Delete';\n        }\n\n        if (vm.messageObject) {\n            vm.messages = {\n                'confirmTitle': vm.messageObject.confirmTitle || messages.alerts.delete.confirmTitle,\n                'confirmText': vm.messageObject.confirmText || messages.alerts.delete.confirmText,\n                'confirmButtonText': vm.messageObject.confirmButtonText || messages.alerts.delete.confirmButtonText,\n                'errorTitle': vm.messageObject.errorTitle || messages.alerts.delete.errorTitle,\n                'errorText': vm.messageObject.errorText || messages.alerts.delete.errorText,\n                'successTitle': vm.messageObject.successTitle || messages.alerts.delete.successTitle,\n                'successText': vm.messageObject.successText || messages.alerts.delete.successText,\n            };\n        } else {\n            vm.messages = messages.alerts.delete;\n        }\n    }\n\n    function openConfirmationModal() {\n        var name = '';\n\n        if (vm.displayField) {\n            name = vm.object[vm.displayField];\n        } else if (vm.object.hasOwnProperty('name')) {\n            name = vm.object.name;\n        } else if (vm.object.hasOwnProperty('full_name')) {\n            name = vm.object.full_name;\n        }\n\n        swal({\n            title: vm.messages.confirmTitle,\n            html: sprintf(vm.messages.confirmText, {name: name ? name : 'this ' + vm.model.toLowerCase()}),\n            type: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#f3565d',\n            confirmButtonText: vm.messages.confirmButtonText,\n            preConfirm: function() {\n                swal.enableLoading();\n                return new Promise(function(resolve) {\n                    HLResource.delete(vm.model, vm.object).then(function() {\n                        // Delete was successful, so continue.\n                        resolve();\n                    }, function(error) {\n                        // Otherwise show error alert.\n                        swal({\n                            title: vm.messages.errorTitle,\n                            html: vm.messages.errorText,\n                            type: 'error',\n                        });\n                    });\n                });\n            },\n        }).then(function(isConfirm) {\n            if (isConfirm) {\n                // In certain cases we want to call a function of another controller.\n                if (vm.callback) {\n                    // Call the given function.\n                    vm.callback();\n                } else {\n                    if (Settings.page.previousState && !Settings.page.previousState.state.name.endsWith('edit')) {\n                        // Go to the previous page if it isn't the edit page of the just deleted item.\n                        $state.go(Settings.page.previousState.state, Settings.page.previousState.params);\n                    } else {\n                        // Otherwise just go to the list view, which is the parent state.\n                        $state.go($state.current.parent);\n                    }\n                }\n            }\n        }).done();\n    }\n}\n","angular.module('app.directives').directive('editableCheckbox', editableCheckbox);\n\nfunction editableCheckbox() {\n    return {\n        restrict: 'E',\n        scope: {\n            viewModel: '=',\n            field: '@',\n            type: '@',\n        },\n        templateUrl: 'base/directives/editable_checkbox.html',\n        controller: EditableCheckboxController,\n        controllerAs: 'ec',\n        transclude: true,\n        bindToController: true,\n    };\n}\n\nEditableCheckboxController.$inject = [];\nfunction EditableCheckboxController() {\n    var ec = this;\n\n    ec.object = ec.viewModel[ec.type.toLowerCase()];\n\n    ec.updateViewModel = updateViewModel;\n\n    function updateViewModel() {\n        var args = {\n            id: ec.object.id,\n        };\n\n        args[ec.field] = ec.object[ec.field];\n\n        return ec.viewModel.updateModel(args);\n    }\n}\n","angular.module('app.directives').directive('editableHandler', editableHandler);\n\nfunction editableHandler() {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            var form;\n            var isPencilClick = false;\n\n            if (scope.hasOwnProperty('$form')) {\n                form = scope.$form;\n            } else {\n                form = scope[attrs.eForm];\n            }\n\n            element.on('click', function(event) {\n                // For most inline editable elements the clickable area belongs to the element.\n                // So check if the clicked part was actually the edit icon.\n                if (event.offsetX > event.currentTarget.offsetWidth) {\n                    form.$show();\n                    isPencilClick = true;\n\n                    scope.$apply();\n                }\n            });\n\n            element.on('click', '.hl-edit-icon', function(event) {\n                // Certain inline editable elements have a separate button,\n                // so an extra check for the clicked area isn't needed.\n                form.$show();\n                isPencilClick = true;\n\n                scope.$apply();\n            });\n\n            scope.$watch('$form.$visible', function(newValue, oldValue) {\n                if (newValue) {\n                    if (isPencilClick) {\n                        ga('send', 'event', 'Field', 'Edit', 'Pencil');\n                    } else {\n                        ga('send', 'event', 'Field', 'Edit', 'Double click');\n                    }\n\n                    // Reset the variable.\n                    isPencilClick = false;\n                }\n            });\n        },\n    };\n}\n","angular.module('app.directives').directive('editableLink', editableLink);\n\nfunction editableLink() {\n    return {\n        restrict: 'E',\n        scope: {\n            viewModel: '=',\n            type: '@',\n            field: '@',\n            object: '=?',\n            socialMediaName: '@?',\n        },\n        templateUrl: 'base/directives/editable_link.html',\n        controller: EditableLinkController,\n        controllerAs: 'el',\n        transclude: true,\n        bindToController: true,\n    };\n}\n\nEditableLinkController.$inject = [];\nfunction EditableLinkController() {\n    var el = this;\n\n    el.updateViewModel = updateViewModel;\n\n    activate();\n\n    /////\n\n    function activate() {\n        if (!el.object) {\n            if (!el.socialMediaName) {\n                el.object = el.viewModel[el.type.toLowerCase()];\n            }\n        }\n    }\n\n    function updateViewModel($data) {\n        var patchPromise;\n\n        var args = {};\n\n        if (el.object) {\n            args = {\n                id: el.object.id,\n            };\n        }\n\n        args[el.field] = $data;\n\n        if (el.socialMediaName) {\n            args.name = el.socialMediaName;\n            patchPromise = el.viewModel.updateModel(args, el.socialMediaName);\n        } else {\n            patchPromise = el.viewModel.updateModel(args).$promise;\n        }\n\n        return patchPromise;\n    }\n}\n","angular.module('app.directives').directive('editableRelated', editableRelated);\n\nfunction editableRelated() {\n    return {\n        restrict: 'E',\n        scope: {\n            model: '=',\n            type: '@',\n            field: '@',\n        },\n        templateUrl: function(elem, attrs) {\n            return 'base/directives/editable_' + attrs.field + '.html';\n        },\n        controller: EditableRelatedController,\n        controllerAs: 'er',\n        transclude: true,\n        bindToController: true,\n        link: function(scope, element, attr) {\n            // Bind click event to the current directive.\n            element.on('click', '.js-edit', function() {\n                scope.er.showForm();\n                scope.$apply();\n            });\n\n            element.on('click', '.js-add', function() {\n                scope.er.showForm(true);\n                scope.$apply();\n            });\n        },\n    };\n}\n\nEditableRelatedController.$inject = ['HLFields', 'HLResource', 'HLUtils'];\nfunction EditableRelatedController(HLFields, HLResource, HLUtils) {\n    var er = this;\n    er.formVisible = false;\n\n    er.addRelatedField = addRelatedField;\n    er.removeRelatedField = removeRelatedField;\n    er.closeForm = closeForm;\n    er.submit = submit;\n    er.showForm = showForm;\n\n    // TODO: LILY-1520: Clean up this model specific code.\n    er.formatPhoneNumber = HLUtils.formatPhoneNumber;\n    er.setPrimaryEmailAddress = HLUtils.setPrimaryEmailAddress;\n\n    er.telephoneTypes = [\n        {key: 'work', value: 'Work'},\n        {key: 'mobile', value: 'Mobile'},\n        {key: 'home', value: 'Home'},\n        {key: 'fax', value: 'Fax'},\n        {key: 'other', value: 'Other'},\n    ];\n\n    er.addressTypes = [\n        {key: 'visiting', value: 'Visiting address'},\n        {key: 'billing', value: 'Billing address'},\n        {key: 'shipping', value: 'Shipping address'},\n        {key: 'home', value: 'Home address'},\n        {key: 'other', value: 'Other'},\n    ];\n\n    activate();\n\n    /////\n\n    function activate() {\n        er.items = er.model[er.field];\n        // Store the original items in case we cancel the editing.\n        er.originalItems = angular.copy(er.items);\n\n        er.formName = er.field + 'Form';\n    }\n\n    function addRelatedField() {\n        // Default status is 'Other'.\n        var status = 1;\n        var isPrimary = false;\n\n        switch (er.field) {\n            case 'email_addresses':\n                if (er.items.length === 0) {\n                    // No email addresses added yet, so first one is primary.\n                    status = 2;\n                    isPrimary = true;\n                }\n\n                er.items.unshift({is_primary: isPrimary, status: status});\n                break;\n            case 'phone_numbers':\n                er.items.unshift({type: 'work'});\n                break;\n            case 'addresses':\n                er.items.unshift({type: 'visiting'});\n                break;\n            case 'websites':\n                er.items.unshift({website: '', is_primary: false});\n                break;\n            default:\n                break;\n        }\n    }\n\n    function removeRelatedField(item) {\n        item.is_deleted = !item.is_deleted;\n    }\n\n    function submit() {\n        var element = '[name=\"' + er.formName + '\"]';\n\n        var args = {\n            id: er.model.id,\n        };\n\n        args[er.field] = HLFields.cleanInlineRelatedFields(er.items);\n\n        HLUtils.blockUI(element, true);\n\n        return HLResource.patch(er.type, args).$promise.then(function(response) {\n            er.formVisible = false;\n            er.items = response[er.field];\n\n            HLUtils.unblockUI(element);\n        }).catch(function() {\n            HLUtils.unblockUI(element);\n        });\n    }\n\n    function showForm(add) {\n        er.formVisible = true;\n\n        if (!er.items.length || add) {\n            er.addRelatedField();\n        }\n    }\n\n    function closeForm() {\n        // Cancel the editing and restore the original values.\n        angular.copy(er.originalItems, er.items);\n        er.formVisible = false;\n    }\n}\n","angular.module('app.directives').directive('editableSelect', editableSelect);\n\nfunction editableSelect() {\n    return {\n        restrict: 'E',\n        scope: {\n            viewModel: '=',\n            field: '@',\n            type: '@',\n            choiceField: '@',\n            search: '@?',\n            multiple: '@?',\n            selectType: '@?',\n            object: '=?',\n            selectOptions: '=?', // contains any custom settings for the select\n        },\n        templateUrl: function(elem, attrs) {\n            if (attrs.selectType) {\n                return 'base/directives/editable_' + attrs.selectType + '.html';\n            }\n\n            return 'base/directives/editable_select.html';\n        },\n        controller: EditableSelectController,\n        controllerAs: 'es',\n        transclude: true,\n        bindToController: true,\n    };\n}\n\nEditableSelectController.$inject = ['$injector', '$scope', 'HLResource', 'HLSearch', 'HLUtils'];\nfunction EditableSelectController($injector, $scope, HLResource, HLSearch, HLUtils) {\n    var es = this;\n\n    es.getChoices = getChoices;\n    es.refreshChoices = refreshChoices;\n    es.updateViewModel = updateViewModel;\n\n    activate();\n\n    // Broadcast function that executes the activate() function when somebody\n    // dynamically changes the inline select edit by using the 'assign to me'\n    // link, instead of selecting a person with the selectbox.\n    $scope.$on('activateEditableSelect', function() {\n        activate();\n    });\n\n    /////\n\n    function activate() {\n        if (!es.selectOptions) {\n            // If it's undefined just set it to an empty object.\n            // Ensures we don't need extra checks in the code.\n            es.selectOptions = {};\n        }\n\n        if (!es.object) {\n            es.object = es.viewModel[es.type.toLowerCase()];\n        }\n\n        // Certain values in the given view model are objects,\n        // so the default value in the select won't always work.\n        // If we're not dealing with an inline editable search select check\n        // if it's an object and add .id.\n        if (!es.search && typeof es.object[es.field] === 'object') {\n            if (es.object[es.field]) {\n                es.selectModel = es.object[es.field].id;\n            }\n        } else {\n            es.selectModel = es.object[es.field];\n        }\n\n        if (es.selectOptions.hasOwnProperty('display')) {\n            es.optionDisplay = es.selectOptions.display;\n        } else {\n            es.optionDisplay = 'name';\n        }\n\n        if (es.search) {\n            if (es.selectOptions.hasOwnProperty('placeholder')) {\n                es.placeholder = es.selectOptions.placeholder;\n            }\n        }\n\n        // Setup the form name so we can block the element while saving data.\n        es.formName = es.field.split('_').join('') + 'Form';\n    }\n\n    function getChoices() {\n        var type;\n        var field;\n        var resourceCall;\n        var returnValue;\n\n        if (es.selectOptions.hasOwnProperty('type')) {\n            type = es.selectOptions.type;\n        } else {\n            type = es.type;\n        }\n\n        if (es.selectOptions.hasOwnProperty('field')) {\n            field = es.selectOptions.field;\n        } else {\n            field = es.field;\n        }\n\n        resourceCall = HLResource.getChoicesForField(type, field);\n\n        if (!resourceCall.hasOwnProperty('$promise')) {\n            es.choices = resourceCall;\n            returnValue = false;\n        } else {\n            // Add a return here so the select gets disabled while\n            // loading the options.\n            returnValue = resourceCall.$promise.then(function(data) {\n                if (data.hasOwnProperty('results')) {\n                    es.choices = data.results;\n                } else {\n                    es.choices = data;\n                }\n            });\n        }\n\n        return returnValue;\n    }\n\n    function refreshChoices(query) {\n        var type;\n        var searchPromise;\n        var sortColumn;\n        var nameColumn;\n        var extraFilterQuery;\n\n        if (es.selectOptions.hasOwnProperty('type')) {\n            type = es.selectOptions.type;\n        } else {\n            type = es.type;\n        }\n\n        if (es.selectOptions.hasOwnProperty('sortColumn')) {\n            sortColumn = es.selectOptions.sortColumn;\n        }\n\n        if (es.selectOptions.hasOwnProperty('nameColumn')) {\n            nameColumn = es.selectOptions.nameColumn;\n        }\n\n        extraFilterQuery = (type === 'User') ? 'is_active:true' : '';\n\n        searchPromise = HLSearch.refreshList(query, type, extraFilterQuery, sortColumn, nameColumn);\n\n        if (searchPromise) {\n            searchPromise.$promise.then(function(data) {\n                es.choices = data.objects;\n            });\n        }\n    }\n\n    function updateViewModel($data) {\n        var selected;\n        var i;\n        var updatePromise;\n\n        var args = {\n            id: es.object.id,\n        };\n\n        var form = '[name=\"es.' + es.formName + '\"]';\n\n        if (!es.multiple) {\n            // $data only contains the ID, so get the name from the choices in the scope.\n            for (i = 0; i < es.choices.length; i++) {\n                if (es.choices[i].id === $data) {\n                    selected = es.choices[i];\n                }\n            }\n        } else {\n            HLUtils.blockUI(form, true);\n        }\n\n        if (!es.multiple) {\n            if (es.choiceField) {\n                es.object[es.field] = $data;\n                // Choice fields end with '_display', so set the proper\n                // variable so front end changes are reflected properly.\n                es.object[es.field + '_display'] = selected.name;\n            } else {\n                es.object[es.field] = selected;\n            }\n        }\n\n        if (typeof $data === 'undefined') {\n            // We're probably clearing a select field, which produces undefined.\n            args[es.field] = null;\n        } else {\n            args[es.field] = $data;\n        }\n\n        if (es.viewModel.hasOwnProperty('updateModel')) {\n            updatePromise = es.viewModel.updateModel(args);\n        } else {\n            // Dealing with a generic view model (list widget, history list item) so just call the updateModel directly.\n            updatePromise = $injector.get(es.type).updateModel(args, es.field, es.object);\n        }\n\n        return updatePromise.then(function() {\n            HLUtils.unblockUI(form);\n\n            if (es.hasOwnProperty(es.formName)) {\n                es[es.formName].$hide();\n            }\n\n            if (es.search || es.selectType) {\n                if (es.multiple) {\n                    es.object[es.field] = $data;\n                }\n\n                // Inline editable select2 field doesn't properly update\n                // es.selectModel, so update it manually.\n                es.selectModel = es.object[es.field];\n            }\n        }).catch(function() {\n            HLUtils.unblockUI(form);\n        });\n    }\n}\n","angular.module('app.directives').directive('editableTags', editableTags);\n\nfunction editableTags() {\n    return {\n        restrict: 'E',\n        scope: {\n            viewModel: '=',\n            type: '@',\n        },\n        templateUrl: 'base/directives/editable_tags.html',\n        controller: EditableTagsController,\n        controllerAs: 'vm',\n        transclude: true,\n        bindToController: true,\n    };\n}\n\nEditableTagsController.$inject = ['$timeout', 'HLSearch', 'HLUtils'];\nfunction EditableTagsController($timeout, HLSearch, HLUtils) {\n    var vm = this;\n\n    vm.refreshTags = refreshTags;\n    vm.updateViewModel = updateViewModel;\n    vm.addTagChoice = addTagChoice;\n\n    activate();\n\n    /////\n\n    function activate() {\n        vm.object = vm.viewModel[vm.type];\n    }\n\n    function refreshTags(query) {\n        var searchPromise = HLSearch.refreshTags(query, vm.object, vm.type);\n\n        if (searchPromise) {\n            searchPromise.$promise.then(function(data) {\n                vm.choices = data.objects;\n            });\n        }\n    }\n\n    function updateViewModel($data) {\n        var tagIds = [];\n        var removedTags = [];\n\n        var args = {\n            id: vm.object.id,\n        };\n\n        var form = '[name=\"vm.tagForm\"]';\n\n        HLUtils.blockUI(form, true);\n\n        for (let tag of $data.filter(x => 'id' in x)) {\n            tagIds.push(tag.id);\n        }\n\n        removedTags = vm.object.tags.filter(tag => tagIds.indexOf(tag.id) === -1);\n\n        for (let tag of removedTags) {\n            tag.is_deleted = true;\n        }\n\n        args.tags = $data.concat(removedTags);\n\n        return vm.viewModel.updateModel(args).then(function(response) {\n            HLUtils.unblockUI(form);\n            vm.tagForm.$hide();\n\n            // Just setting the value doesn't update the values model properly.\n            // So use $timeout so it gets applied in the next digest cycle.\n            $timeout(function() {\n                vm.viewModel[vm.type].tags = response.tags;\n            });\n        });\n    }\n\n    function addTagChoice(tag) {\n        return {\n            name: tag,\n        };\n    }\n}\n","angular.module('app.directives').directive('editableText', editableText);\n\nfunction editableText() {\n    return {\n        restrict: 'E',\n        scope: {\n            field: '@',\n            object: '=',\n            updateCallback: '&',\n        },\n        templateUrl: 'base/directives/editable_text.html',\n        controller: EditableTextController,\n        controllerAs: 'vm',\n        transclude: true,\n        bindToController: true,\n    };\n}\n\nEditableTextController.$inject = ['HLUtils'];\nfunction EditableTextController(HLUtils) {\n    var vm = this;\n\n    vm.updateViewModel = updateViewModel;\n\n    activate();\n\n    /////\n\n    function activate() {\n        // Setup the form name so we can block the element while saving data.\n        vm.formName = vm.field.split('_').join('') + 'Form';\n    }\n\n    function updateViewModel(data) {\n        return vm.updateCallback()(data, vm.field);\n    }\n}\n","angular.module('app.directives').directive('editableTextarea', editableTextarea);\n\nfunction editableTextarea() {\n    return {\n        restrict: 'E',\n        scope: {\n            viewModel: '=',\n            field: '@',\n            object: '=',\n            extraClass: '@',\n        },\n        templateUrl: 'base/directives/editable_textarea.html',\n        controller: EditableTextAreaController,\n        controllerAs: 'vm',\n        transclude: true,\n        bindToController: true,\n    };\n}\n\nEditableTextAreaController.$inject = ['$injector', '$timeout', 'HLUtils'];\nfunction EditableTextAreaController($injector, $timeout, HLUtils) {\n    var vm = this;\n\n    vm.updateViewModel = updateViewModel;\n    vm.decodeText = decodeText;\n\n    activate();\n\n    /////\n\n    function activate() {\n        vm.selectModel = vm.object[vm.field];\n    }\n\n    function decodeText() {\n        // Convert the HTML entities to human readable characters.\n        if (vm.selectModel) {\n            vm.selectModel = HLUtils.decodeHtmlEntities(vm.selectModel);\n        }\n    }\n\n    function updateViewModel($data) {\n        var patchPromise;\n        var modelName;\n        var args = {\n            id: vm.object.id,\n        };\n\n        args[vm.field] = $data;\n\n        if (vm.object.historyType) {\n            modelName = vm.object.historyType.charAt(0).toUpperCase() + vm.object.historyType.slice(1);\n\n            patchPromise = $injector.get(modelName).updateModel(args);\n        } else {\n            patchPromise = vm.viewModel.updateModel(args);\n        }\n\n        return patchPromise.then(function(data) {\n            // Set the encoded value so it get's properly displayed in the frontend.\n            $timeout(function() {\n                // Just setting the value doesn't update the values model properly.\n                // So use $timeout so it gets applied in the next digest cycle.\n                vm.object[vm.field] = data[vm.field];\n            });\n        });\n    }\n}\n","/**\n * HL specific pagination directive for generic pagination use.\n *\n * @param values {Object}: Contains table information used to set up pagination.\n *\n * Example:\n * <hl-pagination values=\"vm.table\"></hl-pagination>\n */\nangular.module('app.directives').directive('hlPagination', hlPagination);\n\nfunction hlPagination() {\n    return {\n        restrict: 'E',\n        scope: {\n            values: '=',\n        },\n        templateUrl: 'base/directives/hl_pagination.html',\n    };\n}\n","/**\n * HL directive to add a scrolling indicator to widgets with a specific height.\n *\n */\nangular.module('app.directives').directive('hlScrollIndicator', hlScrollIndicator);\n\nhlScrollIndicator.$inject = ['$timeout', '$window'];\n\nfunction hlScrollIndicator($timeout, $window) {\n    return {\n        restrict: 'A',\n        scope: true,\n        compile: function(tElement) {\n            return function(scope, element) {\n                var elm = element[0];\n                var check = function() {\n                    var maxHeight = (elm.offsetHeight === elm.scrollHeight);\n                    // In certain cases the combined values won't be more than\n                    // the scrollHeight eventhough we've reached the bottom.\n                    // So for those cases we subtract 11 from the scrollHeight\n                    // which is roughly equal to the height of the scroll indicator.\n                    var endReached = (elm.offsetHeight + elm.scrollTop >= elm.scrollHeight - 11);\n                    var widgetStatus = scope.vm.widgetInfo.status;\n\n                    // Show the scroll indicator if we've:\n                    // Reached the end of the scrollable area\n                    // or if our widget is expanded and already at max-height.\n                    scope.vm.showFade = !endReached || (maxHeight && widgetStatus === 3);\n                };\n\n                var appliedCheck = function() {\n                    scope.$apply(check);\n                };\n\n                element.bind('scroll', appliedCheck);\n\n                check();\n\n                $timeout(check, 500);\n\n                angular.element($window).bind('resize', appliedCheck);\n            };\n        },\n    };\n}\n","angular.module('app.directives').directive('inputAutoSize', inputAutoSize);\n\nfunction inputAutoSize() {\n    return {\n        restrict: 'A',\n        link: function(scope, element, attrs) {\n            scope.$watch('$data', function(newValue) {\n                var input = angular.element('[name=\"' + attrs.eName + '\"]');\n\n                // Set the size attribute of the input so it gets scaled.\n                input.attr('size', newValue.length);\n            });\n        },\n    };\n}\n","angular.module('app.directives').directive('listFilter', listFilter);\n\nfunction listFilter() {\n    return {\n        restrict: 'E',\n        scope: {\n            filterLabel: '=',\n            filterLabelPlural: '=',\n            viewModel: '=',\n        },\n        templateUrl: 'base/directives/list_filter.html',\n        controller: ListFilterController,\n        controllerAs: 'vm',\n        bindToController: true,\n    };\n}\n\nListFilterController.$inject = ['$filter', '$timeout', 'HLFilters'];\nfunction ListFilterController($filter, $timeout, HLFilters) {\n    var vm = this;\n\n    vm.toggleFilter = toggleFilter;\n    vm.setAll = setAll;\n    vm.updateFilterQuery = updateFilterQuery;\n\n    vm.allSelected = false;\n    vm.filterDisplayName = vm.filterLabel;\n    vm.filterPlural = vm.filterLabelPlural;\n\n    $timeout(activate);\n\n    /////\n\n    function activate() {\n        var update = false;\n        if (vm.viewModel.storedFilterList) {\n            vm.viewModel.filterList = vm.viewModel.storedFilterList;\n            update = true;\n        }\n\n        if (vm.viewModel.storedFilterSpecialList) {\n            vm.viewModel.filterSpecialList = vm.viewModel.storedFilterSpecialList;\n            update = true;\n        }\n\n        if (update) {\n            updateAllSelected();\n            updateFilterQuery();\n            updateFilterDisplayName();\n        }\n    }\n\n    function setAll(value) {\n        var newValue;\n\n        var filterList = vm.viewModel.filterList;\n\n        if (vm.viewModel.filterSpecialList) {\n            filterList = vm.viewModel.filterSpecialList;\n        }\n\n        if (typeof value !== 'undefined') {\n            // Set all items to the given value.\n            newValue = value;\n        } else {\n            // Deselect/Select all items.\n            vm.allSelected = !vm.allSelected;\n            newValue = vm.allSelected;\n        }\n\n        angular.forEach(filterList, function(item) {\n            item.selected = newValue;\n        });\n\n        updateFilterQuery();\n        updateFilterDisplayName();\n    }\n\n    function toggleFilter(filter) {\n        // ngModel on a checkbox seems to load really slow, so doing the toggling this way.\n        filter.selected = !filter.selected;\n\n        updateAllSelected();\n        updateFilterQuery();\n        updateFilterDisplayName();\n    }\n\n    function updateAllSelected() {\n        // Keep the All selected checkbox in sync whether or not all items are selected.\n        var filterList = vm.viewModel.filterList;\n        if (vm.viewModel.filterSpecialList) {\n            filterList = vm.viewModel.filterSpecialList;\n        }\n\n        vm.allSelected = true;\n\n        angular.forEach(filterList, function(item) {\n            if (!item.selected) {\n                vm.allSelected = false;\n            }\n        });\n    }\n\n    function updateFilterQuery() {\n        HLFilters.updateFilterQuery(vm.viewModel);\n\n        if (vm.viewModel.hasOwnProperty('updateTable')) {\n            vm.viewModel.updateTable();\n        }\n\n        vm.viewModel.storage.put('filterListSelected', vm.viewModel.filterList);\n        vm.viewModel.storage.put('filterSpecialListSelected', vm.viewModel.filterSpecialList);\n    }\n\n    function updateFilterDisplayName() {\n        var filterList = vm.viewModel.filterList;\n        var selectedItems = [];\n        var label = vm.filterLabel;\n\n        if (vm.viewModel.filterSpecialList) {\n            filterList = vm.viewModel.filterSpecialList;\n        }\n\n        selectedItems = $filter('filter')(filterList, {selected: true});\n\n        if (selectedItems.length) {\n            if (selectedItems.length < 3) {\n                label = selectedItems.map(function(item) {\n                    return item.name;\n                }).join(' + ');\n            } else {\n                label = selectedItems.length + ' ' + vm.filterLabel + ' selected';\n            }\n\n            vm.displayClearButton = true;\n        } else {\n            vm.displayClearButton = false;\n        }\n\n        vm.filterDisplayName = label;\n    }\n}\n","angular.module('app.directives').directive('listWidget', ListWidget);\n\nfunction ListWidget() {\n    return {\n        restrict: 'E',\n        scope: {\n            title: '@',\n            module: '=',\n            list: '=',\n            height: '=',\n            addLink: '@',\n            collapsableItems: '=',\n            object: '=',\n        },\n        templateUrl: function(elem, attrs) {\n            var templateUrl = '';\n\n            if (attrs.module) {\n                // Template url can't be determined from the given title. So use the module name.\n                templateUrl = attrs.module + '/directives/list_widget.html';\n            } else {\n                templateUrl = attrs.title.toLowerCase() + '/directives/list_widget.html';\n            }\n\n            return templateUrl;\n        },\n        controller: ListWidgetController,\n        controllerAs: 'vm',\n        bindToController: true,\n    };\n}\n\nListWidgetController.$inject = ['$filter', '$state', 'Settings'];\nfunction ListWidgetController($filter, $state, Settings) {\n    var vm = this;\n\n    vm.settings = Settings;\n\n    vm.googleAnalyticsEvent = googleAnalyticsEvent;\n\n    activate();\n\n    /////\n\n    function activate() {\n        if (vm.collapsableItems) {\n            // Certain list widgets have collapsable cells, so set the default state to collapsed.\n            if (!vm.list.hasOwnProperty('$promise')) {\n                // Array was passed, so just pass the list.\n                _setCollapsed(vm.list);\n            } else {\n                vm.list.$promise.then(function(response) {\n                    // List hasn't fully loaded, so wait and pass the response.\n                    _setCollapsed(response);\n                });\n            }\n        }\n    }\n\n    // Google Analytics function to set labels to differentiate in Analytics\n    // which widget the user used to add a case or deal.\n    function googleAnalyticsEvent() {\n        if ($state.current.name === 'base.contacts.detail' && vm.title === 'Cases') {\n            ga('send', 'event', 'Case', 'Open', 'Contact Widget');\n        }\n\n        if ($state.current.name === 'base.accounts.detail' && vm.title === 'Cases') {\n            ga('send', 'event', 'Case', 'Open', 'Account Widget');\n        }\n\n        if ($state.current.name === 'base.contacts.detail' && vm.title === 'Deals') {\n            ga('send', 'event', 'Deal', 'Open', 'Contact Widget');\n        }\n\n        if ($state.current.name === 'base.accounts.detail' && vm.title === 'Deals') {\n            ga('send', 'event', 'Deal', 'Open', 'Account Widget');\n        }\n\n        if ($state.current.name === 'base.accounts.detail' && vm.title !== 'Deals' && vm.title !== 'Cases') {\n            ga('send', 'event', 'Contact', 'Open', 'Account Widget');\n        }\n\n        if ($state.current.name === 'base.contacts.detail' && vm.title !== 'Deals' && vm.title !== 'Cases') {\n            ga('send', 'event', 'Contact', 'Open', 'Contact Widget');\n        }\n    }\n\n    function _setCollapsed(items) {\n        var list;\n        var cases;\n        var deals;\n        var archivedCases;\n        var archivedDeals;\n\n        if (items.hasOwnProperty('objects')) {\n            list = items.objects;\n        } else {\n            list = items;\n        }\n\n        angular.forEach(list, function(item) {\n            item.collapsed = true;\n        });\n\n        // We want to apply a certain sorting for cases.\n        if (vm.title === 'Cases') {\n            // Separate non-archived cases and order by priority.\n            cases = $filter('filter')(list, {is_archived: false});\n            cases = $filter('orderBy')(cases, '-priority');\n\n            // Separate archived cases and order by expiry date.\n            archivedCases = $filter('filter')(list, {is_archived: true});\n            archivedCases = $filter('orderBy')(archivedCases, '-expires');\n\n            // Add archived cases to cases array.\n            cases.push.apply(cases, archivedCases);\n\n            list = cases;\n        }\n\n        // We want to apply a certain sorting for deals.\n        if (vm.title === 'Deals') {\n            // Separate non-archived deals.\n            deals = $filter('filter')(list, {is_archived: false});\n\n            // Separate archived deals.\n            archivedDeals = $filter('filter')(list, {is_archived: true});\n\n            // Add archived deals to deals array.\n            deals.push.apply(deals, archivedDeals);\n\n            list = deals;\n        }\n\n        vm.list = list;\n    }\n}\n","angular.module('app.directives').directive('markAssignedButton', markAssignedButton);\n\nfunction markAssignedButton() {\n    return {\n        restrict: 'A',\n        scope: {\n            callback: '&',\n        },\n        link: function(scope, element, attrs) {\n            element.on('click', function() {\n                // Get the closest table row.\n                element.closest('.newly-assigned').fadeOut(500, function() {\n                    // Mark the item as assigned.\n                    scope.callback();\n                });\n            });\n        },\n    };\n}\n","angular.module('app.directives').directive('onEnterKey', onEnterKey);\n\nfunction onEnterKey() {\n    return function(scope, element, attrs) {\n        element.bind('keydown keypress', function(event) {\n            if (event.which === 13) {\n                scope.$apply(function() {\n                    scope.$eval(attrs.onEnterKey);\n                });\n\n                event.preventDefault();\n            }\n        });\n    };\n}\n","angular.module('app.directives').directive('onModEnterKey', onModEnterKey);\n\nfunction onModEnterKey() {\n    return function(scope, element, attrs) {\n        element.bind('keydown keypress', function(event) {\n            if (navigator.userAgent.indexOf('Mac OS X') !== -1) {\n                if (event.which === 13 && event.metaKey) {\n                    scope.$apply(function() {\n                        scope.$eval(attrs.onModEnterKey);\n                    });\n\n                    event.preventDefault();\n                }\n            } else {\n                if (event.which === 13 && event.ctrlKey) {\n                    scope.$apply(function() {\n                        scope.$eval(attrs.onModEnterKey);\n                    });\n\n                    event.preventDefault();\n                }\n            }\n        });\n    };\n}\n","angular.module('app.directives').directive('resizeIframe', resizeIframe);\n\nfunction resizeIframe() {\n    return {\n        restrict: 'A',\n        link: function($scope, element, attrs) {\n            var maxHeight = $('body').outerHeight();\n            element.on('load', function() {\n                var ifDoc;\n                var ifRef;\n                var subtractHeights;\n                var height;\n\n                element.removeClass('hidden');\n\n                // Do this after .inbox-view is visible.\n                ifDoc = this;\n                ifRef = this;\n\n                // set ifDoc to 'document' from frame\n                try {\n                    ifDoc = ifRef.contentWindow.document.documentElement;\n                } catch (e1) {\n                    try {\n                        ifDoc = ifRef.contentDocument.documentElement;\n                    } catch (e2) {\n                        throw e2.message;\n                    }\n                }\n\n                // calculate and set max height for frame\n                if (ifDoc) {\n                    subtractHeights = [\n                        element.offset().top,\n                        $('.footer').outerHeight(),\n                        $('.inbox-attached').outerHeight(),\n                    ];\n                    for (height in subtractHeights) {\n                        maxHeight = maxHeight - height;\n                    }\n\n                    if (ifDoc.scrollHeight > maxHeight) {\n                        ifRef.height = maxHeight;\n                    } else {\n                        ifRef.height = ifDoc.scrollHeight;\n                    }\n                }\n            });\n        },\n    };\n}\n","angular.module('app.directives').directive('saveAndArchive', saveAndArchiveDirective);\n\nfunction saveAndArchiveDirective() {\n    return {\n        restrict: 'A',\n        link: function(scope, elem, attrs) {\n            // Setting button to right text based in archived state\n            var $button = $('#archive-button');\n            var $archiveField = $('#id_is_archived');\n            if ($archiveField.val() === 'True') {\n                $button.find('span').text('Save and Unarchive');\n            } else {\n                $button.find('span').text('Save and Archive');\n            }\n\n            // On button click set archived hidden field and submit form.\n            elem.on('click', function() {\n                var $form = $button.closest('form');\n                var archive = ($archiveField.val() === 'True' ? 'False' : 'True');\n                $archiveField.val(archive);\n                // Native form validation passed; set the loading text on the\n                // `Save and Archive` button.\n                if ($form.get(0).checkValidity()) {\n                    $button.button('loading');\n                }\n                $form.find(':submit').click();\n                event.preventDefault();\n            });\n        },\n    };\n}\n","/**\n * sortColumn directive adds sorting classes to an DOM element based on `table` object\n *\n * It makes the element clickable and sets the table sorting based on that element\n *\n * @param sortColumn string: name of the column to sort on when clicked\n * @param table object: The object to bind sort column and ordering\n *\n * Example:\n *\n * <th sort-column=\"last_name\" table=\"table\">Name</th>\n *\n * Possible classes:\n * - sorting: Unsorted\n * - sorting_asc: Sorted ascending\n * - sorting_desc: Sorted descending\n */\nangular.module('app.directives').directive('sortColumn', sortColumn);\n\nfunction sortColumn() {\n    /**\n     * _setSortableIcon() removes current sorting classes and adds new based on current\n     * sorting column and direction\n     *\n     * @param $scope object: current scope\n     * @param element object: current DOM element\n     * @param column string: column from current DOM element\n     */\n    var _setSortableIcon = function($scope, element, column) {\n        // Add classes based on current sorted column\n        if ($scope.table.order.column === column) {\n            if ($scope.table.order.descending) {\n                $scope.sorted = -1;\n            } else {\n                $scope.sorted = 1;\n            }\n        } else {\n            $scope.sorted = 0;\n        }\n    };\n\n    return {\n        restrict: 'A',\n        scope: {\n            table: '=',\n        },\n        transclude: true,\n        templateUrl: 'base/directives/sort_column.html',\n        link: function($scope, element, attrs) {\n            // Watch the table ordering & sorting\n            $scope.$watchCollection('table.order', function() {\n                _setSortableIcon($scope, element, attrs.sortColumn);\n            });\n\n            // When element is clicked, set the table ordering & sorting based on this DOM element\n            element.on('click', function() {\n                if ($scope.table.order.column === attrs.sortColumn) {\n                    // Toggle between the 3 states of a column:\n                    // - ascending\n                    // - descending\n                    // - no sorting\n                    if ($scope.table.order.descending) {\n                        $scope.table.order.column = '';\n                        $scope.table.order.descending = null;\n                    } else {\n                        $scope.table.order.descending = !$scope.table.order.descending;\n                    }\n\n                    $scope.$apply();\n                } else {\n                    $scope.table.order.column = attrs.sortColumn;\n                    $scope.$apply();\n                }\n            });\n        },\n    };\n}\n","angular.module('app.directives').directive('ngSpinnerBar', ngSpinnerBar);\n\nngSpinnerBar.$inject = ['$rootScope'];\nfunction ngSpinnerBar($rootScope) {\n    return {\n        link: function(scope, element, attrs) {\n            // By default hide the spinner bar.\n            element.addClass('hide');\n\n            // Display the spinner bar whenever the route changes (the content part started loading).\n            $rootScope.$on('$stateChangeStart', function() {\n                element.removeClass('hide');\n            });\n\n            // Hide the spinner bar on route change success (after the content loaded).\n            $rootScope.$on('$stateChangeSuccess', function() {\n                element.addClass('hide');\n                // Remove page loading indicator.\n                $('body').removeClass('page-on-load');\n            });\n\n            // Handle errors.\n            $rootScope.$on('$stateNotFound', function() {\n                element.addClass('hide');\n            });\n\n            $rootScope.$on('$stateChangeError', function() {\n                element.addClass('hide');\n            });\n        },\n    };\n}\n","//angular.module('app.dashboard.directives').directive('widget', widget);\nangular.module('app.directives').directive('widget', widget);\n\nfunction widget() {\n    return {\n        restrict: 'E',\n        scope: {\n            widgetName: '=',\n            widgetCloseable: '=',\n            widgetClass: '=',\n            widgetScrollable: '=',\n            widgetDynamicHeight: '=',\n        },\n        templateUrl: 'base/directives/widget.html',\n        controller: WidgetController,\n        controllerAs: 'vm',\n        bindToController: true,\n        transclude: {\n            widgetHeader: 'widgetHeader',\n            widgetFilters: '?widgetFilters',\n            widgetBody: 'widgetBody',\n        },\n    };\n}\n\nWidgetController.$inject = ['$scope', '$state', 'LocalStorage'];\nfunction WidgetController($scope, $state, LocalStorage) {\n    var vm = this;\n    var storage = new LocalStorage($state.current.name + 'widgetInfo');\n    var widgetStatus = {\n        hidden: 0,\n        visible: 1,\n        collapsed: 2,\n        expanded: 3,\n    };\n\n    vm.storageName = _getWidgetStorageName();\n\n    vm.toggleCollapse = toggleCollapse;\n    vm.removeWidget = removeWidget;\n    vm.expandToggle = expandToggle;\n\n    activate();\n\n    ////////////\n\n    function activate() {\n        // Get visibility status of the widget\n        var widgetInfo = storage.getObjectValue(vm.storageName, {});\n\n        if (typeof widgetInfo === 'object' && !Object.keys(widgetInfo).length) {\n            // No locally stored value, so set status to visible\n            widgetInfo.status = widgetStatus.visible;\n            widgetInfo.name = vm.widgetName;\n        }\n\n        vm.widgetInfo = widgetInfo;\n\n        _updateWidgetStorage();\n        _watchWidgetVisibility();\n    }\n\n    function _getWidgetStorageName() {\n        // Strip all whitespace and make the name lowercase\n        return vm.widgetName.replace(/\\s+/g, '').toLowerCase();\n    }\n\n    function _watchWidgetVisibility() {\n        // Check the status of a widget for changes and update the locally stored value\n        $scope.$watch('vm.widgetInfo.status', function() {\n            _updateWidgetStorage();\n        });\n    }\n\n    /**\n     * Stores the widget info in local storage.\n     * The widget info contains the name of the widget (used for settings)\n     * and visibility status of the widget.\n     */\n    function _updateWidgetStorage() {\n        storage.putObjectValue(vm.storageName, vm.widgetInfo);\n    }\n\n    function toggleCollapse() {\n        if (vm.widgetInfo.status === widgetStatus.visible || vm.widgetInfo.status === widgetStatus.expanded) {\n            // Check if the fade is initially set to prevent it from showing up\n            // when the widget isn't scrollable.\n            if ($scope.vm.showFade) {\n                $scope.vm.showFade = false;\n            }\n\n            vm.widgetInfo.status = widgetStatus.collapsed;\n        } else {\n            if ($scope.vm.showFade === false) {\n                $scope.vm.showFade = true;\n            }\n\n            vm.widgetInfo.status = widgetStatus.visible;\n        }\n    }\n\n    function expandToggle() {\n        if (vm.widgetInfo.status === widgetStatus.visible) {\n            vm.widgetInfo.status = widgetStatus.expanded;\n        } else {\n            vm.widgetInfo.status = widgetStatus.visible;\n        }\n    }\n\n    function removeWidget() {\n        vm.widgetInfo.status = widgetStatus.hidden;\n    }\n}\n","/**\n * Router definition.\n */\nangular.module('app.base').config(notFoundConfig);\n\nnotFoundConfig.$inject = ['$stateProvider'];\nfunction notFoundConfig($stateProvider) {\n    $stateProvider.state('base.404', {\n        url: '/not-found',\n        views: {\n            '@': {\n                templateUrl: 'base/errors/404.html',\n                controller: NotFoundController,\n                controllerAs: 'vm',\n            },\n        },\n        ncyBreadcrumb: {\n            label: 'Not found',\n        },\n    });\n}\n\nangular.module('app.base').controller('NotFoundController', NotFoundController);\n\nNotFoundController.$inject = ['Settings'];\nfunction NotFoundController(Settings) {\n    Settings.page.setAllTitles('custom', 'Not found');\n}\n","/**\n * Router definition.\n */\nangular.module('app.base').config(errorConfig);\n\nerrorConfig.$inject = ['$stateProvider'];\nfunction errorConfig($stateProvider) {\n    $stateProvider.state('base.500', {\n        url: '/error',\n        views: {\n            '@': {\n                templateUrl: 'base/errors/500.html',\n                controller: ErrorController,\n                controllerAs: 'vm',\n            },\n        },\n        ncyBreadcrumb: {\n            label: 'Error',\n        },\n    });\n}\n\nangular.module('app.base').controller('ErrorController', ErrorController);\n\nErrorController.$inject = ['Settings'];\nfunction ErrorController(Settings) {\n    Settings.page.setAllTitles('custom', 'Error');\n}\n","angular.module('app.filters').filter('currencySymbol', currencySymbol);\n\ncurrencySymbol.$inject = ['$filter'];\nfunction currencySymbol($filter) {\n    var currencySymbols = {\n        'EUR': '&#8364; ',\n        'GBP': '&#163; ',\n        'USD': '&#36; ',\n        'ZAR': '&#82; ',\n        'NOR': '&#107;&#114; ',\n        'DKK': '&#107;&#114; ',\n        'SEK': '&#107;&#114; ',\n        'CHF': '&#67;&#72;&#70; ',\n    };\n\n    return function(amount, currency) {\n        return $filter('currency')(amount, currencySymbols[currency]);\n    };\n}\n","angular.module('app.filters').filter('filterItems', filterItems);\n\nfilterItems.$inject = ['$filter'];\nfunction filterItems($filter) {\n    return function(items, existingItems) {\n        var i;\n        var out = items;\n\n        if (items && existingItems) {\n            // Filter given items based on already existing items.\n            for (i = 0; i < existingItems.length; i++) {\n                out = $filter('removeWith')(out, {id: existingItems[i].id});\n            }\n        }\n\n        return out;\n    };\n}\n","angular.module('app.filters').filter('hlTruncate', hlTruncate);\n\n/**\n * Truncate the title with a certain amount of characters based upon the window width.\n *\n * @param title {string}: String that has to be truncated\n */\nhlTruncate.$inject = ['$filter'];\nfunction hlTruncate($filter) {\n    return function(title) {\n        var filteredTitle;\n        var ellipsis;\n        // Values on which the container goes multiline and overflows the buttons.\n        if (window.outerWidth <= 1180) {\n            filteredTitle = $filter('limitTo')(title, 30);\n            ellipsis = (title.length > 30) ? '...' : '';\n        } else if (window.outerWidth <= 1596 && window.outerWidth >= 1180) {\n            filteredTitle = $filter('limitTo')(title, 50);\n            ellipsis = (title.length > 50) ? '...' : '';\n        } else {\n            filteredTitle = $filter('limitTo')(title, 100);\n            ellipsis = (title.length > 100) ? '...' : '';\n        }\n\n        return filteredTitle + ellipsis;\n    };\n}\n","/**\n * join takes the given array and joins the strings by the given delimiter (or comma if none is given).\n *\n * @param input {Array}: Array containing the strings (or objects).\n * @param field {string}: Field the string should be extracted from (if input contains objects).\n * @param delimited {string}: Character which seperates the strings.\n */\nangular.module('app.filters').filter('join', join);\n\nfunction join() {\n    return function(input, field, delimiter) {\n        var strings = [];\n        var values = input;\n\n        if (field) {\n            // Array with object was given, so iterate over the objects and extract the field.\n            angular.forEach(values, function(item) {\n                strings.push(item[field]);\n            });\n\n            values = strings;\n        }\n\n        // Join the strings array.\n        return (values || []).join(delimiter || ', ');\n    };\n}\n","angular.module('app.filters').filter('minValue', minValue);\nfunction minValue() {\n    return function(values) {\n        values.sort(function(a, b) {\n            return a - b;\n        });\n\n        return values[0];\n    };\n}\n","var Autolinker = require('autolinker');\n\n/**\n * parseUrls is a template filter to call Autolinker.\n * This is a library which automatically detects links, email addresses and\n * Twitter handles and converts them to clickable links.\n *\n * @param text {string}: Text to be converted\n *\n * @returns: string: Text containing clickable links.\n */\nangular.module('app.filters').filter('parseUrls', parseUrls);\n\nparseUrls.$inject = [];\nfunction parseUrls() {\n    return function(text) {\n        return Autolinker.link(text, {\n            replaceFn: function(match) {\n                var email;\n                switch (match.getType()) {\n                    case 'email':\n                        email = match.getEmail();\n                        return '<a href=\"#/email/compose/' + email + '/\">' + email + '</a>';\n                    default:\n                        return true;\n                }\n            },\n        });\n    };\n}\n","/*!\n * Autolinker.js\n * 1.1.1\n *\n * Copyright(c) 2016 Gregory Jacobs <greg@greg-jacobs.com>\n * MIT License\n *\n * https://github.com/gregjacobs/Autolinker.js\n */\n;(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.Autolinker = factory();\n  }\n}(this, function() {\n/**\n * @class Autolinker\n * @extends Object\n *\n * Utility class used to process a given string of text, and wrap the matches in\n * the appropriate anchor (&lt;a&gt;) tags to turn them into links.\n *\n * Any of the configuration options may be provided in an Object (map) provided\n * to the Autolinker constructor, which will configure how the {@link #link link()}\n * method will process the links.\n *\n * For example:\n *\n *     var autolinker = new Autolinker( {\n *         newWindow : false,\n *         truncate  : 30\n *     } );\n *\n *     var html = autolinker.link( \"Joe went to www.yahoo.com\" );\n *     // produces: 'Joe went to <a href=\"http://www.yahoo.com\">yahoo.com</a>'\n *\n *\n * The {@link #static-link static link()} method may also be used to inline\n * options into a single call, which may be more convenient for one-off uses.\n * For example:\n *\n *     var html = Autolinker.link( \"Joe went to www.yahoo.com\", {\n *         newWindow : false,\n *         truncate  : 30\n *     } );\n *     // produces: 'Joe went to <a href=\"http://www.yahoo.com\">yahoo.com</a>'\n *\n *\n * ## Custom Replacements of Links\n *\n * If the configuration options do not provide enough flexibility, a {@link #replaceFn}\n * may be provided to fully customize the output of Autolinker. This function is\n * called once for each URL/Email/Phone#/Hashtag/Mention (Twitter, Instagram)\n * match that is encountered.\n *\n * For example:\n *\n *     var input = \"...\";  // string with URLs, Email Addresses, Phone #s, Hashtags, and Mentions (Twitter, Instagram)\n *\n *     var linkedText = Autolinker.link( input, {\n *         replaceFn : function( match ) {\n *             console.log( \"href = \", match.getAnchorHref() );\n *             console.log( \"text = \", match.getAnchorText() );\n *\n *             switch( match.getType() ) {\n *                 case 'url' :\n *                     console.log( \"url: \", match.getUrl() );\n *\n *                     if( match.getUrl().indexOf( 'mysite.com' ) === -1 ) {\n *                         var tag = match.buildTag();  // returns an `Autolinker.HtmlTag` instance, which provides mutator methods for easy changes\n *                         tag.setAttr( 'rel', 'nofollow' );\n *                         tag.addClass( 'external-link' );\n *\n *                         return tag;\n *\n *                     } else {\n *                         return true;  // let Autolinker perform its normal anchor tag replacement\n *                     }\n *\n *                 case 'email' :\n *                     var email = match.getEmail();\n *                     console.log( \"email: \", email );\n *\n *                     if( email === \"my@own.address\" ) {\n *                         return false;  // don't auto-link this particular email address; leave as-is\n *                     } else {\n *                         return;  // no return value will have Autolinker perform its normal anchor tag replacement (same as returning `true`)\n *                     }\n *\n *                 case 'phone' :\n *                     var phoneNumber = match.getPhoneNumber();\n *                     console.log( phoneNumber );\n *\n *                     return '<a href=\"http://newplace.to.link.phone.numbers.to/\">' + phoneNumber + '</a>';\n *\n *                 case 'hashtag' :\n *                     var hashtag = match.getHashtag();\n *                     console.log( hashtag );\n *\n *                     return '<a href=\"http://newplace.to.link.hashtag.handles.to/\">' + hashtag + '</a>';\n *\n *                 case 'mention' :\n *                     var mention = match.getMention();\n *                     console.log( mention );\n *\n *                     return '<a href=\"http://newplace.to.link.mention.to/\">' + mention + '</a>';\n *             }\n *         }\n *     } );\n *\n *\n * The function may return the following values:\n *\n * - `true` (Boolean): Allow Autolinker to replace the match as it normally\n *   would.\n * - `false` (Boolean): Do not replace the current match at all - leave as-is.\n * - Any String: If a string is returned from the function, the string will be\n *   used directly as the replacement HTML for the match.\n * - An {@link Autolinker.HtmlTag} instance, which can be used to build/modify\n *   an HTML tag before writing out its HTML text.\n *\n * @constructor\n * @param {Object} [cfg] The configuration options for the Autolinker instance,\n *   specified in an Object (map).\n */\nvar Autolinker = function( cfg ) {\n\tcfg = cfg || {};\n\n\tthis.version = Autolinker.version;\n\n\tthis.urls = this.normalizeUrlsCfg( cfg.urls );\n\tthis.email = typeof cfg.email === 'boolean' ? cfg.email : true;\n\tthis.phone = typeof cfg.phone === 'boolean' ? cfg.phone : true;\n\tthis.hashtag = cfg.hashtag || false;\n\tthis.mention = cfg.mention || false;\n\tthis.newWindow = typeof cfg.newWindow === 'boolean' ? cfg.newWindow : true;\n\tthis.stripPrefix = this.normalizeStripPrefixCfg( cfg.stripPrefix );\n\tthis.stripTrailingSlash = typeof cfg.stripTrailingSlash === 'boolean' ? cfg.stripTrailingSlash : true;\n\n\t// Validate the value of the `mention` cfg\n\tvar mention = this.mention;\n\tif( mention !== false && mention !== 'twitter' && mention !== 'instagram' ) {\n\t\tthrow new Error( \"invalid `mention` cfg - see docs\" );\n\t}\n\n\t// Validate the value of the `hashtag` cfg\n\tvar hashtag = this.hashtag;\n\tif( hashtag !== false && hashtag !== 'twitter' && hashtag !== 'facebook' && hashtag !== 'instagram' ) {\n\t\tthrow new Error( \"invalid `hashtag` cfg - see docs\" );\n\t}\n\n\tthis.truncate = this.normalizeTruncateCfg( cfg.truncate );\n\tthis.className = cfg.className || '';\n\tthis.replaceFn = cfg.replaceFn || null;\n\tthis.context = cfg.context || this;\n\n\tthis.htmlParser = null;\n\tthis.matchers = null;\n\tthis.tagBuilder = null;\n};\n\n\n\n/**\n * Automatically links URLs, Email addresses, Phone Numbers, Twitter handles,\n * Hashtags, and Mentions found in the given chunk of HTML. Does not link URLs found\n * within HTML tags.\n *\n * For instance, if given the text: `You should go to http://www.yahoo.com`,\n * then the result will be `You should go to &lt;a href=\"http://www.yahoo.com\"&gt;http://www.yahoo.com&lt;/a&gt;`\n *\n * Example:\n *\n *     var linkedText = Autolinker.link( \"Go to google.com\", { newWindow: false } );\n *     // Produces: \"Go to <a href=\"http://google.com\">google.com</a>\"\n *\n * @static\n * @param {String} textOrHtml The HTML or text to find matches within (depending\n *   on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #mention},\n *   {@link #hashtag}, and {@link #mention} options are enabled).\n * @param {Object} [options] Any of the configuration options for the Autolinker\n *   class, specified in an Object (map). See the class description for an\n *   example call.\n * @return {String} The HTML text, with matches automatically linked.\n */\nAutolinker.link = function( textOrHtml, options ) {\n\tvar autolinker = new Autolinker( options );\n\treturn autolinker.link( textOrHtml );\n};\n\n\n/**\n * @static\n * @property {String} version (readonly)\n *\n * The Autolinker version number in the form major.minor.patch\n *\n * Ex: 0.25.1\n */\nAutolinker.version = '1.1.1';\n\n\nAutolinker.prototype = {\n\tconstructor : Autolinker,  // fix constructor property\n\n\t/**\n\t * @cfg {Boolean/Object} [urls]\n\t *\n\t * `true` if URLs should be automatically linked, `false` if they should not\n\t * be. Defaults to `true`.\n\t *\n\t * Examples:\n\t *\n\t *     urls: true\n\t *\n\t *     // or\n\t *\n\t *     urls: {\n\t *         schemeMatches : true,\n\t *         wwwMatches    : true,\n\t *         tldMatches    : true\n\t *     }\n\t *\n\t * As shown above, this option also accepts an Object form with 3 properties\n\t * to allow for more customization of what exactly gets linked. All default\n\t * to `true`:\n\t *\n\t * @cfg {Boolean} [urls.schemeMatches] `true` to match URLs found prefixed\n\t *   with a scheme, i.e. `http://google.com`, or `other+scheme://google.com`,\n\t *   `false` to prevent these types of matches.\n\t * @cfg {Boolean} [urls.wwwMatches] `true` to match urls found prefixed with\n\t *   `'www.'`, i.e. `www.google.com`. `false` to prevent these types of\n\t *   matches. Note that if the URL had a prefixed scheme, and\n\t *   `schemeMatches` is true, it will still be linked.\n\t * @cfg {Boolean} [urls.tldMatches] `true` to match URLs with known top\n\t *   level domains (.com, .net, etc.) that are not prefixed with a scheme or\n\t *   `'www.'`. This option attempts to match anything that looks like a URL\n\t *   in the given text. Ex: `google.com`, `asdf.org/?page=1`, etc. `false`\n\t *   to prevent these types of matches.\n\t */\n\n\t/**\n\t * @cfg {Boolean} [email=true]\n\t *\n\t * `true` if email addresses should be automatically linked, `false` if they\n\t * should not be.\n\t */\n\n\t/**\n\t * @cfg {Boolean} [phone=true]\n\t *\n\t * `true` if Phone numbers (\"(555)555-5555\") should be automatically linked,\n\t * `false` if they should not be.\n\t */\n\n\t/**\n\t * @cfg {Boolean/String} [hashtag=false]\n\t *\n\t * A string for the service name to have hashtags (ex: \"#myHashtag\")\n\t * auto-linked to. The currently-supported values are:\n\t *\n\t * - 'twitter'\n\t * - 'facebook'\n\t * - 'instagram'\n\t *\n\t * Pass `false` to skip auto-linking of hashtags.\n\t */\n\n\t/**\n\t * @cfg {String/Boolean} [mention=false]\n\t *\n\t * A string for the service name to have mentions (ex: \"@myuser\")\n\t * auto-linked to. The currently supported values are:\n\t *\n\t * - 'twitter'\n\t * - 'instagram'\n\t *\n\t * Defaults to `false` to skip auto-linking of mentions.\n\t */\n\n\t/**\n\t * @cfg {Boolean} [newWindow=true]\n\t *\n\t * `true` if the links should open in a new window, `false` otherwise.\n\t */\n\n\t/**\n\t * @cfg {Boolean/Object} [stripPrefix]\n\t *\n\t * `true` if 'http://' (or 'https://') and/or the 'www.' should be stripped\n\t * from the beginning of URL links' text, `false` otherwise. Defaults to\n\t * `true`.\n\t *\n\t * Examples:\n\t *\n\t *     stripPrefix: true\n\t *\n\t *     // or\n\t *\n\t *     stripPrefix: {\n\t *         scheme : true,\n\t *         www    : true\n\t *     }\n\t *\n\t * As shown above, this option also accepts an Object form with 2 properties\n\t * to allow for more customization of what exactly is prevented from being\n\t * displayed. Both default to `true`:\n\t *\n\t * @cfg {Boolean} [stripPrefix.scheme] `true` to prevent the scheme part of\n\t *   a URL match from being displayed to the user. Example:\n\t *   `'http://google.com'` will be displayed as `'google.com'`. `false` to\n\t *   not strip the scheme. NOTE: Only an `'http://'` or `'https://'` scheme\n\t *   will be removed, so as not to remove a potentially dangerous scheme\n\t *   (such as `'file://'` or `'javascript:'`)\n\t * @cfg {Boolean} [stripPrefix.www] www (Boolean): `true` to prevent the\n\t *   `'www.'` part of a URL match from being displayed to the user. Ex:\n\t *   `'www.google.com'` will be displayed as `'google.com'`. `false` to not\n\t *   strip the `'www'`.\n\t */\n\n\t/**\n\t * @cfg {Boolean} [stripTrailingSlash=true]\n\t *\n\t * `true` to remove the trailing slash from URL matches, `false` to keep\n\t *  the trailing slash.\n\t *\n\t *  Example when `true`: `http://google.com/` will be displayed as\n\t *  `http://google.com`.\n\t */\n\n\t/**\n\t * @cfg {Number/Object} [truncate=0]\n\t *\n\t * ## Number Form\n\t *\n\t * A number for how many characters matched text should be truncated to\n\t * inside the text of a link. If the matched text is over this number of\n\t * characters, it will be truncated to this length by adding a two period\n\t * ellipsis ('..') to the end of the string.\n\t *\n\t * For example: A url like 'http://www.yahoo.com/some/long/path/to/a/file'\n\t * truncated to 25 characters might look something like this:\n\t * 'yahoo.com/some/long/pat..'\n\t *\n\t * Example Usage:\n\t *\n\t *     truncate: 25\n\t *\n\t *\n\t *  Defaults to `0` for \"no truncation.\"\n\t *\n\t *\n\t * ## Object Form\n\t *\n\t * An Object may also be provided with two properties: `length` (Number) and\n\t * `location` (String). `location` may be one of the following: 'end'\n\t * (default), 'middle', or 'smart'.\n\t *\n\t * Example Usage:\n\t *\n\t *     truncate: { length: 25, location: 'middle' }\n\t *\n\t * @cfg {Number} [truncate.length=0] How many characters to allow before\n\t *   truncation will occur. Defaults to `0` for \"no truncation.\"\n\t * @cfg {\"end\"/\"middle\"/\"smart\"} [truncate.location=\"end\"]\n\t *\n\t * - 'end' (default): will truncate up to the number of characters, and then\n\t *   add an ellipsis at the end. Ex: 'yahoo.com/some/long/pat..'\n\t * - 'middle': will truncate and add the ellipsis in the middle. Ex:\n\t *   'yahoo.com/s..th/to/a/file'\n\t * - 'smart': for URLs where the algorithm attempts to strip out unnecessary\n\t *   parts first (such as the 'www.', then URL scheme, hash, etc.),\n\t *   attempting to make the URL human-readable before looking for a good\n\t *   point to insert the ellipsis if it is still too long. Ex:\n\t *   'yahoo.com/some..to/a/file'. For more details, see\n\t *   {@link Autolinker.truncate.TruncateSmart}.\n\t */\n\n\t/**\n\t * @cfg {String} className\n\t *\n\t * A CSS class name to add to the generated links. This class will be added\n\t * to all links, as well as this class plus match suffixes for styling\n\t * url/email/phone/hashtag/mention links differently.\n\t *\n\t * For example, if this config is provided as \"myLink\", then:\n\t *\n\t * - URL links will have the CSS classes: \"myLink myLink-url\"\n\t * - Email links will have the CSS classes: \"myLink myLink-email\", and\n\t * - Phone links will have the CSS classes: \"myLink myLink-phone\"\n\t * - Hashtag links will have the CSS classes: \"myLink myLink-hashtag\"\n\t * - Mention links will have the CSS classes: \"myLink myLink-mention myLink-[type]\"\n\t *   where [type] is either \"instagram\" or \"twitter\"\n\t */\n\n\t/**\n\t * @cfg {Function} replaceFn\n\t *\n\t * A function to individually process each match found in the input string.\n\t *\n\t * See the class's description for usage.\n\t *\n\t * The `replaceFn` can be called with a different context object (`this`\n\t * reference) using the {@link #context} cfg.\n\t *\n\t * This function is called with the following parameter:\n\t *\n\t * @cfg {Autolinker.match.Match} replaceFn.match The Match instance which\n\t *   can be used to retrieve information about the match that the `replaceFn`\n\t *   is currently processing. See {@link Autolinker.match.Match} subclasses\n\t *   for details.\n\t */\n\n\t/**\n\t * @cfg {Object} context\n\t *\n\t * The context object (`this` reference) to call the `replaceFn` with.\n\t *\n\t * Defaults to this Autolinker instance.\n\t */\n\n\n\t/**\n\t * @property {String} version (readonly)\n\t *\n\t * The Autolinker version number in the form major.minor.patch\n\t *\n\t * Ex: 0.25.1\n\t */\n\n\t/**\n\t * @private\n\t * @property {Autolinker.htmlParser.HtmlParser} htmlParser\n\t *\n\t * The HtmlParser instance used to skip over HTML tags, while finding text\n\t * nodes to process. This is lazily instantiated in the {@link #getHtmlParser}\n\t * method.\n\t */\n\n\t/**\n\t * @private\n\t * @property {Autolinker.matcher.Matcher[]} matchers\n\t *\n\t * The {@link Autolinker.matcher.Matcher} instances for this Autolinker\n\t * instance.\n\t *\n\t * This is lazily created in {@link #getMatchers}.\n\t */\n\n\t/**\n\t * @private\n\t * @property {Autolinker.AnchorTagBuilder} tagBuilder\n\t *\n\t * The AnchorTagBuilder instance used to build match replacement anchor tags.\n\t * Note: this is lazily instantiated in the {@link #getTagBuilder} method.\n\t */\n\n\n\t/**\n\t * Normalizes the {@link #urls} config into an Object with 3 properties:\n\t * `schemeMatches`, `wwwMatches`, and `tldMatches`, all Booleans.\n\t *\n\t * See {@link #urls} config for details.\n\t *\n\t * @private\n\t * @param {Boolean/Object} urls\n\t * @return {Object}\n\t */\n\tnormalizeUrlsCfg : function( urls ) {\n\t\tif( urls == null ) urls = true;  // default to `true`\n\n\t\tif( typeof urls === 'boolean' ) {\n\t\t\treturn { schemeMatches: urls, wwwMatches: urls, tldMatches: urls };\n\n\t\t} else {  // object form\n\t\t\treturn {\n\t\t\t\tschemeMatches : typeof urls.schemeMatches === 'boolean' ? urls.schemeMatches : true,\n\t\t\t\twwwMatches    : typeof urls.wwwMatches === 'boolean'    ? urls.wwwMatches    : true,\n\t\t\t\ttldMatches    : typeof urls.tldMatches === 'boolean'    ? urls.tldMatches    : true\n\t\t\t};\n\t\t}\n\t},\n\n\n\t/**\n\t * Normalizes the {@link #stripPrefix} config into an Object with 2\n\t * properties: `scheme`, and `www` - both Booleans.\n\t *\n\t * See {@link #stripPrefix} config for details.\n\t *\n\t * @private\n\t * @param {Boolean/Object} stripPrefix\n\t * @return {Object}\n\t */\n\tnormalizeStripPrefixCfg : function( stripPrefix ) {\n\t\tif( stripPrefix == null ) stripPrefix = true;  // default to `true`\n\n\t\tif( typeof stripPrefix === 'boolean' ) {\n\t\t\treturn { scheme: stripPrefix, www: stripPrefix };\n\n\t\t} else {  // object form\n\t\t\treturn {\n\t\t\t\tscheme : typeof stripPrefix.scheme === 'boolean' ? stripPrefix.scheme : true,\n\t\t\t\twww    : typeof stripPrefix.www === 'boolean'    ? stripPrefix.www    : true\n\t\t\t};\n\t\t}\n\t},\n\n\n\t/**\n\t * Normalizes the {@link #truncate} config into an Object with 2 properties:\n\t * `length` (Number), and `location` (String).\n\t *\n\t * See {@link #truncate} config for details.\n\t *\n\t * @private\n\t * @param {Number/Object} truncate\n\t * @return {Object}\n\t */\n\tnormalizeTruncateCfg : function( truncate ) {\n\t\tif( typeof truncate === 'number' ) {\n\t\t\treturn { length: truncate, location: 'end' };\n\n\t\t} else {  // object, or undefined/null\n\t\t\treturn Autolinker.Util.defaults( truncate || {}, {\n\t\t\t\tlength   : Number.POSITIVE_INFINITY,\n\t\t\t\tlocation : 'end'\n\t\t\t} );\n\t\t}\n\t},\n\n\n\t/**\n\t * Parses the input `textOrHtml` looking for URLs, email addresses, phone\n\t * numbers, username handles, and hashtags (depending on the configuration\n\t * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}\n\t * objects describing those matches.\n\t *\n\t * This method is used by the {@link #link} method, but can also be used to\n\t * simply do parsing of the input in order to discover what kinds of links\n\t * there are and how many.\n\t *\n\t * @param {String} textOrHtml The HTML or text to find matches within\n\t *   (depending on if the {@link #urls}, {@link #email}, {@link #phone},\n\t *   {@link #hashtag}, and {@link #mention} options are enabled).\n\t * @return {Autolinker.match.Match[]} The array of Matches found in the\n\t *   given input `textOrHtml`.\n\t */\n\tparse : function( textOrHtml ) {\n\t\tvar htmlParser = this.getHtmlParser(),\n\t\t    htmlNodes = htmlParser.parse( textOrHtml ),\n\t\t    anchorTagStackCount = 0,  // used to only process text around anchor tags, and any inner text/html they may have;\n\t\t    matches = [];\n\n\t\t// Find all matches within the `textOrHtml` (but not matches that are\n\t\t// already nested within <a> tags)\n\t\tfor( var i = 0, len = htmlNodes.length; i < len; i++ ) {\n\t\t\tvar node = htmlNodes[ i ],\n\t\t\t    nodeType = node.getType();\n\n\t\t\tif( nodeType === 'element' && node.getTagName() === 'a' ) {  // Process HTML anchor element nodes in the input `textOrHtml` to find out when we're within an <a> tag\n\t\t\t\tif( !node.isClosing() ) {  // it's the start <a> tag\n\t\t\t\t\tanchorTagStackCount++;\n\t\t\t\t} else {  // it's the end </a> tag\n\t\t\t\t\tanchorTagStackCount = Math.max( anchorTagStackCount - 1, 0 );  // attempt to handle extraneous </a> tags by making sure the stack count never goes below 0\n\t\t\t\t}\n\n\t\t\t} else if( nodeType === 'text' && anchorTagStackCount === 0 ) {  // Process text nodes that are not within an <a> tag\n\t\t\t\tvar textNodeMatches = this.parseText( node.getText(), node.getOffset() );\n\n\t\t\t\tmatches.push.apply( matches, textNodeMatches );\n\t\t\t}\n\t\t}\n\n\n\t\t// After we have found all matches, remove subsequent matches that\n\t\t// overlap with a previous match. This can happen for instance with URLs,\n\t\t// where the url 'google.com/#link' would match '#link' as a hashtag.\n\t\tmatches = this.compactMatches( matches );\n\n\t\t// And finally, remove matches for match types that have been turned\n\t\t// off. We needed to have all match types turned on initially so that\n\t\t// things like hashtags could be filtered out if they were really just\n\t\t// part of a URL match (for instance, as a named anchor).\n\t\tmatches = this.removeUnwantedMatches( matches );\n\n\t\treturn matches;\n\t},\n\n\n\t/**\n\t * After we have found all matches, we need to remove subsequent matches\n\t * that overlap with a previous match. This can happen for instance with\n\t * URLs, where the url 'google.com/#link' would match '#link' as a hashtag.\n\t *\n\t * @private\n\t * @param {Autolinker.match.Match[]} matches\n\t * @return {Autolinker.match.Match[]}\n\t */\n\tcompactMatches : function( matches ) {\n\t\t// First, the matches need to be sorted in order of offset\n\t\tmatches.sort( function( a, b ) { return a.getOffset() - b.getOffset(); } );\n\n\t\tfor( var i = 0; i < matches.length - 1; i++ ) {\n\t\t\tvar match = matches[ i ],\n\t\t\t    endIdx = match.getOffset() + match.getMatchedText().length;\n\n\t\t\t// Remove subsequent matches that overlap with the current match\n\t\t\twhile( i + 1 < matches.length && matches[ i + 1 ].getOffset() <= endIdx ) {\n\t\t\t\tmatches.splice( i + 1, 1 );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\n\t/**\n\t * Removes matches for matchers that were turned off in the options. For\n\t * example, if {@link #hashtag hashtags} were not to be matched, we'll\n\t * remove them from the `matches` array here.\n\t *\n\t * @private\n\t * @param {Autolinker.match.Match[]} matches The array of matches to remove\n\t *   the unwanted matches from. Note: this array is mutated for the\n\t *   removals.\n\t * @return {Autolinker.match.Match[]} The mutated input `matches` array.\n\t */\n\tremoveUnwantedMatches : function( matches ) {\n\t\tvar remove = Autolinker.Util.remove;\n\n\t\tif( !this.hashtag ) remove( matches, function( match ) { return match.getType() === 'hashtag'; } );\n\t\tif( !this.email )   remove( matches, function( match ) { return match.getType() === 'email'; } );\n\t\tif( !this.phone )   remove( matches, function( match ) { return match.getType() === 'phone'; } );\n\t\tif( !this.mention ) remove( matches, function( match ) { return match.getType() === 'mention'; } );\n\t\tif( !this.urls.schemeMatches ) {\n\t\t\tremove( matches, function( m ) { return m.getType() === 'url' && m.getUrlMatchType() === 'scheme'; } );\n\t\t}\n\t\tif( !this.urls.wwwMatches ) {\n\t\t\tremove( matches, function( m ) { return m.getType() === 'url' && m.getUrlMatchType() === 'www'; } );\n\t\t}\n\t\tif( !this.urls.tldMatches ) {\n\t\t\tremove( matches, function( m ) { return m.getType() === 'url' && m.getUrlMatchType() === 'tld'; } );\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\n\t/**\n\t * Parses the input `text` looking for URLs, email addresses, phone\n\t * numbers, username handles, and hashtags (depending on the configuration\n\t * of the Autolinker instance), and returns an array of {@link Autolinker.match.Match}\n\t * objects describing those matches.\n\t *\n\t * This method processes a **non-HTML string**, and is used to parse and\n\t * match within the text nodes of an HTML string. This method is used\n\t * internally by {@link #parse}.\n\t *\n\t * @private\n\t * @param {String} text The text to find matches within (depending on if the\n\t *   {@link #urls}, {@link #email}, {@link #phone},\n\t *   {@link #hashtag}, and {@link #mention} options are enabled). This must be a non-HTML string.\n\t * @param {Number} [offset=0] The offset of the text node within the\n\t *   original string. This is used when parsing with the {@link #parse}\n\t *   method to generate correct offsets within the {@link Autolinker.match.Match}\n\t *   instances, but may be omitted if calling this method publicly.\n\t * @return {Autolinker.match.Match[]} The array of Matches found in the\n\t *   given input `text`.\n\t */\n\tparseText : function( text, offset ) {\n\t\toffset = offset || 0;\n\t\tvar matchers = this.getMatchers(),\n\t\t    matches = [];\n\n\t\tfor( var i = 0, numMatchers = matchers.length; i < numMatchers; i++ ) {\n\t\t\tvar textMatches = matchers[ i ].parseMatches( text );\n\n\t\t\t// Correct the offset of each of the matches. They are originally\n\t\t\t// the offset of the match within the provided text node, but we\n\t\t\t// need to correct them to be relative to the original HTML input\n\t\t\t// string (i.e. the one provided to #parse).\n\t\t\tfor( var j = 0, numTextMatches = textMatches.length; j < numTextMatches; j++ ) {\n\t\t\t\ttextMatches[ j ].setOffset( offset + textMatches[ j ].getOffset() );\n\t\t\t}\n\n\t\t\tmatches.push.apply( matches, textMatches );\n\t\t}\n\t\treturn matches;\n\t},\n\n\n\t/**\n\t * Automatically links URLs, Email addresses, Phone numbers, Hashtags,\n\t * and Mentions (Twitter, Instagram) found in the given chunk of HTML. Does not link\n\t * URLs found within HTML tags.\n\t *\n\t * For instance, if given the text: `You should go to http://www.yahoo.com`,\n\t * then the result will be `You should go to\n\t * &lt;a href=\"http://www.yahoo.com\"&gt;http://www.yahoo.com&lt;/a&gt;`\n\t *\n\t * This method finds the text around any HTML elements in the input\n\t * `textOrHtml`, which will be the text that is processed. Any original HTML\n\t * elements will be left as-is, as well as the text that is already wrapped\n\t * in anchor (&lt;a&gt;) tags.\n\t *\n\t * @param {String} textOrHtml The HTML or text to autolink matches within\n\t *   (depending on if the {@link #urls}, {@link #email}, {@link #phone}, {@link #hashtag}, and {@link #mention} options are enabled).\n\t * @return {String} The HTML, with matches automatically linked.\n\t */\n\tlink : function( textOrHtml ) {\n\t\tif( !textOrHtml ) { return \"\"; }  // handle `null` and `undefined`\n\n\t\tvar matches = this.parse( textOrHtml ),\n\t\t\tnewHtml = [],\n\t\t\tlastIndex = 0;\n\n\t\tfor( var i = 0, len = matches.length; i < len; i++ ) {\n\t\t\tvar match = matches[ i ];\n\n\t\t\tnewHtml.push( textOrHtml.substring( lastIndex, match.getOffset() ) );\n\t\t\tnewHtml.push( this.createMatchReturnVal( match ) );\n\n\t\t\tlastIndex = match.getOffset() + match.getMatchedText().length;\n\t\t}\n\t\tnewHtml.push( textOrHtml.substring( lastIndex ) );  // handle the text after the last match\n\n\t\treturn newHtml.join( '' );\n\t},\n\n\n\t/**\n\t * Creates the return string value for a given match in the input string.\n\t *\n\t * This method handles the {@link #replaceFn}, if one was provided.\n\t *\n\t * @private\n\t * @param {Autolinker.match.Match} match The Match object that represents\n\t *   the match.\n\t * @return {String} The string that the `match` should be replaced with.\n\t *   This is usually the anchor tag string, but may be the `matchStr` itself\n\t *   if the match is not to be replaced.\n\t */\n\tcreateMatchReturnVal : function( match ) {\n\t\t// Handle a custom `replaceFn` being provided\n\t\tvar replaceFnResult;\n\t\tif( this.replaceFn ) {\n\t\t\treplaceFnResult = this.replaceFn.call( this.context, match );  // Autolinker instance is the context\n\t\t}\n\n\t\tif( typeof replaceFnResult === 'string' ) {\n\t\t\treturn replaceFnResult;  // `replaceFn` returned a string, use that\n\n\t\t} else if( replaceFnResult === false ) {\n\t\t\treturn match.getMatchedText();  // no replacement for the match\n\n\t\t} else if( replaceFnResult instanceof Autolinker.HtmlTag ) {\n\t\t\treturn replaceFnResult.toAnchorString();\n\n\t\t} else {  // replaceFnResult === true, or no/unknown return value from function\n\t\t\t// Perform Autolinker's default anchor tag generation\n\t\t\tvar anchorTag = match.buildTag();  // returns an Autolinker.HtmlTag instance\n\n\t\t\treturn anchorTag.toAnchorString();\n\t\t}\n\t},\n\n\n\t/**\n\t * Lazily instantiates and returns the {@link #htmlParser} instance for this\n\t * Autolinker instance.\n\t *\n\t * @protected\n\t * @return {Autolinker.htmlParser.HtmlParser}\n\t */\n\tgetHtmlParser : function() {\n\t\tvar htmlParser = this.htmlParser;\n\n\t\tif( !htmlParser ) {\n\t\t\thtmlParser = this.htmlParser = new Autolinker.htmlParser.HtmlParser();\n\t\t}\n\n\t\treturn htmlParser;\n\t},\n\n\n\t/**\n\t * Lazily instantiates and returns the {@link Autolinker.matcher.Matcher}\n\t * instances for this Autolinker instance.\n\t *\n\t * @protected\n\t * @return {Autolinker.matcher.Matcher[]}\n\t */\n\tgetMatchers : function() {\n\t\tif( !this.matchers ) {\n\t\t\tvar matchersNs = Autolinker.matcher,\n\t\t\t    tagBuilder = this.getTagBuilder();\n\n\t\t\tvar matchers = [\n\t\t\t\tnew matchersNs.Hashtag( { tagBuilder: tagBuilder, serviceName: this.hashtag } ),\n\t\t\t\tnew matchersNs.Email( { tagBuilder: tagBuilder } ),\n\t\t\t\tnew matchersNs.Phone( { tagBuilder: tagBuilder } ),\n\t\t\t\tnew matchersNs.Mention( { tagBuilder: tagBuilder, serviceName: this.mention } ),\n\t\t\t\tnew matchersNs.Url( { tagBuilder: tagBuilder, stripPrefix: this.stripPrefix, stripTrailingSlash: this.stripTrailingSlash } )\n\t\t\t];\n\n\t\t\treturn ( this.matchers = matchers );\n\n\t\t} else {\n\t\t\treturn this.matchers;\n\t\t}\n\t},\n\n\n\t/**\n\t * Returns the {@link #tagBuilder} instance for this Autolinker instance, lazily instantiating it\n\t * if it does not yet exist.\n\t *\n\t * This method may be used in a {@link #replaceFn} to generate the {@link Autolinker.HtmlTag HtmlTag} instance that\n\t * Autolinker would normally generate, and then allow for modifications before returning it. For example:\n\t *\n\t *     var html = Autolinker.link( \"Test google.com\", {\n\t *         replaceFn : function( match ) {\n\t *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance\n\t *             tag.setAttr( 'rel', 'nofollow' );\n\t *\n\t *             return tag;\n\t *         }\n\t *     } );\n\t *\n\t *     // generated html:\n\t *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n\t *\n\t * @return {Autolinker.AnchorTagBuilder}\n\t */\n\tgetTagBuilder : function() {\n\t\tvar tagBuilder = this.tagBuilder;\n\n\t\tif( !tagBuilder ) {\n\t\t\ttagBuilder = this.tagBuilder = new Autolinker.AnchorTagBuilder( {\n\t\t\t\tnewWindow   : this.newWindow,\n\t\t\t\ttruncate    : this.truncate,\n\t\t\t\tclassName   : this.className\n\t\t\t} );\n\t\t}\n\n\t\treturn tagBuilder;\n\t}\n\n};\n\n\n// Autolinker Namespaces\n\nAutolinker.match = {};\nAutolinker.matcher = {};\nAutolinker.htmlParser = {};\nAutolinker.truncate = {};\n\n/*global Autolinker */\n/*jshint eqnull:true, boss:true */\n/**\n * @class Autolinker.Util\n * @singleton\n *\n * A few utility methods for Autolinker.\n */\nAutolinker.Util = {\n\n\t/**\n\t * @property {Function} abstractMethod\n\t *\n\t * A function object which represents an abstract method.\n\t */\n\tabstractMethod : function() { throw \"abstract\"; },\n\n\n\t/**\n\t * @private\n\t * @property {RegExp} trimRegex\n\t *\n\t * The regular expression used to trim the leading and trailing whitespace\n\t * from a string.\n\t */\n\ttrimRegex : /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\n\t/**\n\t * Assigns (shallow copies) the properties of `src` onto `dest`.\n\t *\n\t * @param {Object} dest The destination object.\n\t * @param {Object} src The source object.\n\t * @return {Object} The destination object (`dest`)\n\t */\n\tassign : function( dest, src ) {\n\t\tfor( var prop in src ) {\n\t\t\tif( src.hasOwnProperty( prop ) ) {\n\t\t\t\tdest[ prop ] = src[ prop ];\n\t\t\t}\n\t\t}\n\n\t\treturn dest;\n\t},\n\n\n\t/**\n\t * Assigns (shallow copies) the properties of `src` onto `dest`, if the\n\t * corresponding property on `dest` === `undefined`.\n\t *\n\t * @param {Object} dest The destination object.\n\t * @param {Object} src The source object.\n\t * @return {Object} The destination object (`dest`)\n\t */\n\tdefaults : function( dest, src ) {\n\t\tfor( var prop in src ) {\n\t\t\tif( src.hasOwnProperty( prop ) && dest[ prop ] === undefined ) {\n\t\t\t\tdest[ prop ] = src[ prop ];\n\t\t\t}\n\t\t}\n\n\t\treturn dest;\n\t},\n\n\n\t/**\n\t * Extends `superclass` to create a new subclass, adding the `protoProps` to the new subclass's prototype.\n\t *\n\t * @param {Function} superclass The constructor function for the superclass.\n\t * @param {Object} protoProps The methods/properties to add to the subclass's prototype. This may contain the\n\t *   special property `constructor`, which will be used as the new subclass's constructor function.\n\t * @return {Function} The new subclass function.\n\t */\n\textend : function( superclass, protoProps ) {\n\t\tvar superclassProto = superclass.prototype;\n\n\t\tvar F = function() {};\n\t\tF.prototype = superclassProto;\n\n\t\tvar subclass;\n\t\tif( protoProps.hasOwnProperty( 'constructor' ) ) {\n\t\t\tsubclass = protoProps.constructor;\n\t\t} else {\n\t\t\tsubclass = function() { superclassProto.constructor.apply( this, arguments ); };\n\t\t}\n\n\t\tvar subclassProto = subclass.prototype = new F();  // set up prototype chain\n\t\tsubclassProto.constructor = subclass;  // fix constructor property\n\t\tsubclassProto.superclass = superclassProto;\n\n\t\tdelete protoProps.constructor;  // don't re-assign constructor property to the prototype, since a new function may have been created (`subclass`), which is now already there\n\t\tAutolinker.Util.assign( subclassProto, protoProps );\n\n\t\treturn subclass;\n\t},\n\n\n\t/**\n\t * Truncates the `str` at `len - ellipsisChars.length`, and adds the `ellipsisChars` to the\n\t * end of the string (by default, two periods: '..'). If the `str` length does not exceed\n\t * `len`, the string will be returned unchanged.\n\t *\n\t * @param {String} str The string to truncate and add an ellipsis to.\n\t * @param {Number} truncateLen The length to truncate the string at.\n\t * @param {String} [ellipsisChars=..] The ellipsis character(s) to add to the end of `str`\n\t *   when truncated. Defaults to '..'\n\t */\n\tellipsis : function( str, truncateLen, ellipsisChars ) {\n\t\tif( str.length > truncateLen ) {\n\t\t\tellipsisChars = ( ellipsisChars == null ) ? '..' : ellipsisChars;\n\t\t\tstr = str.substring( 0, truncateLen - ellipsisChars.length ) + ellipsisChars;\n\t\t}\n\t\treturn str;\n\t},\n\n\n\t/**\n\t * Supports `Array.prototype.indexOf()` functionality for old IE (IE8 and below).\n\t *\n\t * @param {Array} arr The array to find an element of.\n\t * @param {*} element The element to find in the array, and return the index of.\n\t * @return {Number} The index of the `element`, or -1 if it was not found.\n\t */\n\tindexOf : function( arr, element ) {\n\t\tif( Array.prototype.indexOf ) {\n\t\t\treturn arr.indexOf( element );\n\n\t\t} else {\n\t\t\tfor( var i = 0, len = arr.length; i < len; i++ ) {\n\t\t\t\tif( arr[ i ] === element ) return i;\n\t\t\t}\n\t\t\treturn -1;\n\t\t}\n\t},\n\n\n\t/**\n\t * Removes array elements based on a filtering function. Mutates the input\n\t * array.\n\t *\n\t * Using this instead of the ES5 Array.prototype.filter() function, to allow\n\t * Autolinker compatibility with IE8, and also to prevent creating many new\n\t * arrays in memory for filtering.\n\t *\n\t * @param {Array} arr The array to remove elements from. This array is\n\t *   mutated.\n\t * @param {Function} fn A function which should return `true` to\n\t *   remove an element.\n\t * @return {Array} The mutated input `arr`.\n\t */\n\tremove : function( arr, fn ) {\n\t\tfor( var i = arr.length - 1; i >= 0; i-- ) {\n\t\t\tif( fn( arr[ i ] ) === true ) {\n\t\t\t\tarr.splice( i, 1 );\n\t\t\t}\n\t\t}\n\t},\n\n\n\t/**\n\t * Performs the functionality of what modern browsers do when `String.prototype.split()` is called\n\t * with a regular expression that contains capturing parenthesis.\n\t *\n\t * For example:\n\t *\n\t *     // Modern browsers:\n\t *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', ',', 'b', ',', 'c' ]\n\t *\n\t *     // Old IE (including IE8):\n\t *     \"a,b,c\".split( /(,)/ );  // --> [ 'a', 'b', 'c' ]\n\t *\n\t * This method emulates the functionality of modern browsers for the old IE case.\n\t *\n\t * @param {String} str The string to split.\n\t * @param {RegExp} splitRegex The regular expression to split the input `str` on. The splitting\n\t *   character(s) will be spliced into the array, as in the \"modern browsers\" example in the\n\t *   description of this method.\n\t *   Note #1: the supplied regular expression **must** have the 'g' flag specified.\n\t *   Note #2: for simplicity's sake, the regular expression does not need\n\t *   to contain capturing parenthesis - it will be assumed that any match has them.\n\t * @return {String[]} The split array of strings, with the splitting character(s) included.\n\t */\n\tsplitAndCapture : function( str, splitRegex ) {\n\t\tif( !splitRegex.global ) throw new Error( \"`splitRegex` must have the 'g' flag set\" );\n\n\t\tvar result = [],\n\t\t    lastIdx = 0,\n\t\t    match;\n\n\t\twhile( match = splitRegex.exec( str ) ) {\n\t\t\tresult.push( str.substring( lastIdx, match.index ) );\n\t\t\tresult.push( match[ 0 ] );  // push the splitting char(s)\n\n\t\t\tlastIdx = match.index + match[ 0 ].length;\n\t\t}\n\t\tresult.push( str.substring( lastIdx ) );\n\n\t\treturn result;\n\t},\n\n\n\t/**\n\t * Trims the leading and trailing whitespace from a string.\n\t *\n\t * @param {String} str The string to trim.\n\t * @return {String}\n\t */\n\ttrim : function( str ) {\n\t\treturn str.replace( this.trimRegex, '' );\n\t}\n\n};\n/*global Autolinker */\n/*jshint boss:true */\n/**\n * @class Autolinker.HtmlTag\n * @extends Object\n *\n * Represents an HTML tag, which can be used to easily build/modify HTML tags programmatically.\n *\n * Autolinker uses this abstraction to create HTML tags, and then write them out as strings. You may also use\n * this class in your code, especially within a {@link Autolinker#replaceFn replaceFn}.\n *\n * ## Examples\n *\n * Example instantiation:\n *\n *     var tag = new Autolinker.HtmlTag( {\n *         tagName : 'a',\n *         attrs   : { 'href': 'http://google.com', 'class': 'external-link' },\n *         innerHtml : 'Google'\n *     } );\n *\n *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"external-link\">Google</a>\n *\n *     // Individual accessor methods\n *     tag.getTagName();                 // 'a'\n *     tag.getAttr( 'href' );            // 'http://google.com'\n *     tag.hasClass( 'external-link' );  // true\n *\n *\n * Using mutator methods (which may be used in combination with instantiation config properties):\n *\n *     var tag = new Autolinker.HtmlTag();\n *     tag.setTagName( 'a' );\n *     tag.setAttr( 'href', 'http://google.com' );\n *     tag.addClass( 'external-link' );\n *     tag.setInnerHtml( 'Google' );\n *\n *     tag.getTagName();                 // 'a'\n *     tag.getAttr( 'href' );            // 'http://google.com'\n *     tag.hasClass( 'external-link' );  // true\n *\n *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"external-link\">Google</a>\n *\n *\n * ## Example use within a {@link Autolinker#replaceFn replaceFn}\n *\n *     var html = Autolinker.link( \"Test google.com\", {\n *         replaceFn : function( match ) {\n *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance, configured with the Match's href and anchor text\n *             tag.setAttr( 'rel', 'nofollow' );\n *\n *             return tag;\n *         }\n *     } );\n *\n *     // generated html:\n *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n *\n *\n * ## Example use with a new tag for the replacement\n *\n *     var html = Autolinker.link( \"Test google.com\", {\n *         replaceFn : function( match ) {\n *             var tag = new Autolinker.HtmlTag( {\n *                 tagName : 'button',\n *                 attrs   : { 'title': 'Load URL: ' + match.getAnchorHref() },\n *                 innerHtml : 'Load URL: ' + match.getAnchorText()\n *             } );\n *\n *             return tag;\n *         }\n *     } );\n *\n *     // generated html:\n *     //   Test <button title=\"Load URL: http://google.com\">Load URL: google.com</button>\n */\nAutolinker.HtmlTag = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {String} tagName\n\t *\n\t * The tag name. Ex: 'a', 'button', etc.\n\t *\n\t * Not required at instantiation time, but should be set using {@link #setTagName} before {@link #toAnchorString}\n\t * is executed.\n\t */\n\n\t/**\n\t * @cfg {Object.<String, String>} attrs\n\t *\n\t * An key/value Object (map) of attributes to create the tag with. The keys are the attribute names, and the\n\t * values are the attribute values.\n\t */\n\n\t/**\n\t * @cfg {String} innerHtml\n\t *\n\t * The inner HTML for the tag.\n\t *\n\t * Note the camel case name on `innerHtml`. Acronyms are camelCased in this utility (such as not to run into the acronym\n\t * naming inconsistency that the DOM developers created with `XMLHttpRequest`). You may alternatively use {@link #innerHTML}\n\t * if you prefer, but this one is recommended.\n\t */\n\n\t/**\n\t * @cfg {String} innerHTML\n\t *\n\t * Alias of {@link #innerHtml}, accepted for consistency with the browser DOM api, but prefer the camelCased version\n\t * for acronym names.\n\t */\n\n\n\t/**\n\t * @protected\n\t * @property {RegExp} whitespaceRegex\n\t *\n\t * Regular expression used to match whitespace in a string of CSS classes.\n\t */\n\twhitespaceRegex : /\\s+/,\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} [cfg] The configuration properties for this class, in an Object (map)\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.Util.assign( this, cfg );\n\n\t\tthis.innerHtml = this.innerHtml || this.innerHTML;  // accept either the camelCased form or the fully capitalized acronym\n\t},\n\n\n\t/**\n\t * Sets the tag name that will be used to generate the tag with.\n\t *\n\t * @param {String} tagName\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetTagName : function( tagName ) {\n\t\tthis.tagName = tagName;\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Retrieves the tag name.\n\t *\n\t * @return {String}\n\t */\n\tgetTagName : function() {\n\t\treturn this.tagName || \"\";\n\t},\n\n\n\t/**\n\t * Sets an attribute on the HtmlTag.\n\t *\n\t * @param {String} attrName The attribute name to set.\n\t * @param {String} attrValue The attribute value to set.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetAttr : function( attrName, attrValue ) {\n\t\tvar tagAttrs = this.getAttrs();\n\t\ttagAttrs[ attrName ] = attrValue;\n\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Retrieves an attribute from the HtmlTag. If the attribute does not exist, returns `undefined`.\n\t *\n\t * @param {String} attrName The attribute name to retrieve.\n\t * @return {String} The attribute's value, or `undefined` if it does not exist on the HtmlTag.\n\t */\n\tgetAttr : function( attrName ) {\n\t\treturn this.getAttrs()[ attrName ];\n\t},\n\n\n\t/**\n\t * Sets one or more attributes on the HtmlTag.\n\t *\n\t * @param {Object.<String, String>} attrs A key/value Object (map) of the attributes to set.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetAttrs : function( attrs ) {\n\t\tvar tagAttrs = this.getAttrs();\n\t\tAutolinker.Util.assign( tagAttrs, attrs );\n\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Retrieves the attributes Object (map) for the HtmlTag.\n\t *\n\t * @return {Object.<String, String>} A key/value object of the attributes for the HtmlTag.\n\t */\n\tgetAttrs : function() {\n\t\treturn this.attrs || ( this.attrs = {} );\n\t},\n\n\n\t/**\n\t * Sets the provided `cssClass`, overwriting any current CSS classes on the HtmlTag.\n\t *\n\t * @param {String} cssClass One or more space-separated CSS classes to set (overwrite).\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetClass : function( cssClass ) {\n\t\treturn this.setAttr( 'class', cssClass );\n\t},\n\n\n\t/**\n\t * Convenience method to add one or more CSS classes to the HtmlTag. Will not add duplicate CSS classes.\n\t *\n\t * @param {String} cssClass One or more space-separated CSS classes to add.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\taddClass : function( cssClass ) {\n\t\tvar classAttr = this.getClass(),\n\t\t    whitespaceRegex = this.whitespaceRegex,\n\t\t    indexOf = Autolinker.Util.indexOf,  // to support IE8 and below\n\t\t    classes = ( !classAttr ) ? [] : classAttr.split( whitespaceRegex ),\n\t\t    newClasses = cssClass.split( whitespaceRegex ),\n\t\t    newClass;\n\n\t\twhile( newClass = newClasses.shift() ) {\n\t\t\tif( indexOf( classes, newClass ) === -1 ) {\n\t\t\t\tclasses.push( newClass );\n\t\t\t}\n\t\t}\n\n\t\tthis.getAttrs()[ 'class' ] = classes.join( \" \" );\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Convenience method to remove one or more CSS classes from the HtmlTag.\n\t *\n\t * @param {String} cssClass One or more space-separated CSS classes to remove.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tremoveClass : function( cssClass ) {\n\t\tvar classAttr = this.getClass(),\n\t\t    whitespaceRegex = this.whitespaceRegex,\n\t\t    indexOf = Autolinker.Util.indexOf,  // to support IE8 and below\n\t\t    classes = ( !classAttr ) ? [] : classAttr.split( whitespaceRegex ),\n\t\t    removeClasses = cssClass.split( whitespaceRegex ),\n\t\t    removeClass;\n\n\t\twhile( classes.length && ( removeClass = removeClasses.shift() ) ) {\n\t\t\tvar idx = indexOf( classes, removeClass );\n\t\t\tif( idx !== -1 ) {\n\t\t\t\tclasses.splice( idx, 1 );\n\t\t\t}\n\t\t}\n\n\t\tthis.getAttrs()[ 'class' ] = classes.join( \" \" );\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Convenience method to retrieve the CSS class(es) for the HtmlTag, which will each be separated by spaces when\n\t * there are multiple.\n\t *\n\t * @return {String}\n\t */\n\tgetClass : function() {\n\t\treturn this.getAttrs()[ 'class' ] || \"\";\n\t},\n\n\n\t/**\n\t * Convenience method to check if the tag has a CSS class or not.\n\t *\n\t * @param {String} cssClass The CSS class to check for.\n\t * @return {Boolean} `true` if the HtmlTag has the CSS class, `false` otherwise.\n\t */\n\thasClass : function( cssClass ) {\n\t\treturn ( ' ' + this.getClass() + ' ' ).indexOf( ' ' + cssClass + ' ' ) !== -1;\n\t},\n\n\n\t/**\n\t * Sets the inner HTML for the tag.\n\t *\n\t * @param {String} html The inner HTML to set.\n\t * @return {Autolinker.HtmlTag} This HtmlTag instance, so that method calls may be chained.\n\t */\n\tsetInnerHtml : function( html ) {\n\t\tthis.innerHtml = html;\n\n\t\treturn this;\n\t},\n\n\n\t/**\n\t * Retrieves the inner HTML for the tag.\n\t *\n\t * @return {String}\n\t */\n\tgetInnerHtml : function() {\n\t\treturn this.innerHtml || \"\";\n\t},\n\n\n\t/**\n\t * Override of superclass method used to generate the HTML string for the tag.\n\t *\n\t * @return {String}\n\t */\n\ttoAnchorString : function() {\n\t\tvar tagName = this.getTagName(),\n\t\t    attrsStr = this.buildAttrsStr();\n\n\t\tattrsStr = ( attrsStr ) ? ' ' + attrsStr : '';  // prepend a space if there are actually attributes\n\n\t\treturn [ '<', tagName, attrsStr, '>', this.getInnerHtml(), '</', tagName, '>' ].join( \"\" );\n\t},\n\n\n\t/**\n\t * Support method for {@link #toAnchorString}, returns the string space-separated key=\"value\" pairs, used to populate\n\t * the stringified HtmlTag.\n\t *\n\t * @protected\n\t * @return {String} Example return: `attr1=\"value1\" attr2=\"value2\"`\n\t */\n\tbuildAttrsStr : function() {\n\t\tif( !this.attrs ) return \"\";  // no `attrs` Object (map) has been set, return empty string\n\n\t\tvar attrs = this.getAttrs(),\n\t\t    attrsArr = [];\n\n\t\tfor( var prop in attrs ) {\n\t\t\tif( attrs.hasOwnProperty( prop ) ) {\n\t\t\t\tattrsArr.push( prop + '=\"' + attrs[ prop ] + '\"' );\n\t\t\t}\n\t\t}\n\t\treturn attrsArr.join( \" \" );\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @class Autolinker.RegexLib\n * @singleton\n *\n * Builds and stores a library of the common regular expressions used by the\n * Autolinker utility.\n *\n * Other regular expressions may exist ad-hoc, but these are generally the\n * regular expressions that are shared between source files.\n */\nAutolinker.RegexLib = (function() {\n\n\t/**\n\t * The string form of a regular expression that would match all of the\n\t * alphabetic (\"letter\") chars in the unicode character set when placed in a\n\t * RegExp character class (`[]`). This includes all international alphabetic\n\t * characters.\n\t *\n\t * These would be the characters matched by unicode regex engines `\\p{L}`\n\t * escape (\"all letters\").\n\t *\n\t * Taken from the XRegExp library: http://xregexp.com/\n\t * Specifically: http://xregexp.com/v/3.0.0/unicode-categories.js\n\t *\n\t * @private\n\t * @type {String}\n\t */\n\tvar alphaCharsStr = 'A-Za-z\\\\xAA\\\\xB5\\\\xBA\\\\xC0-\\\\xD6\\\\xD8-\\\\xF6\\\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16F1-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2183\\u2184\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005\\u3006\\u3031-\\u3035\\u303B\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6E5\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC';\n\n\t/**\n\t * The string form of a regular expression that would match all of the\n\t * decimal number chars in the unicode character set when placed in a RegExp\n\t * character class (`[]`).\n\t *\n\t * These would be the characters matched by unicode regex engines `\\p{Nd}`\n\t * escape (\"all decimal numbers\")\n\t *\n\t * Taken from the XRegExp library: http://xregexp.com/\n\t * Specifically: http://xregexp.com/v/3.0.0/unicode-categories.js\n\t *\n\t * @private\n\t * @type {String}\n\t */\n\tvar decimalNumbersStr = '0-9\\u0660-\\u0669\\u06F0-\\u06F9\\u07C0-\\u07C9\\u0966-\\u096F\\u09E6-\\u09EF\\u0A66-\\u0A6F\\u0AE6-\\u0AEF\\u0B66-\\u0B6F\\u0BE6-\\u0BEF\\u0C66-\\u0C6F\\u0CE6-\\u0CEF\\u0D66-\\u0D6F\\u0DE6-\\u0DEF\\u0E50-\\u0E59\\u0ED0-\\u0ED9\\u0F20-\\u0F29\\u1040-\\u1049\\u1090-\\u1099\\u17E0-\\u17E9\\u1810-\\u1819\\u1946-\\u194F\\u19D0-\\u19D9\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1B50-\\u1B59\\u1BB0-\\u1BB9\\u1C40-\\u1C49\\u1C50-\\u1C59\\uA620-\\uA629\\uA8D0-\\uA8D9\\uA900-\\uA909\\uA9D0-\\uA9D9\\uA9F0-\\uA9F9\\uAA50-\\uAA59\\uABF0-\\uABF9\\uFF10-\\uFF19';\n\n\n\t// See documentation below\n\tvar alphaNumericCharsStr = alphaCharsStr + decimalNumbersStr;\n\n\n\t// See documentation below\n\tvar domainNameRegex = new RegExp( '[' + alphaNumericCharsStr + '.\\\\-]*[' + alphaNumericCharsStr + '\\\\-]' );\n\n\n\t// See documentation below\n\tvar tldRegex = /(?:travelersinsurance|sandvikcoromant|kerryproperties|cancerresearch|weatherchannel|kerrylogistics|spreadbetting|international|wolterskluwer|lifeinsurance|construction|pamperedchef|scholarships|versicherung|bridgestone|creditunion|kerryhotels|investments|productions|blackfriday|enterprises|lamborghini|photography|motorcycles|williamhill|playstation|contractors|barclaycard|accountants|redumbrella|engineering|management|telefonica|protection|consulting|tatamotors|creditcard|vlaanderen|schaeffler|associates|properties|foundation|republican|bnpparibas|boehringer|eurovision|extraspace|industries|immobilien|university|technology|volkswagen|healthcare|restaurant|cuisinella|vistaprint|apartments|accountant|travelers|homedepot|institute|vacations|furniture|fresenius|insurance|christmas|bloomberg|solutions|barcelona|firestone|financial|kuokgroup|fairwinds|community|passagens|goldpoint|equipment|lifestyle|yodobashi|aquarelle|marketing|analytics|education|amsterdam|statefarm|melbourne|allfinanz|directory|microsoft|stockholm|montblanc|accenture|lancaster|landrover|everbank|istanbul|graphics|grainger|ipiranga|softbank|attorney|pharmacy|saarland|catering|airforce|yokohama|mortgage|frontier|mutuelle|stcgroup|memorial|pictures|football|symantec|cipriani|ventures|telecity|cityeats|verisign|flsmidth|boutique|cleaning|firmdale|clinique|clothing|redstone|infiniti|deloitte|feedback|services|broadway|plumbing|commbank|training|barclays|exchange|computer|brussels|software|delivery|barefoot|builders|business|bargains|engineer|holdings|download|security|helsinki|lighting|movistar|discount|hdfcbank|supplies|marriott|property|diamonds|capetown|partners|democrat|jpmorgan|bradesco|budapest|rexroth|zuerich|shriram|academy|science|support|youtube|singles|surgery|alibaba|statoil|dentist|schwarz|android|cruises|cricket|digital|markets|starhub|systems|courses|coupons|netbank|country|domains|corsica|network|neustar|realtor|lincoln|limited|schmidt|yamaxun|cooking|contact|auction|spiegel|liaison|leclerc|latrobe|lasalle|abogado|compare|lanxess|exposed|express|company|cologne|college|avianca|lacaixa|fashion|recipes|ferrero|komatsu|storage|wanggou|clubmed|sandvik|fishing|fitness|bauhaus|kitchen|flights|florist|flowers|watches|weather|temasek|samsung|bentley|forsale|channel|theater|frogans|theatre|okinawa|website|tickets|jewelry|gallery|tiffany|iselect|shiksha|brother|organic|wedding|genting|toshiba|origins|philips|hyundai|hotmail|hoteles|hosting|rentals|windows|cartier|bugatti|holiday|careers|whoswho|hitachi|panerai|caravan|reviews|guitars|capital|trading|hamburg|hangout|finance|stream|family|abbott|health|review|travel|report|hermes|hiphop|gratis|career|toyota|hockey|dating|repair|google|social|soccer|reisen|global|otsuka|giving|unicom|casino|photos|center|broker|rocher|orange|bostik|garden|insure|ryukyu|bharti|safety|physio|sakura|oracle|online|jaguar|gallup|piaget|tienda|futbol|pictet|joburg|webcam|berlin|office|juegos|kaufen|chanel|chrome|xihuan|church|tennis|circle|kinder|flickr|bayern|claims|clinic|viajes|nowruz|xperia|norton|yachts|studio|coffee|camera|sanofi|nissan|author|expert|events|comsec|lawyer|tattoo|viking|estate|villas|condos|realty|yandex|energy|emerck|virgin|vision|durban|living|school|coupon|london|taobao|natura|taipei|nagoya|luxury|walter|aramco|sydney|madrid|credit|maison|makeup|schule|market|anquan|direct|design|swatch|suzuki|alsace|vuelos|dental|alipay|voyage|shouji|voting|airtel|mutual|degree|supply|agency|museum|mobily|dealer|monash|select|mormon|active|moscow|racing|datsun|quebec|nissay|rodeo|email|gifts|works|photo|chloe|edeka|cheap|earth|vista|tushu|koeln|glass|shoes|globo|tunes|gmail|nokia|space|kyoto|black|ricoh|seven|lamer|sener|epson|cisco|praxi|trust|citic|crown|shell|lease|green|legal|lexus|ninja|tatar|gripe|nikon|group|video|wales|autos|gucci|party|nexus|guide|linde|adult|parts|amica|lixil|boats|azure|loans|locus|cymru|lotte|lotto|stada|click|poker|quest|dabur|lupin|nadex|paris|faith|dance|canon|place|gives|trade|skype|rocks|mango|cloud|boots|smile|final|swiss|homes|honda|media|horse|cards|deals|watch|bosch|house|pizza|miami|osaka|tours|total|xerox|coach|sucks|style|delta|toray|iinet|tools|money|codes|beats|tokyo|salon|archi|movie|baidu|study|actor|yahoo|store|apple|world|forex|today|bible|tmall|tirol|irish|tires|forum|reise|vegas|vodka|sharp|omega|weber|jetzt|audio|promo|build|bingo|chase|gallo|drive|dubai|rehab|press|solar|sale|beer|bbva|bank|band|auto|sapo|sarl|saxo|audi|asia|arte|arpa|army|yoga|ally|zara|scor|scot|sexy|seat|zero|seek|aero|adac|zone|aarp|maif|meet|meme|menu|surf|mini|mobi|mtpc|porn|desi|star|ltda|name|talk|navy|love|loan|live|link|news|limo|like|spot|life|nico|lidl|lgbt|land|taxi|team|tech|kred|kpmg|sony|song|kiwi|kddi|jprs|jobs|sohu|java|itau|tips|info|immo|icbc|hsbc|town|host|page|toys|here|help|pars|haus|guru|guge|tube|goog|golf|gold|sncf|gmbh|gift|ggee|gent|gbiz|game|vana|pics|fund|ford|ping|pink|fish|film|fast|farm|play|fans|fail|plus|skin|pohl|fage|moda|post|erni|dvag|prod|doha|prof|docs|viva|diet|luxe|site|dell|sina|dclk|show|qpon|date|vote|cyou|voto|read|coop|cool|wang|club|city|chat|cern|cash|reit|rent|casa|cars|care|camp|rest|call|cafe|weir|wien|rich|wiki|buzz|wine|book|bond|room|work|rsvp|shia|ruhr|blue|bing|shaw|bike|safe|xbox|best|pwc|mtn|lds|aig|boo|fyi|nra|nrw|ntt|car|gal|obi|zip|aeg|vin|how|one|ong|onl|dad|ooo|bet|esq|org|htc|bar|uol|ibm|ovh|gdn|ice|icu|uno|gea|ifm|bot|top|wtf|lol|day|pet|eus|wtc|ubs|tvs|aco|ing|ltd|ink|tab|abb|afl|cat|int|pid|pin|bid|cba|gle|com|cbn|ads|man|wed|ceb|gmo|sky|ist|gmx|tui|mba|fan|ski|iwc|app|pro|med|ceo|jcb|jcp|goo|dev|men|aaa|meo|pub|jlc|bom|jll|gop|jmp|mil|got|gov|win|jot|mma|joy|trv|red|cfa|cfd|bio|moe|moi|mom|ren|biz|aws|xin|bbc|dnp|buy|kfh|mov|thd|xyz|fit|kia|rio|rip|kim|dog|vet|nyc|bcg|mtr|bcn|bms|bmw|run|bzh|rwe|tel|stc|axa|kpn|fly|krd|cab|bnl|foo|crs|eat|tci|sap|srl|nec|sas|net|cal|sbs|sfr|sca|scb|csc|edu|new|xxx|hiv|fox|wme|ngo|nhk|vip|sex|frl|lat|yun|law|you|tax|soy|sew|om|ac|hu|se|sc|sg|sh|sb|sa|rw|ru|rs|ro|re|qa|py|si|pw|pt|ps|sj|sk|pr|pn|pm|pl|sl|sm|pk|sn|ph|so|pg|pf|pe|pa|zw|nz|nu|nr|np|no|nl|ni|ng|nf|sr|ne|st|nc|na|mz|my|mx|mw|mv|mu|mt|ms|mr|mq|mp|mo|su|mn|mm|ml|mk|mh|mg|me|sv|md|mc|sx|sy|ma|ly|lv|sz|lu|lt|ls|lr|lk|li|lc|lb|la|tc|kz|td|ky|kw|kr|kp|kn|km|ki|kh|tf|tg|th|kg|ke|jp|jo|jm|je|it|is|ir|tj|tk|tl|tm|iq|tn|to|io|in|im|il|ie|ad|sd|ht|hr|hn|hm|tr|hk|gy|gw|gu|gt|gs|gr|gq|tt|gp|gn|gm|gl|tv|gi|tw|tz|ua|gh|ug|uk|gg|gf|ge|gd|us|uy|uz|va|gb|ga|vc|ve|fr|fo|fm|fk|fj|vg|vi|fi|eu|et|es|er|eg|ee|ec|dz|do|dm|dk|vn|dj|de|cz|cy|cx|cw|vu|cv|cu|cr|co|cn|cm|cl|ck|ci|ch|cg|cf|cd|cc|ca|wf|bz|by|bw|bv|bt|bs|br|bo|bn|bm|bj|bi|ws|bh|bg|bf|be|bd|bb|ba|az|ax|aw|au|at|as|ye|ar|aq|ao|am|al|yt|ai|za|ag|af|ae|zm|id)\\b/;\n\n\n\treturn {\n\n\t\t/**\n\t\t * The string form of a regular expression that would match all of the\n\t\t * letters and decimal number chars in the unicode character set when placed\n\t\t * in a RegExp character class (`[]`).\n\t\t *\n\t\t * These would be the characters matched by unicode regex engines `[\\p{L}\\p{Nd}]`\n\t\t * escape (\"all letters and decimal numbers\")\n\t\t *\n\t\t * @property {String} alphaNumericCharsStr\n\t\t */\n\t\talphaNumericCharsStr : alphaNumericCharsStr,\n\n\t\t/**\n\t\t * A regular expression to match domain names of a URL or email address.\n\t\t * Ex: 'google', 'yahoo', 'some-other-company', etc.\n\t\t *\n\t\t * @property {RegExp} domainNameRegex\n\t\t */\n\t\tdomainNameRegex : domainNameRegex,\n\n\t\t/**\n\t\t * A regular expression to match top level domains (TLDs) for a URL or\n\t\t * email address. Ex: 'com', 'org', 'net', etc.\n\t\t *\n\t\t * @property {RegExp} tldRegex\n\t\t */\n\t\ttldRegex : tldRegex\n\n\t};\n\n\n}() );\n/*global Autolinker */\n/*jshint sub:true */\n/**\n * @protected\n * @class Autolinker.AnchorTagBuilder\n * @extends Object\n *\n * Builds anchor (&lt;a&gt;) tags for the Autolinker utility when a match is\n * found.\n *\n * Normally this class is instantiated, configured, and used internally by an\n * {@link Autolinker} instance, but may actually be used indirectly in a\n * {@link Autolinker#replaceFn replaceFn} to create {@link Autolinker.HtmlTag HtmlTag}\n * instances which may be modified before returning from the\n * {@link Autolinker#replaceFn replaceFn}. For example:\n *\n *     var html = Autolinker.link( \"Test google.com\", {\n *         replaceFn : function( match ) {\n *             var tag = match.buildTag();  // returns an {@link Autolinker.HtmlTag} instance\n *             tag.setAttr( 'rel', 'nofollow' );\n *\n *             return tag;\n *         }\n *     } );\n *\n *     // generated html:\n *     //   Test <a href=\"http://google.com\" target=\"_blank\" rel=\"nofollow\">google.com</a>\n */\nAutolinker.AnchorTagBuilder = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {Boolean} newWindow\n\t * @inheritdoc Autolinker#newWindow\n\t */\n\n\t/**\n\t * @cfg {Object} truncate\n\t * @inheritdoc Autolinker#truncate\n\t */\n\n\t/**\n\t * @cfg {String} className\n\t * @inheritdoc Autolinker#className\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} [cfg] The configuration options for the AnchorTagBuilder instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tcfg = cfg || {};\n\n\t\tthis.newWindow = cfg.newWindow;\n\t\tthis.truncate = cfg.truncate;\n\t\tthis.className = cfg.className;\n\t},\n\n\n\t/**\n\t * Generates the actual anchor (&lt;a&gt;) tag to use in place of the\n\t * matched text, via its `match` object.\n\t *\n\t * @param {Autolinker.match.Match} match The Match instance to generate an\n\t *   anchor tag from.\n\t * @return {Autolinker.HtmlTag} The HtmlTag instance for the anchor tag.\n\t */\n\tbuild : function( match ) {\n\t\treturn new Autolinker.HtmlTag( {\n\t\t\ttagName   : 'a',\n\t\t\tattrs     : this.createAttrs( match ),\n\t\t\tinnerHtml : this.processAnchorText( match.getAnchorText() )\n\t\t} );\n\t},\n\n\n\t/**\n\t * Creates the Object (map) of the HTML attributes for the anchor (&lt;a&gt;)\n\t *   tag being generated.\n\t *\n\t * @protected\n\t * @param {Autolinker.match.Match} match The Match instance to generate an\n\t *   anchor tag from.\n\t * @return {Object} A key/value Object (map) of the anchor tag's attributes.\n\t */\n\tcreateAttrs : function( match ) {\n\t\tvar attrs = {\n\t\t\t'href' : match.getAnchorHref()  // we'll always have the `href` attribute\n\t\t};\n\n\t\tvar cssClass = this.createCssClass( match );\n\t\tif( cssClass ) {\n\t\t\tattrs[ 'class' ] = cssClass;\n\t\t}\n\t\tif( this.newWindow ) {\n\t\t\tattrs[ 'target' ] = \"_blank\";\n\t\t\tattrs[ 'rel' ] = \"noopener noreferrer\";\n\t\t}\n\n\t\treturn attrs;\n\t},\n\n\n\t/**\n\t * Creates the CSS class that will be used for a given anchor tag, based on\n\t * the `matchType` and the {@link #className} config.\n\t *\n\t * Example returns:\n\t *\n\t * - \"\"                                      // no {@link #className}\n\t * - \"myLink myLink-url\"                     // url match\n\t * - \"myLink myLink-email\"                   // email match\n\t * - \"myLink myLink-phone\"                   // phone match\n\t * - \"myLink myLink-hashtag\"                 // hashtag match\n\t * - \"myLink myLink-mention myLink-twitter\"  // mention match with Twitter service\n\t *\n\t * @private\n\t * @param {Autolinker.match.Match} match The Match instance to generate an\n\t *   anchor tag from.\n\t * @return {String} The CSS class string for the link. Example return:\n\t *   \"myLink myLink-url\". If no {@link #className} was configured, returns\n\t *   an empty string.\n\t */\n\tcreateCssClass : function( match ) {\n\t\tvar className = this.className;\n\n\t\tif( !className ) {\n\t\t\treturn \"\";\n\n\t\t} else {\n\t\t\tvar returnClasses = [ className ],\n\t\t\t\tcssClassSuffixes = match.getCssClassSuffixes();\n\n\t\t\tfor( var i = 0, len = cssClassSuffixes.length; i < len; i++ ) {\n\t\t\t\treturnClasses.push( className + '-' + cssClassSuffixes[ i ] );\n\t\t\t}\n\t\t\treturn returnClasses.join( ' ' );\n\t\t}\n\t},\n\n\n\t/**\n\t * Processes the `anchorText` by truncating the text according to the\n\t * {@link #truncate} config.\n\t *\n\t * @private\n\t * @param {String} anchorText The anchor tag's text (i.e. what will be\n\t *   displayed).\n\t * @return {String} The processed `anchorText`.\n\t */\n\tprocessAnchorText : function( anchorText ) {\n\t\tanchorText = this.doTruncate( anchorText );\n\n\t\treturn anchorText;\n\t},\n\n\n\t/**\n\t * Performs the truncation of the `anchorText` based on the {@link #truncate}\n\t * option. If the `anchorText` is longer than the length specified by the\n\t * {@link #truncate} option, the truncation is performed based on the\n\t * `location` property. See {@link #truncate} for details.\n\t *\n\t * @private\n\t * @param {String} anchorText The anchor tag's text (i.e. what will be\n\t *   displayed).\n\t * @return {String} The truncated anchor text.\n\t */\n\tdoTruncate : function( anchorText ) {\n\t\tvar truncate = this.truncate;\n\t\tif( !truncate || !truncate.length ) return anchorText;\n\n\t\tvar truncateLength = truncate.length,\n\t\t\ttruncateLocation = truncate.location;\n\n\t\tif( truncateLocation === 'smart' ) {\n\t\t\treturn Autolinker.truncate.TruncateSmart( anchorText, truncateLength, '..' );\n\n\t\t} else if( truncateLocation === 'middle' ) {\n\t\t\treturn Autolinker.truncate.TruncateMiddle( anchorText, truncateLength, '..' );\n\n\t\t} else {\n\t\t\treturn Autolinker.truncate.TruncateEnd( anchorText, truncateLength, '..' );\n\t\t}\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.HtmlParser\n * @extends Object\n *\n * An HTML parser implementation which simply walks an HTML string and returns an array of\n * {@link Autolinker.htmlParser.HtmlNode HtmlNodes} that represent the basic HTML structure of the input string.\n *\n * Autolinker uses this to only link URLs/emails/mentions within text nodes, effectively ignoring / \"walking\n * around\" HTML tags.\n */\nAutolinker.htmlParser.HtmlParser = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @private\n\t * @property {RegExp} htmlRegex\n\t *\n\t * The regular expression used to pull out HTML tags from a string. Handles namespaced HTML tags and\n\t * attribute names, as specified by http://www.w3.org/TR/html-markup/syntax.html.\n\t *\n\t * Capturing groups:\n\t *\n\t * 1. The \"!DOCTYPE\" tag name, if a tag is a &lt;!DOCTYPE&gt; tag.\n\t * 2. If it is an end tag, this group will have the '/'.\n\t * 3. If it is a comment tag, this group will hold the comment text (i.e.\n\t *    the text inside the `&lt;!--` and `--&gt;`.\n\t * 4. The tag name for all tags (other than the &lt;!DOCTYPE&gt; tag)\n\t */\n\thtmlRegex : (function() {\n\t\tvar commentTagRegex = /!--([\\s\\S]+?)--/,\n\t\t    tagNameRegex = /[0-9a-zA-Z][0-9a-zA-Z:]*/,\n\t\t    attrNameRegex = /[^\\s\"'>\\/=\\x00-\\x1F\\x7F]+/,   // the unicode range accounts for excluding control chars, and the delete char\n\t\t    attrValueRegex = /(?:\"[^\"]*?\"|'[^']*?'|[^'\"=<>`\\s]+)/, // double quoted, single quoted, or unquoted attribute values\n\t\t    nameEqualsValueRegex = attrNameRegex.source + '(?:\\\\s*=\\\\s*' + attrValueRegex.source + ')?';  // optional '=[value]'\n\n\t\treturn new RegExp( [\n\t\t\t// for <!DOCTYPE> tag. Ex: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">)\n\t\t\t'(?:',\n\t\t\t\t'<(!DOCTYPE)',  // *** Capturing Group 1 - If it's a doctype tag\n\n\t\t\t\t\t// Zero or more attributes following the tag name\n\t\t\t\t\t'(?:',\n\t\t\t\t\t\t'\\\\s+',  // one or more whitespace chars before an attribute\n\n\t\t\t\t\t\t// Either:\n\t\t\t\t\t\t// A. attr=\"value\", or\n\t\t\t\t\t\t// B. \"value\" alone (To cover example doctype tag: <!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Strict//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd\">)\n\t\t\t\t\t\t'(?:', nameEqualsValueRegex, '|', attrValueRegex.source + ')',\n\t\t\t\t\t')*',\n\t\t\t\t'>',\n\t\t\t')',\n\n\t\t\t'|',\n\n\t\t\t// All other HTML tags (i.e. tags that are not <!DOCTYPE>)\n\t\t\t'(?:',\n\t\t\t\t'<(/)?',  // Beginning of a tag or comment. Either '<' for a start tag, or '</' for an end tag.\n\t\t\t\t          // *** Capturing Group 2: The slash or an empty string. Slash ('/') for end tag, empty string for start or self-closing tag.\n\n\t\t\t\t\t'(?:',\n\t\t\t\t\t\tcommentTagRegex.source,  // *** Capturing Group 3 - A Comment Tag's Text\n\n\t\t\t\t\t\t'|',\n\n\t\t\t\t\t\t'(?:',\n\n\t\t\t\t\t\t\t// *** Capturing Group 4 - The tag name\n\t\t\t\t\t\t\t'(' + tagNameRegex.source + ')',\n\n\t\t\t\t\t\t\t// Zero or more attributes following the tag name\n\t\t\t\t\t\t\t'(?:',\n\t\t\t\t\t\t\t\t'(?:\\\\s+|\\\\b)',        // any number of whitespace chars before an attribute. NOTE: Using \\s* here throws Chrome into an infinite loop for some reason, so using \\s+|\\b instead\n\t\t\t\t\t\t\t\tnameEqualsValueRegex,  // attr=\"value\" (with optional =\"value\" part)\n\t\t\t\t\t\t\t')*',\n\n\t\t\t\t\t\t\t'\\\\s*/?',  // any trailing spaces and optional '/' before the closing '>'\n\n\t\t\t\t\t\t')',\n\t\t\t\t\t')',\n\t\t\t\t'>',\n\t\t\t')'\n\t\t].join( \"\" ), 'gi' );\n\t} )(),\n\n\t/**\n\t * @private\n\t * @property {RegExp} htmlCharacterEntitiesRegex\n\t *\n\t * The regular expression that matches common HTML character entities.\n\t *\n\t * Ignoring &amp; as it could be part of a query string -- handling it separately.\n\t */\n\thtmlCharacterEntitiesRegex: /(&nbsp;|&#160;|&lt;|&#60;|&gt;|&#62;|&quot;|&#34;|&#39;)/gi,\n\n\n\t/**\n\t * Parses an HTML string and returns a simple array of {@link Autolinker.htmlParser.HtmlNode HtmlNodes}\n\t * to represent the HTML structure of the input string.\n\t *\n\t * @param {String} html The HTML to parse.\n\t * @return {Autolinker.htmlParser.HtmlNode[]}\n\t */\n\tparse : function( html ) {\n\t\tvar htmlRegex = this.htmlRegex,\n\t\t    currentResult,\n\t\t    lastIndex = 0,\n\t\t    textAndEntityNodes,\n\t\t    nodes = [];  // will be the result of the method\n\n\t\twhile( ( currentResult = htmlRegex.exec( html ) ) !== null ) {\n\t\t\tvar tagText = currentResult[ 0 ],\n\t\t\t    commentText = currentResult[ 3 ], // if we've matched a comment\n\t\t\t    tagName = currentResult[ 1 ] || currentResult[ 4 ],  // The <!DOCTYPE> tag (ex: \"!DOCTYPE\"), or another tag (ex: \"a\" or \"img\")\n\t\t\t    isClosingTag = !!currentResult[ 2 ],\n\t\t\t    offset = currentResult.index,\n\t\t\t    inBetweenTagsText = html.substring( lastIndex, offset );\n\n\t\t\t// Push TextNodes and EntityNodes for any text found between tags\n\t\t\tif( inBetweenTagsText ) {\n\t\t\t\ttextAndEntityNodes = this.parseTextAndEntityNodes( lastIndex, inBetweenTagsText );\n\t\t\t\tnodes.push.apply( nodes, textAndEntityNodes );\n\t\t\t}\n\n\t\t\t// Push the CommentNode or ElementNode\n\t\t\tif( commentText ) {\n\t\t\t\tnodes.push( this.createCommentNode( offset, tagText, commentText ) );\n\t\t\t} else {\n\t\t\t\tnodes.push( this.createElementNode( offset, tagText, tagName, isClosingTag ) );\n\t\t\t}\n\n\t\t\tlastIndex = offset + tagText.length;\n\t\t}\n\n\t\t// Process any remaining text after the last HTML element. Will process all of the text if there were no HTML elements.\n\t\tif( lastIndex < html.length ) {\n\t\t\tvar text = html.substring( lastIndex );\n\n\t\t\t// Push TextNodes and EntityNodes for any text found between tags\n\t\t\tif( text ) {\n\t\t\t\ttextAndEntityNodes = this.parseTextAndEntityNodes( lastIndex, text );\n\t\t\t\tnodes.push.apply( nodes, textAndEntityNodes );\n\t\t\t}\n\t\t}\n\n\t\treturn nodes;\n\t},\n\n\n\t/**\n\t * Parses text and HTML entity nodes from a given string. The input string\n\t * should not have any HTML tags (elements) within it.\n\t *\n\t * @private\n\t * @param {Number} offset The offset of the text node match within the\n\t *   original HTML string.\n\t * @param {String} text The string of text to parse. This is from an HTML\n\t *   text node.\n\t * @return {Autolinker.htmlParser.HtmlNode[]} An array of HtmlNodes to\n\t *   represent the {@link Autolinker.htmlParser.TextNode TextNodes} and\n\t *   {@link Autolinker.htmlParser.EntityNode EntityNodes} found.\n\t */\n\tparseTextAndEntityNodes : function( offset, text ) {\n\t\tvar nodes = [],\n\t\t    textAndEntityTokens = Autolinker.Util.splitAndCapture( text, this.htmlCharacterEntitiesRegex );  // split at HTML entities, but include the HTML entities in the results array\n\n\t\t// Every even numbered token is a TextNode, and every odd numbered token is an EntityNode\n\t\t// For example: an input `text` of \"Test &quot;this&quot; today\" would turn into the\n\t\t//   `textAndEntityTokens`: [ 'Test ', '&quot;', 'this', '&quot;', ' today' ]\n\t\tfor( var i = 0, len = textAndEntityTokens.length; i < len; i += 2 ) {\n\t\t\tvar textToken = textAndEntityTokens[ i ],\n\t\t\t    entityToken = textAndEntityTokens[ i + 1 ];\n\n\t\t\tif( textToken ) {\n\t\t\t\tnodes.push( this.createTextNode( offset, textToken ) );\n\t\t\t\toffset += textToken.length;\n\t\t\t}\n\t\t\tif( entityToken ) {\n\t\t\t\tnodes.push( this.createEntityNode( offset, entityToken ) );\n\t\t\t\toffset += entityToken.length;\n\t\t\t}\n\t\t}\n\t\treturn nodes;\n\t},\n\n\n\t/**\n\t * Factory method to create an {@link Autolinker.htmlParser.CommentNode CommentNode}.\n\t *\n\t * @private\n\t * @param {Number} offset The offset of the match within the original HTML\n\t *   string.\n\t * @param {String} tagText The full text of the tag (comment) that was\n\t *   matched, including its &lt;!-- and --&gt;.\n\t * @param {String} commentText The full text of the comment that was matched.\n\t */\n\tcreateCommentNode : function( offset, tagText, commentText ) {\n\t\treturn new Autolinker.htmlParser.CommentNode( {\n\t\t\toffset : offset,\n\t\t\ttext   : tagText,\n\t\t\tcomment: Autolinker.Util.trim( commentText )\n\t\t} );\n\t},\n\n\n\t/**\n\t * Factory method to create an {@link Autolinker.htmlParser.ElementNode ElementNode}.\n\t *\n\t * @private\n\t * @param {Number} offset The offset of the match within the original HTML\n\t *   string.\n\t * @param {String} tagText The full text of the tag (element) that was\n\t *   matched, including its attributes.\n\t * @param {String} tagName The name of the tag. Ex: An &lt;img&gt; tag would\n\t *   be passed to this method as \"img\".\n\t * @param {Boolean} isClosingTag `true` if it's a closing tag, false\n\t *   otherwise.\n\t * @return {Autolinker.htmlParser.ElementNode}\n\t */\n\tcreateElementNode : function( offset, tagText, tagName, isClosingTag ) {\n\t\treturn new Autolinker.htmlParser.ElementNode( {\n\t\t\toffset  : offset,\n\t\t\ttext    : tagText,\n\t\t\ttagName : tagName.toLowerCase(),\n\t\t\tclosing : isClosingTag\n\t\t} );\n\t},\n\n\n\t/**\n\t * Factory method to create a {@link Autolinker.htmlParser.EntityNode EntityNode}.\n\t *\n\t * @private\n\t * @param {Number} offset The offset of the match within the original HTML\n\t *   string.\n\t * @param {String} text The text that was matched for the HTML entity (such\n\t *   as '&amp;nbsp;').\n\t * @return {Autolinker.htmlParser.EntityNode}\n\t */\n\tcreateEntityNode : function( offset, text ) {\n\t\treturn new Autolinker.htmlParser.EntityNode( { offset: offset, text: text } );\n\t},\n\n\n\t/**\n\t * Factory method to create a {@link Autolinker.htmlParser.TextNode TextNode}.\n\t *\n\t * @private\n\t * @param {Number} offset The offset of the match within the original HTML\n\t *   string.\n\t * @param {String} text The text that was matched.\n\t * @return {Autolinker.htmlParser.TextNode}\n\t */\n\tcreateTextNode : function( offset, text ) {\n\t\treturn new Autolinker.htmlParser.TextNode( { offset: offset, text: text } );\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @abstract\n * @class Autolinker.htmlParser.HtmlNode\n *\n * Represents an HTML node found in an input string. An HTML node is one of the\n * following:\n *\n * 1. An {@link Autolinker.htmlParser.ElementNode ElementNode}, which represents\n *    HTML tags.\n * 2. A {@link Autolinker.htmlParser.CommentNode CommentNode}, which represents\n *    HTML comments.\n * 3. A {@link Autolinker.htmlParser.TextNode TextNode}, which represents text\n *    outside or within HTML tags.\n * 4. A {@link Autolinker.htmlParser.EntityNode EntityNode}, which represents\n *    one of the known HTML entities that Autolinker looks for. This includes\n *    common ones such as &amp;quot; and &amp;nbsp;\n */\nAutolinker.htmlParser.HtmlNode = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {Number} offset (required)\n\t *\n\t * The offset of the HTML node in the original text that was parsed.\n\t */\n\toffset : undefined,\n\n\t/**\n\t * @cfg {String} text (required)\n\t *\n\t * The text that was matched for the HtmlNode.\n\t *\n\t * - In the case of an {@link Autolinker.htmlParser.ElementNode ElementNode},\n\t *   this will be the tag's text.\n\t * - In the case of an {@link Autolinker.htmlParser.CommentNode CommentNode},\n\t *   this will be the comment's text.\n\t * - In the case of a {@link Autolinker.htmlParser.TextNode TextNode}, this\n\t *   will be the text itself.\n\t * - In the case of a {@link Autolinker.htmlParser.EntityNode EntityNode},\n\t *   this will be the text of the HTML entity.\n\t */\n\ttext : undefined,\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match instance,\n\t * specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.Util.assign( this, cfg );\n\n\t\tif( this.offset == null ) throw new Error( '`offset` cfg required' );\n\t\tif( this.text == null ) throw new Error( '`text` cfg required' );\n\t},\n\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @abstract\n\t * @return {String}\n\t */\n\tgetType : Autolinker.Util.abstractMethod,\n\n\n\t/**\n\t * Retrieves the {@link #offset} of the HtmlNode. This is the offset of the\n\t * HTML node in the original string that was parsed.\n\t *\n\t * @return {Number}\n\t */\n\tgetOffset : function() {\n\t\treturn this.offset;\n\t},\n\n\n\t/**\n\t * Retrieves the {@link #text} for the HtmlNode.\n\t *\n\t * @return {String}\n\t */\n\tgetText : function() {\n\t\treturn this.text;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.CommentNode\n * @extends Autolinker.htmlParser.HtmlNode\n *\n * Represents an HTML comment node that has been parsed by the\n * {@link Autolinker.htmlParser.HtmlParser}.\n *\n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n * details.\n */\nAutolinker.htmlParser.CommentNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {\n\n\t/**\n\t * @cfg {String} comment (required)\n\t *\n\t * The text inside the comment tag. This text is stripped of any leading or\n\t * trailing whitespace.\n\t */\n\tcomment : '',\n\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'comment';\n\t},\n\n\n\t/**\n\t * Returns the comment inside the comment tag.\n\t *\n\t * @return {String}\n\t */\n\tgetComment : function() {\n\t\treturn this.comment;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.ElementNode\n * @extends Autolinker.htmlParser.HtmlNode\n *\n * Represents an HTML element node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n *\n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n * details.\n */\nAutolinker.htmlParser.ElementNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {\n\n\t/**\n\t * @cfg {String} tagName (required)\n\t *\n\t * The name of the tag that was matched.\n\t */\n\ttagName : '',\n\n\t/**\n\t * @cfg {Boolean} closing (required)\n\t *\n\t * `true` if the element (tag) is a closing tag, `false` if its an opening\n\t * tag.\n\t */\n\tclosing : false,\n\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'element';\n\t},\n\n\n\t/**\n\t * Returns the HTML element's (tag's) name. Ex: for an &lt;img&gt; tag,\n\t * returns \"img\".\n\t *\n\t * @return {String}\n\t */\n\tgetTagName : function() {\n\t\treturn this.tagName;\n\t},\n\n\n\t/**\n\t * Determines if the HTML element (tag) is a closing tag. Ex: &lt;div&gt;\n\t * returns `false`, while &lt;/div&gt; returns `true`.\n\t *\n\t * @return {Boolean}\n\t */\n\tisClosing : function() {\n\t\treturn this.closing;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.EntityNode\n * @extends Autolinker.htmlParser.HtmlNode\n *\n * Represents a known HTML entity node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n * Ex: '&amp;nbsp;', or '&amp#160;' (which will be retrievable from the {@link #getText}\n * method.\n *\n * Note that this class will only be returned from the HtmlParser for the set of\n * checked HTML entity nodes  defined by the {@link Autolinker.htmlParser.HtmlParser#htmlCharacterEntitiesRegex}.\n *\n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n * details.\n */\nAutolinker.htmlParser.EntityNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'entity';\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.htmlParser.TextNode\n * @extends Autolinker.htmlParser.HtmlNode\n *\n * Represents a text node that has been parsed by the {@link Autolinker.htmlParser.HtmlParser}.\n *\n * See this class's superclass ({@link Autolinker.htmlParser.HtmlNode}) for more\n * details.\n */\nAutolinker.htmlParser.TextNode = Autolinker.Util.extend( Autolinker.htmlParser.HtmlNode, {\n\n\t/**\n\t * Returns a string name for the type of node that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'text';\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @abstract\n * @class Autolinker.match.Match\n *\n * Represents a match found in an input string which should be Autolinked. A Match object is what is provided in a\n * {@link Autolinker#replaceFn replaceFn}, and may be used to query for details about the match.\n *\n * For example:\n *\n *     var input = \"...\";  // string with URLs, Email Addresses, and Mentions (Twitter, Instagram)\n *\n *     var linkedText = Autolinker.link( input, {\n *         replaceFn : function( match ) {\n *             console.log( \"href = \", match.getAnchorHref() );\n *             console.log( \"text = \", match.getAnchorText() );\n *\n *             switch( match.getType() ) {\n *                 case 'url' :\n *                     console.log( \"url: \", match.getUrl() );\n *\n *                 case 'email' :\n *                     console.log( \"email: \", match.getEmail() );\n *\n *                 case 'mention' :\n *                     console.log( \"mention: \", match.getMention() );\n *             }\n *         }\n *     } );\n *\n * See the {@link Autolinker} class for more details on using the {@link Autolinker#replaceFn replaceFn}.\n */\nAutolinker.match.Match = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)\n\t *\n\t * Reference to the AnchorTagBuilder instance to use to generate an anchor\n\t * tag for the Match.\n\t */\n\n\t/**\n\t * @cfg {String} matchedText (required)\n\t *\n\t * The original text that was matched by the {@link Autolinker.matcher.Matcher}.\n\t */\n\n\t/**\n\t * @cfg {Number} offset (required)\n\t *\n\t * The offset of where the match was made in the input string.\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tif( cfg.tagBuilder == null ) throw new Error( '`tagBuilder` cfg required' );\n\t\tif( cfg.matchedText == null ) throw new Error( '`matchedText` cfg required' );\n\t\tif( cfg.offset == null ) throw new Error( '`offset` cfg required' );\n\n\t\tthis.tagBuilder = cfg.tagBuilder;\n\t\tthis.matchedText = cfg.matchedText;\n\t\tthis.offset = cfg.offset;\n\t},\n\n\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t *\n\t * @abstract\n\t * @return {String}\n\t */\n\tgetType : Autolinker.Util.abstractMethod,\n\n\n\t/**\n\t * Returns the original text that was matched.\n\t *\n\t * @return {String}\n\t */\n\tgetMatchedText : function() {\n\t\treturn this.matchedText;\n\t},\n\n\n\t/**\n\t * Sets the {@link #offset} of where the match was made in the input string.\n\t *\n\t * A {@link Autolinker.matcher.Matcher} will be fed only HTML text nodes,\n\t * and will therefore set an original offset that is relative to the HTML\n\t * text node itself. However, we want this offset to be relative to the full\n\t * HTML input string, and thus if using {@link Autolinker#parse} (rather\n\t * than calling a {@link Autolinker.matcher.Matcher} directly), then this\n\t * offset is corrected after the Matcher itself has done its job.\n\t *\n\t * @param {Number} offset\n\t */\n\tsetOffset : function( offset ) {\n\t\tthis.offset = offset;\n\t},\n\n\n\t/**\n\t * Returns the offset of where the match was made in the input string. This\n\t * is the 0-based index of the match.\n\t *\n\t * @return {Number}\n\t */\n\tgetOffset : function() {\n\t\treturn this.offset;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @abstract\n\t * @return {String}\n\t */\n\tgetAnchorHref : Autolinker.Util.abstractMethod,\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @abstract\n\t * @return {String}\n\t */\n\tgetAnchorText : Autolinker.Util.abstractMethod,\n\n\n\t/**\n\t * Returns the CSS class suffix(es) for this match.\n\t *\n\t * A CSS class suffix is appended to the {@link Autolinker#className} in\n\t * the {@link Autolinker.AnchorTagBuilder} when a match is translated into\n\t * an anchor tag.\n\t *\n\t * For example, if {@link Autolinker#className} was configured as 'myLink',\n\t * and this method returns `[ 'url' ]`, the final class name of the element\n\t * will become: 'myLink myLink-url'.\n\t *\n\t * The match may provide multiple CSS class suffixes to be appended to the\n\t * {@link Autolinker#className} in order to facilitate better styling\n\t * options for different match criteria. See {@link Autolinker.match.Mention}\n\t * for an example.\n\t *\n\t * By default, this method returns a single array with the match's\n\t * {@link #getType type} name, but may be overridden by subclasses.\n\t *\n\t * @return {String[]}\n\t */\n\tgetCssClassSuffixes : function() {\n\t\treturn [ this.getType() ];\n\t},\n\n\n\t/**\n\t * Builds and returns an {@link Autolinker.HtmlTag} instance based on the\n\t * Match.\n\t *\n\t * This can be used to easily generate anchor tags from matches, and either\n\t * return their HTML string, or modify them before doing so.\n\t *\n\t * Example Usage:\n\t *\n\t *     var tag = match.buildTag();\n\t *     tag.addClass( 'cordova-link' );\n\t *     tag.setAttr( 'target', '_system' );\n\t *\n\t *     tag.toAnchorString();  // <a href=\"http://google.com\" class=\"cordova-link\" target=\"_system\">Google</a>\n\t */\n\tbuildTag : function() {\n\t\treturn this.tagBuilder.build( this );\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @class Autolinker.match.Email\n * @extends Autolinker.match.Match\n *\n * Represents a Email match found in an input string which should be Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n */\nAutolinker.match.Email = Autolinker.Util.extend( Autolinker.match.Match, {\n\n\t/**\n\t * @cfg {String} email (required)\n\t *\n\t * The email address that was matched.\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );\n\n\t\tif( !cfg.email ) throw new Error( '`email` cfg required' );\n\n\t\tthis.email = cfg.email;\n\t},\n\n\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'email';\n\t},\n\n\n\t/**\n\t * Returns the email address that was matched.\n\t *\n\t * @return {String}\n\t */\n\tgetEmail : function() {\n\t\treturn this.email;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\treturn 'mailto:' + this.email;\n\t},\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\treturn this.email;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.match.Hashtag\n * @extends Autolinker.match.Match\n *\n * Represents a Hashtag match found in an input string which should be\n * Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more\n * details.\n */\nAutolinker.match.Hashtag = Autolinker.Util.extend( Autolinker.match.Match, {\n\n\t/**\n\t * @cfg {String} serviceName\n\t *\n\t * The service to point hashtag matches to. See {@link Autolinker#hashtag}\n\t * for available values.\n\t */\n\n\t/**\n\t * @cfg {String} hashtag (required)\n\t *\n\t * The Hashtag that was matched, without the '#'.\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );\n\n\t\t// TODO: if( !serviceName ) throw new Error( '`serviceName` cfg required' );\n\t\tif( !cfg.hashtag ) throw new Error( '`hashtag` cfg required' );\n\n\t\tthis.serviceName = cfg.serviceName;\n\t\tthis.hashtag = cfg.hashtag;\n\t},\n\n\n\t/**\n\t * Returns the type of match that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'hashtag';\n\t},\n\n\n\t/**\n\t * Returns the configured {@link #serviceName} to point the Hashtag to.\n\t * Ex: 'facebook', 'twitter'.\n\t *\n\t * @return {String}\n\t */\n\tgetServiceName : function() {\n\t\treturn this.serviceName;\n\t},\n\n\n\t/**\n\t * Returns the matched hashtag, without the '#' character.\n\t *\n\t * @return {String}\n\t */\n\tgetHashtag : function() {\n\t\treturn this.hashtag;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\tvar serviceName = this.serviceName,\n\t\t    hashtag = this.hashtag;\n\n\t\tswitch( serviceName ) {\n\t\t\tcase 'twitter' :\n\t\t\t\treturn 'https://twitter.com/hashtag/' + hashtag;\n\t\t\tcase 'facebook' :\n\t\t\t\treturn 'https://www.facebook.com/hashtag/' + hashtag;\n\t\t\tcase 'instagram' :\n\t\t\t\treturn 'https://instagram.com/explore/tags/' + hashtag;\n\n\t\t\tdefault :  // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.\n\t\t\t\tthrow new Error( 'Unknown service name to point hashtag to: ', serviceName );\n\t\t}\n\t},\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\treturn '#' + this.hashtag;\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @class Autolinker.match.Phone\n * @extends Autolinker.match.Match\n *\n * Represents a Phone number match found in an input string which should be\n * Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more\n * details.\n */\nAutolinker.match.Phone = Autolinker.Util.extend( Autolinker.match.Match, {\n\n\t/**\n\t * @protected\n\t * @property {String} number (required)\n\t *\n\t * The phone number that was matched, without any delimiter characters.\n\t *\n\t * Note: This is a string to allow for prefixed 0's.\n\t */\n\n\t/**\n\t * @protected\n\t * @property  {Boolean} plusSign (required)\n\t *\n\t * `true` if the matched phone number started with a '+' sign. We'll include\n\t * it in the `tel:` URL if so, as this is needed for international numbers.\n\t *\n\t * Ex: '+1 (123) 456 7879'\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );\n\n\t\tif( !cfg.number ) throw new Error( '`number` cfg required' );\n\t\tif( cfg.plusSign == null ) throw new Error( '`plusSign` cfg required' );\n\n\t\tthis.number = cfg.number;\n\t\tthis.plusSign = cfg.plusSign;\n\t},\n\n\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'phone';\n\t},\n\n\n\t/**\n\t * Returns the phone number that was matched as a string, without any\n\t * delimiter characters.\n\t *\n\t * Note: This is a string to allow for prefixed 0's.\n\t *\n\t * @return {String}\n\t */\n\tgetNumber: function() {\n\t\treturn this.number;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\treturn 'tel:' + ( this.plusSign ? '+' : '' ) + this.number;\n\t},\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\treturn this.matchedText;\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @class Autolinker.match.Mention\n * @extends Autolinker.match.Match\n *\n * Represents a Mention match found in an input string which should be Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n */\nAutolinker.match.Mention = Autolinker.Util.extend( Autolinker.match.Match, {\n\n\t/**\n\t * @cfg {String} serviceName\n\t *\n\t * The service to point mention matches to. See {@link Autolinker#mention}\n\t * for available values.\n\t */\n\n\t/**\n\t * @cfg {String} mention (required)\n\t *\n\t * The Mention that was matched, without the '@' character.\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );\n\n\t\tif( !cfg.serviceName ) throw new Error( '`serviceName` cfg required' );\n\t\tif( !cfg.mention ) throw new Error( '`mention` cfg required' );\n\n\t\tthis.mention = cfg.mention;\n\t\tthis.serviceName = cfg.serviceName;\n\t},\n\n\n\t/**\n\t * Returns the type of match that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'mention';\n\t},\n\n\n\t/**\n\t * Returns the mention, without the '@' character.\n\t *\n\t * @return {String}\n\t */\n\tgetMention : function() {\n\t\treturn this.mention;\n\t},\n\n\n\t/**\n\t * Returns the configured {@link #serviceName} to point the mention to.\n\t * Ex: 'instagram', 'twitter'.\n\t *\n\t * @return {String}\n\t */\n\tgetServiceName : function() {\n\t\treturn this.serviceName;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\tswitch( this.serviceName ) {\n\t\t\tcase 'twitter' :\n\t\t\t\treturn 'https://twitter.com/' + this.mention;\n\t\t\tcase 'instagram' :\n\t\t\t\treturn 'https://instagram.com/' + this.mention;\n\n\t\t\tdefault :  // Shouldn't happen because Autolinker's constructor should block any invalid values, but just in case.\n\t\t\t\tthrow new Error( 'Unknown service name to point mention to: ', this.serviceName );\n\t\t}\n\t},\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\treturn '@' + this.mention;\n\t},\n\n\n\t/**\n\t * Returns the CSS class suffixes that should be used on a tag built with\n\t * the match. See {@link Autolinker.match.Match#getCssClassSuffixes} for\n\t * details.\n\t *\n\t * @return {String[]}\n\t */\n\tgetCssClassSuffixes : function() {\n\t\tvar cssClassSuffixes = Autolinker.match.Match.prototype.getCssClassSuffixes.call( this ),\n\t\t    serviceName = this.getServiceName();\n\n\t\tif( serviceName ) {\n\t\t\tcssClassSuffixes.push( serviceName );\n\t\t}\n\t\treturn cssClassSuffixes;\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @class Autolinker.match.Url\n * @extends Autolinker.match.Match\n *\n * Represents a Url match found in an input string which should be Autolinked.\n *\n * See this class's superclass ({@link Autolinker.match.Match}) for more details.\n */\nAutolinker.match.Url = Autolinker.Util.extend( Autolinker.match.Match, {\n\n\t/**\n\t * @cfg {String} url (required)\n\t *\n\t * The url that was matched.\n\t */\n\n\t/**\n\t * @cfg {\"scheme\"/\"www\"/\"tld\"} urlMatchType (required)\n\t *\n\t * The type of URL match that this class represents. This helps to determine\n\t * if the match was made in the original text with a prefixed scheme (ex:\n\t * 'http://www.google.com'), a prefixed 'www' (ex: 'www.google.com'), or\n\t * was matched by a known top-level domain (ex: 'google.com').\n\t */\n\n\t/**\n\t * @cfg {Boolean} protocolUrlMatch (required)\n\t *\n\t * `true` if the URL is a match which already has a protocol (i.e.\n\t * 'http://'), `false` if the match was from a 'www' or known TLD match.\n\t */\n\n\t/**\n\t * @cfg {Boolean} protocolRelativeMatch (required)\n\t *\n\t * `true` if the URL is a protocol-relative match. A protocol-relative match\n\t * is a URL that starts with '//', and will be either http:// or https://\n\t * based on the protocol that the site is loaded under.\n\t */\n\n\t/**\n\t * @cfg {Object} stripPrefix (required)\n\t *\n\t * The Object form of {@link Autolinker#cfg-stripPrefix}.\n\t */\n\n\t/**\n\t * @cfg {Boolean} stripTrailingSlash (required)\n\t * @inheritdoc Autolinker#cfg-stripTrailingSlash\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.match.Match.prototype.constructor.call( this, cfg );\n\n\t\tif( cfg.urlMatchType !== 'scheme' && cfg.urlMatchType !== 'www' && cfg.urlMatchType !== 'tld' ) throw new Error( '`urlMatchType` cfg must be one of: \"scheme\", \"www\", or \"tld\"' );\n\t\tif( !cfg.url ) throw new Error( '`url` cfg required' );\n\t\tif( cfg.protocolUrlMatch == null ) throw new Error( '`protocolUrlMatch` cfg required' );\n\t\tif( cfg.protocolRelativeMatch == null ) throw new Error( '`protocolRelativeMatch` cfg required' );\n\t\tif( cfg.stripPrefix == null ) throw new Error( '`stripPrefix` cfg required' );\n\t\tif( cfg.stripTrailingSlash == null ) throw new Error( '`stripTrailingSlash` cfg required' );\n\n\t\tthis.urlMatchType = cfg.urlMatchType;\n\t\tthis.url = cfg.url;\n\t\tthis.protocolUrlMatch = cfg.protocolUrlMatch;\n\t\tthis.protocolRelativeMatch = cfg.protocolRelativeMatch;\n\t\tthis.stripPrefix = cfg.stripPrefix;\n\t\tthis.stripTrailingSlash = cfg.stripTrailingSlash;\n\t},\n\n\n\t/**\n\t * @private\n\t * @property {RegExp} schemePrefixRegex\n\t *\n\t * A regular expression used to remove the 'http://' or 'https://' from\n\t * URLs.\n\t */\n\tschemePrefixRegex: /^(https?:\\/\\/)?/i,\n\n\t/**\n\t * @private\n\t * @property {RegExp} wwwPrefixRegex\n\t *\n\t * A regular expression used to remove the 'www.' from URLs.\n\t */\n\twwwPrefixRegex: /^(https?:\\/\\/)?(www\\.)?/i,\n\n\t/**\n\t * @private\n\t * @property {RegExp} protocolRelativeRegex\n\t *\n\t * The regular expression used to remove the protocol-relative '//' from the {@link #url} string, for purposes\n\t * of {@link #getAnchorText}. A protocol-relative URL is, for example, \"//yahoo.com\"\n\t */\n\tprotocolRelativeRegex : /^\\/\\//,\n\n\t/**\n\t * @private\n\t * @property {Boolean} protocolPrepended\n\t *\n\t * Will be set to `true` if the 'http://' protocol has been prepended to the {@link #url} (because the\n\t * {@link #url} did not have a protocol)\n\t */\n\tprotocolPrepended : false,\n\n\n\t/**\n\t * Returns a string name for the type of match that this class represents.\n\t *\n\t * @return {String}\n\t */\n\tgetType : function() {\n\t\treturn 'url';\n\t},\n\n\n\t/**\n\t * Returns a string name for the type of URL match that this class\n\t * represents.\n\t *\n\t * This helps to determine if the match was made in the original text with a\n\t * prefixed scheme (ex: 'http://www.google.com'), a prefixed 'www' (ex:\n\t * 'www.google.com'), or was matched by a known top-level domain (ex:\n\t * 'google.com').\n\t *\n\t * @return {\"scheme\"/\"www\"/\"tld\"}\n\t */\n\tgetUrlMatchType : function() {\n\t\treturn this.urlMatchType;\n\t},\n\n\n\t/**\n\t * Returns the url that was matched, assuming the protocol to be 'http://' if the original\n\t * match was missing a protocol.\n\t *\n\t * @return {String}\n\t */\n\tgetUrl : function() {\n\t\tvar url = this.url;\n\n\t\t// if the url string doesn't begin with a protocol, assume 'http://'\n\t\tif( !this.protocolRelativeMatch && !this.protocolUrlMatch && !this.protocolPrepended ) {\n\t\t\turl = this.url = 'http://' + url;\n\n\t\t\tthis.protocolPrepended = true;\n\t\t}\n\n\t\treturn url;\n\t},\n\n\n\t/**\n\t * Returns the anchor href that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorHref : function() {\n\t\tvar url = this.getUrl();\n\n\t\treturn url.replace( /&amp;/g, '&' );  // any &amp;'s in the URL should be converted back to '&' if they were displayed as &amp; in the source html\n\t},\n\n\n\t/**\n\t * Returns the anchor text that should be generated for the match.\n\t *\n\t * @return {String}\n\t */\n\tgetAnchorText : function() {\n\t\tvar anchorText = this.getMatchedText();\n\n\t\tif( this.protocolRelativeMatch ) {\n\t\t\t// Strip off any protocol-relative '//' from the anchor text\n\t\t\tanchorText = this.stripProtocolRelativePrefix( anchorText );\n\t\t}\n\t\tif( this.stripPrefix.scheme ) {\n\t\t\tanchorText = this.stripSchemePrefix( anchorText );\n\t\t}\n\t\tif( this.stripPrefix.www ) {\n\t\t\tanchorText = this.stripWwwPrefix( anchorText );\n\t\t}\n\t\tif( this.stripTrailingSlash ) {\n\t\t\tanchorText = this.removeTrailingSlash( anchorText );  // remove trailing slash, if there is one\n\t\t}\n\n\t\treturn anchorText;\n\t},\n\n\n\t// ---------------------------------------\n\n\t// Utility Functionality\n\n\t/**\n\t * Strips the scheme prefix (such as \"http://\" or \"https://\") from the given\n\t * `url`.\n\t *\n\t * @private\n\t * @param {String} url The text of the anchor that is being generated, for\n\t *   which to strip off the url scheme.\n\t * @return {String} The `url`, with the scheme stripped.\n\t */\n\tstripSchemePrefix : function( url ) {\n\t\treturn url.replace( this.schemePrefixRegex, '' );\n\t},\n\n\n\t/**\n\t * Strips the 'www' prefix from the given `url`.\n\t *\n\t * @private\n\t * @param {String} url The text of the anchor that is being generated, for\n\t *   which to strip off the 'www' if it exists.\n\t * @return {String} The `url`, with the 'www' stripped.\n\t */\n\tstripWwwPrefix : function( url ) {\n\t\treturn url.replace( this.wwwPrefixRegex, '$1' );  // leave any scheme ($1), it one exists\n\t},\n\n\n\t/**\n\t * Strips any protocol-relative '//' from the anchor text.\n\t *\n\t * @private\n\t * @param {String} text The text of the anchor that is being generated, for which to strip off the\n\t *   protocol-relative prefix (such as stripping off \"//\")\n\t * @return {String} The `anchorText`, with the protocol-relative prefix stripped.\n\t */\n\tstripProtocolRelativePrefix : function( text ) {\n\t\treturn text.replace( this.protocolRelativeRegex, '' );\n\t},\n\n\n\t/**\n\t * Removes any trailing slash from the given `anchorText`, in preparation for the text to be displayed.\n\t *\n\t * @private\n\t * @param {String} anchorText The text of the anchor that is being generated, for which to remove any trailing\n\t *   slash ('/') that may exist.\n\t * @return {String} The `anchorText`, with the trailing slash removed.\n\t */\n\tremoveTrailingSlash : function( anchorText ) {\n\t\tif( anchorText.charAt( anchorText.length - 1 ) === '/' ) {\n\t\t\tanchorText = anchorText.slice( 0, -1 );\n\t\t}\n\t\treturn anchorText;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @abstract\n * @class Autolinker.matcher.Matcher\n *\n * An abstract class and interface for individual matchers to find matches in\n * an input string with linkified versions of them.\n *\n * Note that Matchers do not take HTML into account - they must be fed the text\n * nodes of any HTML string, which is handled by {@link Autolinker#parse}.\n */\nAutolinker.matcher.Matcher = Autolinker.Util.extend( Object, {\n\n\t/**\n\t * @cfg {Autolinker.AnchorTagBuilder} tagBuilder (required)\n\t *\n\t * Reference to the AnchorTagBuilder instance to use to generate HTML tags\n\t * for {@link Autolinker.match.Match Matches}.\n\t */\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Matcher\n\t *   instance, specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tif( !cfg.tagBuilder ) throw new Error( '`tagBuilder` cfg required' );\n\n\t\tthis.tagBuilder = cfg.tagBuilder;\n\t},\n\n\n\t/**\n\t * Parses the input `text` and returns the array of {@link Autolinker.match.Match Matches}\n\t * for the matcher.\n\t *\n\t * @abstract\n\t * @param {String} text The text to scan and replace matches in.\n\t * @return {Autolinker.match.Match[]}\n\t */\n\tparseMatches : Autolinker.Util.abstractMethod\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.matcher.Email\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find email matches in an input string.\n *\n * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details.\n */\nAutolinker.matcher.Email = Autolinker.Util.extend( Autolinker.matcher.Matcher, {\n\n\t/**\n\t * The regular expression to match email addresses. Example match:\n\t *\n\t *     person@place.com\n\t *\n\t * @private\n\t * @property {RegExp} matcherRegex\n\t */\n\tmatcherRegex : (function() {\n\t\tvar alphaNumericChars = Autolinker.RegexLib.alphaNumericCharsStr,\n\t\t    emailRegex = new RegExp( '[' + alphaNumericChars + '\\\\-_\\';:&=+$.,]+@' ),  // something@ for email addresses (a.k.a. local-part)\n\t\t\tdomainNameRegex = Autolinker.RegexLib.domainNameRegex,\n\t\t\ttldRegex = Autolinker.RegexLib.tldRegex;  // match our known top level domains (TLDs)\n\n\t\treturn new RegExp( [\n\t\t\temailRegex.source,\n\t\t\tdomainNameRegex.source,\n\t\t\t'\\\\.', tldRegex.source   // '.com', '.net', etc\n\t\t].join( \"\" ), 'gi' );\n\t} )(),\n\n\n\t/**\n\t * @inheritdoc\n\t */\n\tparseMatches : function( text ) {\n\t\tvar matcherRegex = this.matcherRegex,\n\t\t    tagBuilder = this.tagBuilder,\n\t\t    matches = [],\n\t\t    match;\n\n\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {\n\t\t\tvar matchedText = match[ 0 ];\n\n\t\t\tmatches.push( new Autolinker.match.Email( {\n\t\t\t\ttagBuilder  : tagBuilder,\n\t\t\t\tmatchedText : matchedText,\n\t\t\t\toffset      : match.index,\n\t\t\t\temail       : matchedText\n\t\t\t} ) );\n\t\t}\n\n\t\treturn matches;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.matcher.Hashtag\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find Hashtag matches in an input string.\n */\nAutolinker.matcher.Hashtag = Autolinker.Util.extend( Autolinker.matcher.Matcher, {\n\n\t/**\n\t * @cfg {String} serviceName\n\t *\n\t * The service to point hashtag matches to. See {@link Autolinker#hashtag}\n\t * for available values.\n\t */\n\n\n\t/**\n\t * The regular expression to match Hashtags. Example match:\n\t *\n\t *     #asdf\n\t *\n\t * @private\n\t * @property {RegExp} matcherRegex\n\t */\n\tmatcherRegex : new RegExp( '#[_' + Autolinker.RegexLib.alphaNumericCharsStr + ']{1,139}', 'g' ),\n\n\t/**\n\t * The regular expression to use to check the character before a username match to\n\t * make sure we didn't accidentally match an email address.\n\t *\n\t * For example, the string \"asdf@asdf.com\" should not match \"@asdf\" as a username.\n\t *\n\t * @private\n\t * @property {RegExp} nonWordCharRegex\n\t */\n\tnonWordCharRegex : new RegExp( '[^' + Autolinker.RegexLib.alphaNumericCharsStr + ']' ),\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match instance,\n\t *   specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.matcher.Matcher.prototype.constructor.call( this, cfg );\n\n\t\tthis.serviceName = cfg.serviceName;\n\t},\n\n\n\t/**\n\t * @inheritdoc\n\t */\n\tparseMatches : function( text ) {\n\t\tvar matcherRegex = this.matcherRegex,\n\t\t    nonWordCharRegex = this.nonWordCharRegex,\n\t\t    serviceName = this.serviceName,\n\t\t    tagBuilder = this.tagBuilder,\n\t\t    matches = [],\n\t\t    match;\n\n\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {\n\t\t\tvar offset = match.index,\n\t\t\t    prevChar = text.charAt( offset - 1 );\n\n\t\t\t// If we found the match at the beginning of the string, or we found the match\n\t\t\t// and there is a whitespace char in front of it (meaning it is not a '#' char\n\t\t\t// in the middle of a word), then it is a hashtag match.\n\t\t\tif( offset === 0 || nonWordCharRegex.test( prevChar ) ) {\n\t\t\t\tvar matchedText = match[ 0 ],\n\t\t\t\t    hashtag = match[ 0 ].slice( 1 );  // strip off the '#' character at the beginning\n\n\t\t\t\tmatches.push( new Autolinker.match.Hashtag( {\n\t\t\t\t\ttagBuilder  : tagBuilder,\n\t\t\t\t\tmatchedText : matchedText,\n\t\t\t\t\toffset      : offset,\n\t\t\t\t\tserviceName : serviceName,\n\t\t\t\t\thashtag     : hashtag\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.matcher.Phone\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find Phone number matches in an input string.\n *\n * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more\n * details.\n */\nAutolinker.matcher.Phone = Autolinker.Util.extend( Autolinker.matcher.Matcher, {\n\n\t/**\n\t * The regular expression to match Phone numbers. Example match:\n\t *\n\t *     (123) 456-7890\n\t *\n\t * This regular expression has the following capturing groups:\n\t *\n\t * 1. The prefixed '+' sign, if there is one.\n\t *\n\t * @private\n\t * @property {RegExp} matcherRegex\n\t */\n\tmatcherRegex : /(?:(\\+)?\\d{1,3}[-\\040.])?\\(?\\d{3}\\)?[-\\040.]?\\d{3}[-\\040.]\\d{4}/g,  // ex: (123) 456-7890, 123 456 7890, 123-456-7890, etc.\n\n\t/**\n\t * @inheritdoc\n\t */\n\tparseMatches : function( text ) {\n\t\tvar matcherRegex = this.matcherRegex,\n\t\t    tagBuilder = this.tagBuilder,\n\t\t    matches = [],\n\t\t    match;\n\n\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {\n\t\t\t// Remove non-numeric values from phone number string\n\t\t\tvar matchedText = match[ 0 ],\n\t\t\t    cleanNumber = matchedText.replace( /\\D/g, '' ),  // strip out non-digit characters\n\t\t\t    plusSign = !!match[ 1 ];  // match[ 1 ] is the prefixed plus sign, if there is one\n\n\t\t\tmatches.push( new Autolinker.match.Phone( {\n\t\t\t\ttagBuilder  : tagBuilder,\n\t\t\t\tmatchedText : matchedText,\n\t\t\t\toffset      : match.index,\n\t\t\t\tnumber      : cleanNumber,\n\t\t\t\tplusSign    : plusSign\n\t\t\t} ) );\n\t\t}\n\n\t\treturn matches;\n\t}\n\n} );\n/*global Autolinker */\n/**\n * @class Autolinker.matcher.Mention\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find/replace username matches in an input string.\n */\nAutolinker.matcher.Mention = Autolinker.Util.extend( Autolinker.matcher.Matcher, {\n\n\t/**\n\t * Hash of regular expression to match username handles. Example match:\n\t *\n\t *     @asdf\n\t *\n\t * @private\n\t * @property {Object} matcherRegexes\n\t */\n\tmatcherRegexes : {\n\t\t\"twitter\": new RegExp( '@[_' + Autolinker.RegexLib.alphaNumericCharsStr + ']{1,20}', 'g' ),\n\t\t\"instagram\": new RegExp( '@[_.' + Autolinker.RegexLib.alphaNumericCharsStr + ']{1,50}', 'g' )\n\t},\n\n\t/**\n\t * The regular expression to use to check the character before a username match to\n\t * make sure we didn't accidentally match an email address.\n\t *\n\t * For example, the string \"asdf@asdf.com\" should not match \"@asdf\" as a username.\n\t *\n\t * @private\n\t * @property {RegExp} nonWordCharRegex\n\t */\n\tnonWordCharRegex : new RegExp( '[^' + Autolinker.RegexLib.alphaNumericCharsStr + ']' ),\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match instance,\n\t *   specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.matcher.Matcher.prototype.constructor.call( this, cfg );\n\n\t\tthis.serviceName = cfg.serviceName;\n\t},\n\n\n\t/**\n\t * @inheritdoc\n\t */\n\tparseMatches : function( text ) {\n\t\tvar matcherRegex = this.matcherRegexes[this.serviceName],\n\t\t    nonWordCharRegex = this.nonWordCharRegex,\n\t\t    serviceName = this.serviceName,\n\t\t    tagBuilder = this.tagBuilder,\n\t\t    matches = [],\n\t\t    match;\n\n\t\tif (!matcherRegex) {\n\t\t\treturn matches;\n\t\t}\n\n\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {\n\t\t\tvar offset = match.index,\n\t\t\t    prevChar = text.charAt( offset - 1 );\n\n\t\t\t// If we found the match at the beginning of the string, or we found the match\n\t\t\t// and there is a whitespace char in front of it (meaning it is not an email\n\t\t\t// address), then it is a username match.\n\t\t\tif( offset === 0 || nonWordCharRegex.test( prevChar ) ) {\n\t\t\t\tvar matchedText = match[ 0 ].replace(/\\.+$/g, ''), // strip off trailing .\n\t\t\t\t    mention = matchedText.slice( 1 );  // strip off the '@' character at the beginning\n\n\t\t\t\tmatches.push( new Autolinker.match.Mention( {\n\t\t\t\t\ttagBuilder    : tagBuilder,\n\t\t\t\t\tmatchedText   : matchedText,\n\t\t\t\t\toffset        : offset,\n\t\t\t\t\tserviceName   : serviceName,\n\t\t\t\t\tmention       : mention\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t}\n\n} );\n\n/*global Autolinker */\n/**\n * @class Autolinker.matcher.Url\n * @extends Autolinker.matcher.Matcher\n *\n * Matcher to find URL matches in an input string.\n *\n * See this class's superclass ({@link Autolinker.matcher.Matcher}) for more details.\n */\nAutolinker.matcher.Url = Autolinker.Util.extend( Autolinker.matcher.Matcher, {\n\n\t/**\n\t * @cfg {Object} stripPrefix (required)\n\t *\n\t * The Object form of {@link Autolinker#cfg-stripPrefix}.\n\t */\n\n\t/**\n\t * @cfg {Boolean} stripTrailingSlash (required)\n\t * @inheritdoc Autolinker#stripTrailingSlash\n\t */\n\n\n\t/**\n\t * @private\n\t * @property {RegExp} matcherRegex\n\t *\n\t * The regular expression to match URLs with an optional scheme, port\n\t * number, path, query string, and hash anchor.\n\t *\n\t * Example matches:\n\t *\n\t *     http://google.com\n\t *     www.google.com\n\t *     google.com/path/to/file?q1=1&q2=2#myAnchor\n\t *\n\t *\n\t * This regular expression will have the following capturing groups:\n\t *\n\t * 1.  Group that matches a scheme-prefixed URL (i.e. 'http://google.com').\n\t *     This is used to match scheme URLs with just a single word, such as\n\t *     'http://localhost', where we won't double check that the domain name\n\t *     has at least one dot ('.') in it.\n\t * 2.  Group that matches a 'www.' prefixed URL. This is only matched if the\n\t *     'www.' text was not prefixed by a scheme (i.e.: not prefixed by\n\t *     'http://', 'ftp:', etc.)\n\t * 3.  A protocol-relative ('//') match for the case of a 'www.' prefixed\n\t *     URL. Will be an empty string if it is not a protocol-relative match.\n\t *     We need to know the character before the '//' in order to determine\n\t *     if it is a valid match or the // was in a string we don't want to\n\t *     auto-link.\n\t * 4.  Group that matches a known TLD (top level domain), when a scheme\n\t *     or 'www.'-prefixed domain is not matched.\n\t * 5.  A protocol-relative ('//') match for the case of a known TLD prefixed\n\t *     URL. Will be an empty string if it is not a protocol-relative match.\n\t *     See #3 for more info.\n\t */\n\tmatcherRegex : (function() {\n\t\tvar schemeRegex = /(?:[A-Za-z][-.+A-Za-z0-9]*:(?![A-Za-z][-.+A-Za-z0-9]*:\\/\\/)(?!\\d+\\/?)(?:\\/\\/)?)/,  // match protocol, allow in format \"http://\" or \"mailto:\". However, do not match the first part of something like 'link:http://www.google.com' (i.e. don't match \"link:\"). Also, make sure we don't interpret 'google.com:8000' as if 'google.com' was a protocol here (i.e. ignore a trailing port number in this regex)\n\t\t    wwwRegex = /(?:www\\.)/,                  // starting with 'www.'\n\t\t    domainNameRegex = Autolinker.RegexLib.domainNameRegex,\n\t\t    tldRegex = Autolinker.RegexLib.tldRegex,  // match our known top level domains (TLDs)\n\t\t    alphaNumericCharsStr = Autolinker.RegexLib.alphaNumericCharsStr,\n\n\t\t    // Allow optional path, query string, and hash anchor, not ending in the following characters: \"?!:,.;\"\n\t\t    // http://blog.codinghorror.com/the-problem-with-urls/\n\t\t    urlSuffixRegex = new RegExp( '[' + alphaNumericCharsStr + '\\\\-+&@#/%=~_()|\\'$*\\\\[\\\\]?!:,.;\\u2713]*[' + alphaNumericCharsStr + '\\\\-+&@#/%=~_()|\\'$*\\\\[\\\\]\\u2713]' );\n\n\t\treturn new RegExp( [\n\t\t\t'(?:', // parens to cover match for scheme (optional), and domain\n\t\t\t\t'(',  // *** Capturing group $1, for a scheme-prefixed url (ex: http://google.com)\n\t\t\t\t\tschemeRegex.source,\n\t\t\t\t\tdomainNameRegex.source,\n\t\t\t\t')',\n\n\t\t\t\t'|',\n\n\t\t\t\t'(',  // *** Capturing group $2, for a 'www.' prefixed url (ex: www.google.com)\n\t\t\t\t\t'(//)?',  // *** Capturing group $3 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character (handled later)\n\t\t\t\t\twwwRegex.source,\n\t\t\t\t\tdomainNameRegex.source,\n\t\t\t\t')',\n\n\t\t\t\t'|',\n\n\t\t\t\t'(',  // *** Capturing group $4, for known a TLD url (ex: google.com)\n\t\t\t\t\t'(//)?',  // *** Capturing group $5 for an optional protocol-relative URL. Must be at the beginning of the string or start with a non-word character (handled later)\n\t\t\t\t\tdomainNameRegex.source + '\\\\.',\n\t\t\t\t\ttldRegex.source,\n\t\t\t\t')',\n\t\t\t')',\n\n\t\t\t'(?:' + urlSuffixRegex.source + ')?'  // match for path, query string, and/or hash anchor - optional\n\t\t].join( \"\" ), 'gi' );\n\t} )(),\n\n\n\t/**\n\t * A regular expression to use to check the character before a protocol-relative\n\t * URL match. We don't want to match a protocol-relative URL if it is part\n\t * of another word.\n\t *\n\t * For example, we want to match something like \"Go to: //google.com\",\n\t * but we don't want to match something like \"abc//google.com\"\n\t *\n\t * This regular expression is used to test the character before the '//'.\n\t *\n\t * @private\n\t * @type {RegExp} wordCharRegExp\n\t */\n\twordCharRegExp : /\\w/,\n\n\n\t/**\n\t * The regular expression to match opening parenthesis in a URL match.\n\t *\n\t * This is to determine if we have unbalanced parenthesis in the URL, and to\n\t * drop the final parenthesis that was matched if so.\n\t *\n\t * Ex: The text \"(check out: wikipedia.com/something_(disambiguation))\"\n\t * should only autolink the inner \"wikipedia.com/something_(disambiguation)\"\n\t * part, so if we find that we have unbalanced parenthesis, we will drop the\n\t * last one for the match.\n\t *\n\t * @private\n\t * @property {RegExp}\n\t */\n\topenParensRe : /\\(/g,\n\n\t/**\n\t * The regular expression to match closing parenthesis in a URL match. See\n\t * {@link #openParensRe} for more information.\n\t *\n\t * @private\n\t * @property {RegExp}\n\t */\n\tcloseParensRe : /\\)/g,\n\n\n\t/**\n\t * @constructor\n\t * @param {Object} cfg The configuration properties for the Match instance,\n\t *   specified in an Object (map).\n\t */\n\tconstructor : function( cfg ) {\n\t\tAutolinker.matcher.Matcher.prototype.constructor.call( this, cfg );\n\n\t\tif( cfg.stripPrefix == null ) throw new Error( '`stripPrefix` cfg required' );\n\t\tif( cfg.stripTrailingSlash == null ) throw new Error( '`stripTrailingSlash` cfg required' );\n\n\t\tthis.stripPrefix = cfg.stripPrefix;\n\t\tthis.stripTrailingSlash = cfg.stripTrailingSlash;\n\t},\n\n\n\t/**\n\t * @inheritdoc\n\t */\n\tparseMatches : function( text ) {\n\t\tvar matcherRegex = this.matcherRegex,\n\t\t    stripPrefix = this.stripPrefix,\n\t\t    stripTrailingSlash = this.stripTrailingSlash,\n\t\t    tagBuilder = this.tagBuilder,\n\t\t    matches = [],\n\t\t    match;\n\n\t\twhile( ( match = matcherRegex.exec( text ) ) !== null ) {\n\t\t\tvar matchStr = match[ 0 ],\n\t\t\t    schemeUrlMatch = match[ 1 ],\n\t\t\t    wwwUrlMatch = match[ 2 ],\n\t\t\t    wwwProtocolRelativeMatch = match[ 3 ],\n\t\t\t    //tldUrlMatch = match[ 4 ],  -- not needed at the moment\n\t\t\t    tldProtocolRelativeMatch = match[ 5 ],\n\t\t\t    offset = match.index,\n\t\t\t    protocolRelativeMatch = wwwProtocolRelativeMatch || tldProtocolRelativeMatch,\n\t\t\t\tprevChar = text.charAt( offset - 1 );\n\n\t\t\tif( !Autolinker.matcher.UrlMatchValidator.isValid( matchStr, schemeUrlMatch ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If the match is preceded by an '@' character, then it is either\n\t\t\t// an email address or a username. Skip these types of matches.\n\t\t\tif( offset > 0 && prevChar === '@' ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If it's a protocol-relative '//' match, but the character before the '//'\n\t\t\t// was a word character (i.e. a letter/number), then we found the '//' in the\n\t\t\t// middle of another word (such as \"asdf//asdf.com\"). In this case, skip the\n\t\t\t// match.\n\t\t\tif( offset > 0 && protocolRelativeMatch && this.wordCharRegExp.test( prevChar ) ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// Handle a closing parenthesis at the end of the match, and exclude\n\t\t\t// it if there is not a matching open parenthesis in the match\n\t\t\t// itself.\n\t\t\tif( this.matchHasUnbalancedClosingParen( matchStr ) ) {\n\t\t\t\tmatchStr = matchStr.substr( 0, matchStr.length - 1 );  // remove the trailing \")\"\n\t\t\t} else {\n\t\t\t\t// Handle an invalid character after the TLD\n\t\t\t\tvar pos = this.matchHasInvalidCharAfterTld( matchStr, schemeUrlMatch );\n\t\t\t\tif( pos > -1 ) {\n\t\t\t\t\tmatchStr = matchStr.substr( 0, pos ); // remove the trailing invalid chars\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar urlMatchType = schemeUrlMatch ? 'scheme' : ( wwwUrlMatch ? 'www' : 'tld' ),\n\t\t\t    protocolUrlMatch = !!schemeUrlMatch;\n\n\t\t\tmatches.push( new Autolinker.match.Url( {\n\t\t\t\ttagBuilder            : tagBuilder,\n\t\t\t\tmatchedText           : matchStr,\n\t\t\t\toffset                : offset,\n\t\t\t\turlMatchType          : urlMatchType,\n\t\t\t\turl                   : matchStr,\n\t\t\t\tprotocolUrlMatch      : protocolUrlMatch,\n\t\t\t\tprotocolRelativeMatch : !!protocolRelativeMatch,\n\t\t\t\tstripPrefix           : stripPrefix,\n\t\t\t\tstripTrailingSlash    : stripTrailingSlash\n\t\t\t} ) );\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\n\t/**\n\t * Determines if a match found has an unmatched closing parenthesis. If so,\n\t * this parenthesis will be removed from the match itself, and appended\n\t * after the generated anchor tag.\n\t *\n\t * A match may have an extra closing parenthesis at the end of the match\n\t * because the regular expression must include parenthesis for URLs such as\n\t * \"wikipedia.com/something_(disambiguation)\", which should be auto-linked.\n\t *\n\t * However, an extra parenthesis *will* be included when the URL itself is\n\t * wrapped in parenthesis, such as in the case of \"(wikipedia.com/something_(disambiguation))\".\n\t * In this case, the last closing parenthesis should *not* be part of the\n\t * URL itself, and this method will return `true`.\n\t *\n\t * @private\n\t * @param {String} matchStr The full match string from the {@link #matcherRegex}.\n\t * @return {Boolean} `true` if there is an unbalanced closing parenthesis at\n\t *   the end of the `matchStr`, `false` otherwise.\n\t */\n\tmatchHasUnbalancedClosingParen : function( matchStr ) {\n\t\tvar lastChar = matchStr.charAt( matchStr.length - 1 );\n\n\t\tif( lastChar === ')' ) {\n\t\t\tvar openParensMatch = matchStr.match( this.openParensRe ),\n\t\t\t    closeParensMatch = matchStr.match( this.closeParensRe ),\n\t\t\t    numOpenParens = ( openParensMatch && openParensMatch.length ) || 0,\n\t\t\t    numCloseParens = ( closeParensMatch && closeParensMatch.length ) || 0;\n\n\t\t\tif( numOpenParens < numCloseParens ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\n\n\t/**\n\t * Determine if there's an invalid character after the TLD in a URL. Valid\n\t * characters after TLD are ':/?#'. Exclude scheme matched URLs from this\n\t * check.\n\t *\n\t * @private\n\t * @param {String} urlMatch The matched URL, if there was one. Will be an\n\t *   empty string if the match is not a URL match.\n\t * @param {String} schemeUrlMatch The match URL string for a scheme\n\t *   match. Ex: 'http://yahoo.com'. This is used to match something like\n\t *   'http://localhost', where we won't double check that the domain name\n\t *   has at least one '.' in it.\n\t * @return {Number} the position where the invalid character was found. If\n\t *   no such character was found, returns -1\n\t */\n\tmatchHasInvalidCharAfterTld : function( urlMatch, schemeUrlMatch ) {\n\t\tif( !urlMatch ) {\n\t\t\treturn -1;\n\t\t}\n\n\t\tvar offset = 0;\n\t\tif ( schemeUrlMatch ) {\n\t\t\toffset = urlMatch.indexOf(':');\n\t\t\turlMatch = urlMatch.slice(offset);\n\t\t}\n\n\t\tvar re = /^((.?\\/\\/)?[A-Za-z0-9\\u00C0-\\u017F\\.\\-]*[A-Za-z0-9\\u00C0-\\u017F\\-]\\.[A-Za-z]+)/;\n\t\tvar res = re.exec( urlMatch );\n\t\tif ( res === null ) {\n\t\t\treturn -1;\n\t\t}\n\n\t\toffset += res[1].length;\n\t\turlMatch = urlMatch.slice(res[1].length);\n\t\tif (/^[^.A-Za-z:\\/?#]/.test(urlMatch)) {\n\t\t\treturn offset;\n\t\t}\n\n\t\treturn -1;\n\t}\n\n} );\n/*global Autolinker */\n/*jshint scripturl:true */\n/**\n * @private\n * @class Autolinker.matcher.UrlMatchValidator\n * @singleton\n *\n * Used by Autolinker to filter out false URL positives from the\n * {@link Autolinker.matcher.Url UrlMatcher}.\n *\n * Due to the limitations of regular expressions (including the missing feature\n * of look-behinds in JS regular expressions), we cannot always determine the\n * validity of a given match. This class applies a bit of additional logic to\n * filter out any false positives that have been matched by the\n * {@link Autolinker.matcher.Url UrlMatcher}.\n */\nAutolinker.matcher.UrlMatchValidator = {\n\n\t/**\n\t * Regex to test for a full protocol, with the two trailing slashes. Ex: 'http://'\n\t *\n\t * @private\n\t * @property {RegExp} hasFullProtocolRegex\n\t */\n\thasFullProtocolRegex : /^[A-Za-z][-.+A-Za-z0-9]*:\\/\\//,\n\n\t/**\n\t * Regex to find the URI scheme, such as 'mailto:'.\n\t *\n\t * This is used to filter out 'javascript:' and 'vbscript:' schemes.\n\t *\n\t * @private\n\t * @property {RegExp} uriSchemeRegex\n\t */\n\turiSchemeRegex : /^[A-Za-z][-.+A-Za-z0-9]*:/,\n\n\t/**\n\t * Regex to determine if at least one word char exists after the protocol (i.e. after the ':')\n\t *\n\t * @private\n\t * @property {RegExp} hasWordCharAfterProtocolRegex\n\t */\n\thasWordCharAfterProtocolRegex : /:[^\\s]*?[A-Za-z\\u00C0-\\u017F]/,\n\n\t/**\n\t * Regex to determine if the string is a valid IP address\n\t *\n\t * @private\n\t * @property {RegExp} ipRegex\n\t */\n\tipRegex: /[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?\\.[0-9][0-9]?[0-9]?(:[0-9]*)?\\/?$/,\n\n\t/**\n\t * Determines if a given URL match found by the {@link Autolinker.matcher.Url UrlMatcher}\n\t * is valid. Will return `false` for:\n\t *\n\t * 1) URL matches which do not have at least have one period ('.') in the\n\t *    domain name (effectively skipping over matches like \"abc:def\").\n\t *    However, URL matches with a protocol will be allowed (ex: 'http://localhost')\n\t * 2) URL matches which do not have at least one word character in the\n\t *    domain name (effectively skipping over matches like \"git:1.0\").\n\t * 3) A protocol-relative url match (a URL beginning with '//') whose\n\t *    previous character is a word character (effectively skipping over\n\t *    strings like \"abc//google.com\")\n\t *\n\t * Otherwise, returns `true`.\n\t *\n\t * @param {String} urlMatch The matched URL, if there was one. Will be an\n\t *   empty string if the match is not a URL match.\n\t * @param {String} protocolUrlMatch The match URL string for a protocol\n\t *   match. Ex: 'http://yahoo.com'. This is used to match something like\n\t *   'http://localhost', where we won't double check that the domain name\n\t *   has at least one '.' in it.\n\t * @return {Boolean} `true` if the match given is valid and should be\n\t *   processed, or `false` if the match is invalid and/or should just not be\n\t *   processed.\n\t */\n\tisValid : function( urlMatch, protocolUrlMatch ) {\n\t\tif(\n\t\t\t( protocolUrlMatch && !this.isValidUriScheme( protocolUrlMatch ) ) ||\n\t\t\tthis.urlMatchDoesNotHaveProtocolOrDot( urlMatch, protocolUrlMatch ) ||    // At least one period ('.') must exist in the URL match for us to consider it an actual URL, *unless* it was a full protocol match (like 'http://localhost')\n\t\t\t(this.urlMatchDoesNotHaveAtLeastOneWordChar( urlMatch, protocolUrlMatch ) && // At least one letter character must exist in the domain name after a protocol match. Ex: skip over something like \"git:1.0\"\n\t\t\t !this.isValidIpAddress( urlMatch ) // Except if it's an IP address\n\t\t\t)\n\t\t) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t},\n\n\n\tisValidIpAddress : function ( uriSchemeMatch ) {\n\t\tvar newRegex = new RegExp(this.hasFullProtocolRegex.source + this.ipRegex.source);\n\t\tvar uriScheme = uriSchemeMatch.match( newRegex );\n\n\t\treturn uriScheme !== null;\n\t},\n\n\t/**\n\t * Determines if the URI scheme is a valid scheme to be autolinked. Returns\n\t * `false` if the scheme is 'javascript:' or 'vbscript:'\n\t *\n\t * @private\n\t * @param {String} uriSchemeMatch The match URL string for a full URI scheme\n\t *   match. Ex: 'http://yahoo.com' or 'mailto:a@a.com'.\n\t * @return {Boolean} `true` if the scheme is a valid one, `false` otherwise.\n\t */\n\tisValidUriScheme : function( uriSchemeMatch ) {\n\t\tvar uriScheme = uriSchemeMatch.match( this.uriSchemeRegex )[ 0 ].toLowerCase();\n\n\t\treturn ( uriScheme !== 'javascript:' && uriScheme !== 'vbscript:' );\n\t},\n\n\n\t/**\n\t * Determines if a URL match does not have either:\n\t *\n\t * a) a full protocol (i.e. 'http://'), or\n\t * b) at least one dot ('.') in the domain name (for a non-full-protocol\n\t *    match).\n\t *\n\t * Either situation is considered an invalid URL (ex: 'git:d' does not have\n\t * either the '://' part, or at least one dot in the domain name. If the\n\t * match was 'git:abc.com', we would consider this valid.)\n\t *\n\t * @private\n\t * @param {String} urlMatch The matched URL, if there was one. Will be an\n\t *   empty string if the match is not a URL match.\n\t * @param {String} protocolUrlMatch The match URL string for a protocol\n\t *   match. Ex: 'http://yahoo.com'. This is used to match something like\n\t *   'http://localhost', where we won't double check that the domain name\n\t *   has at least one '.' in it.\n\t * @return {Boolean} `true` if the URL match does not have a full protocol,\n\t *   or at least one dot ('.') in a non-full-protocol match.\n\t */\n\turlMatchDoesNotHaveProtocolOrDot : function( urlMatch, protocolUrlMatch ) {\n\t\treturn ( !!urlMatch && ( !protocolUrlMatch || !this.hasFullProtocolRegex.test( protocolUrlMatch ) ) && urlMatch.indexOf( '.' ) === -1 );\n\t},\n\n\n\t/**\n\t * Determines if a URL match does not have at least one word character after\n\t * the protocol (i.e. in the domain name).\n\t *\n\t * At least one letter character must exist in the domain name after a\n\t * protocol match. Ex: skip over something like \"git:1.0\"\n\t *\n\t * @private\n\t * @param {String} urlMatch The matched URL, if there was one. Will be an\n\t *   empty string if the match is not a URL match.\n\t * @param {String} protocolUrlMatch The match URL string for a protocol\n\t *   match. Ex: 'http://yahoo.com'. This is used to know whether or not we\n\t *   have a protocol in the URL string, in order to check for a word\n\t *   character after the protocol separator (':').\n\t * @return {Boolean} `true` if the URL match does not have at least one word\n\t *   character in it after the protocol, `false` otherwise.\n\t */\n\turlMatchDoesNotHaveAtLeastOneWordChar : function( urlMatch, protocolUrlMatch ) {\n\t\tif( urlMatch && protocolUrlMatch ) {\n\t\t\treturn !this.hasWordCharAfterProtocolRegex.test( urlMatch );\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n};\n/*global Autolinker */\n/**\n * A truncation feature where the ellipsis will be placed at the end of the URL.\n *\n * @param {String} anchorText\n * @param {Number} truncateLen The maximum length of the truncated output URL string.\n * @param {String} ellipsisChars The characters to place within the url, e.g. \"..\".\n * @return {String} The truncated URL.\n */\nAutolinker.truncate.TruncateEnd = function(anchorText, truncateLen, ellipsisChars){\n\treturn Autolinker.Util.ellipsis( anchorText, truncateLen, ellipsisChars );\n};\n\n/*global Autolinker */\n/**\n * Date: 2015-10-05\n * Author: Kasper Søfren <soefritz@gmail.com> (https://github.com/kafoso)\n *\n * A truncation feature, where the ellipsis will be placed in the dead-center of the URL.\n *\n * @param {String} url             A URL.\n * @param {Number} truncateLen     The maximum length of the truncated output URL string.\n * @param {String} ellipsisChars   The characters to place within the url, e.g. \"..\".\n * @return {String} The truncated URL.\n */\nAutolinker.truncate.TruncateMiddle = function(url, truncateLen, ellipsisChars){\n  if (url.length <= truncateLen) {\n    return url;\n  }\n  var availableLength = truncateLen - ellipsisChars.length;\n  var end = \"\";\n  if (availableLength > 0) {\n    end = url.substr((-1)*Math.floor(availableLength/2));\n  }\n  return (url.substr(0, Math.ceil(availableLength/2)) + ellipsisChars + end).substr(0, truncateLen);\n};\n\n/*global Autolinker */\n/**\n * Date: 2015-10-05\n * Author: Kasper Søfren <soefritz@gmail.com> (https://github.com/kafoso)\n *\n * A truncation feature, where the ellipsis will be placed at a section within\n * the URL making it still somewhat human readable.\n *\n * @param {String} url\t\t\t\t\t\t A URL.\n * @param {Number} truncateLen\t\t The maximum length of the truncated output URL string.\n * @param {String} ellipsisChars\t The characters to place within the url, e.g. \"..\".\n * @return {String} The truncated URL.\n */\nAutolinker.truncate.TruncateSmart = function(url, truncateLen, ellipsisChars){\n\tvar parse_url = function(url){ // Functionality inspired by PHP function of same name\n\t\tvar urlObj = {};\n\t\tvar urlSub = url;\n\t\tvar match = urlSub.match(/^([a-z]+):\\/\\//i);\n\t\tif (match) {\n\t\t\turlObj.scheme = match[1];\n\t\t\turlSub = urlSub.substr(match[0].length);\n\t\t}\n\t\tmatch = urlSub.match(/^(.*?)(?=(\\?|#|\\/|$))/i);\n\t\tif (match) {\n\t\t\turlObj.host = match[1];\n\t\t\turlSub = urlSub.substr(match[0].length);\n\t\t}\n\t\tmatch = urlSub.match(/^\\/(.*?)(?=(\\?|#|$))/i);\n\t\tif (match) {\n\t\t\turlObj.path = match[1];\n\t\t\turlSub = urlSub.substr(match[0].length);\n\t\t}\n\t\tmatch = urlSub.match(/^\\?(.*?)(?=(#|$))/i);\n\t\tif (match) {\n\t\t\turlObj.query = match[1];\n\t\t\turlSub = urlSub.substr(match[0].length);\n\t\t}\n\t\tmatch = urlSub.match(/^#(.*?)$/i);\n\t\tif (match) {\n\t\t\turlObj.fragment = match[1];\n\t\t\t//urlSub = urlSub.substr(match[0].length);  -- not used. Uncomment if adding another block.\n\t\t}\n\t\treturn urlObj;\n\t};\n\n\tvar buildUrl = function(urlObj){\n\t\tvar url = \"\";\n\t\tif (urlObj.scheme && urlObj.host) {\n\t\t\turl += urlObj.scheme + \"://\";\n\t\t}\n\t\tif (urlObj.host) {\n\t\t\turl += urlObj.host;\n\t\t}\n\t\tif (urlObj.path) {\n\t\t\turl += \"/\" + urlObj.path;\n\t\t}\n\t\tif (urlObj.query) {\n\t\t\turl += \"?\" + urlObj.query;\n\t\t}\n\t\tif (urlObj.fragment) {\n\t\t\turl += \"#\" + urlObj.fragment;\n\t\t}\n\t\treturn url;\n\t};\n\n\tvar buildSegment = function(segment, remainingAvailableLength){\n\t\tvar remainingAvailableLengthHalf = remainingAvailableLength/ 2,\n\t\t\t\tstartOffset = Math.ceil(remainingAvailableLengthHalf),\n\t\t\t\tendOffset = (-1)*Math.floor(remainingAvailableLengthHalf),\n\t\t\t\tend = \"\";\n\t\tif (endOffset < 0) {\n\t\t\tend = segment.substr(endOffset);\n\t\t}\n\t\treturn segment.substr(0, startOffset) + ellipsisChars + end;\n\t};\n\tif (url.length <= truncateLen) {\n\t\treturn url;\n\t}\n\tvar availableLength = truncateLen - ellipsisChars.length;\n\tvar urlObj = parse_url(url);\n\t// Clean up the URL\n\tif (urlObj.query) {\n\t\tvar matchQuery = urlObj.query.match(/^(.*?)(?=(\\?|\\#))(.*?)$/i);\n\t\tif (matchQuery) {\n\t\t\t// Malformed URL; two or more \"?\". Removed any content behind the 2nd.\n\t\t\turlObj.query = urlObj.query.substr(0, matchQuery[1].length);\n\t\t\turl = buildUrl(urlObj);\n\t\t}\n\t}\n\tif (url.length <= truncateLen) {\n\t\treturn url;\n\t}\n\tif (urlObj.host) {\n\t\turlObj.host = urlObj.host.replace(/^www\\./, \"\");\n\t\turl = buildUrl(urlObj);\n\t}\n\tif (url.length <= truncateLen) {\n\t\treturn url;\n\t}\n\t// Process and build the URL\n\tvar str = \"\";\n\tif (urlObj.host) {\n\t\tstr += urlObj.host;\n\t}\n\tif (str.length >= availableLength) {\n\t\tif (urlObj.host.length == truncateLen) {\n\t\t\treturn (urlObj.host.substr(0, (truncateLen - ellipsisChars.length)) + ellipsisChars).substr(0, truncateLen);\n\t\t}\n\t\treturn buildSegment(str, availableLength).substr(0, truncateLen);\n\t}\n\tvar pathAndQuery = \"\";\n\tif (urlObj.path) {\n\t\tpathAndQuery += \"/\" + urlObj.path;\n\t}\n\tif (urlObj.query) {\n\t\tpathAndQuery += \"?\" + urlObj.query;\n\t}\n\tif (pathAndQuery) {\n\t\tif ((str+pathAndQuery).length >= availableLength) {\n\t\t\tif ((str+pathAndQuery).length == truncateLen) {\n\t\t\t\treturn (str + pathAndQuery).substr(0, truncateLen);\n\t\t\t}\n\t\t\tvar remainingAvailableLength = availableLength - str.length;\n\t\t\treturn (str + buildSegment(pathAndQuery, remainingAvailableLength)).substr(0, truncateLen);\n\t\t} else {\n\t\t\tstr += pathAndQuery;\n\t\t}\n\t}\n\tif (urlObj.fragment) {\n\t\tvar fragment = \"#\"+urlObj.fragment;\n\t\tif ((str+fragment).length >= availableLength) {\n\t\t\tif ((str+fragment).length == truncateLen) {\n\t\t\t\treturn (str + fragment).substr(0, truncateLen);\n\t\t\t}\n\t\t\tvar remainingAvailableLength2 = availableLength - str.length;\n\t\t\treturn (str + buildSegment(fragment, remainingAvailableLength2)).substr(0, truncateLen);\n\t\t} else {\n\t\t\tstr += fragment;\n\t\t}\n\t}\n\tif (urlObj.scheme && urlObj.host) {\n\t\tvar scheme = urlObj.scheme + \"://\";\n\t\tif ((str+scheme).length < availableLength) {\n\t\t\treturn (scheme + str).substr(0, truncateLen);\n\t\t}\n\t}\n\tif (str.length <= truncateLen) {\n\t\treturn str;\n\t}\n\tvar end = \"\";\n\tif (availableLength > 0) {\n\t\tend = str.substr((-1)*Math.floor(availableLength/2));\n\t}\n\treturn (str.substr(0, Math.ceil(availableLength/2)) + ellipsisChars + end).substr(0, truncateLen);\n};\n\nreturn Autolinker;\n}));\n","/**\n * primaryEmail takes the given email addresses and returns the email address\n * marked as 'Primary'.\n * If none exists it returns the first active email address.\n *\n * @param emailAddresses {Array}: Array containing the email addresses.\n *\n * @returns email_address {String}: The primary email address.\n */\nangular.module('app.filters').filter('primaryEmail', primaryEmail);\n\nprimaryEmail.$inject = ['$filter'];\nfunction primaryEmail($filter) {\n    return function(emailAddresses) {\n        var primaryEmailAddress = '';\n        var filteredEmailAddresses = $filter('filter')(emailAddresses, {status: '!' + 0});\n\n        if (filteredEmailAddresses && filteredEmailAddresses.length) {\n            primaryEmailAddress = $filter('filter')(filteredEmailAddresses, {status: 2})[0];\n\n            if (!primaryEmailAddress) {\n                // No primary email set, so just get the first active email address.\n                primaryEmailAddress = filteredEmailAddresses[0];\n            }\n\n            primaryEmailAddress = primaryEmailAddress.email_address;\n        }\n\n        return primaryEmailAddress;\n    };\n}\n","/**\n * stripScheme strips the scheme of the given URL (e.g. http://).\n *\n * @param url {string}: String containing the URL\n *\n * @returns: string: The stripped URL\n */\nangular.module('app.filters').filter('stripScheme', stripScheme);\n\nstripScheme.$inject = [];\nfunction stripScheme() {\n    return function(url) {\n        return url.replace(/http(s)?:\\/\\//, '');\n    };\n}\n","angular.module('app.filters').filter('trustAsResourceUrl', trustAsResourceUrl);\n\ntrustAsResourceUrl.$inject = ['$sce'];\nfunction trustAsResourceUrl($sce) {\n    return function(val) {\n        return $sce.trustAsResourceUrl(val);\n    };\n}\n","angular.module('app.services').factory('AppHash', AppHash);\n\nAppHash.$inject = ['$resource', 'HLCache', 'CacheFactory'];\nfunction AppHash($resource, HLCache, CacheFactory) {\n    return $resource(\n        '/api/utils/apphash/',\n        null,\n        {\n            get: {\n                cache: CacheFactory.get('dataCache'),\n            },\n        }\n    );\n}\n","angular.module('app.services').factory('Country', Country);\n\nCountry.$inject = ['$q', 'Account'];\nfunction Country($q, Account) {\n    var list = [];\n    var _country = {};\n\n    _country.getList = getList;\n\n    activate();\n\n    ////\n\n    function activate() {\n        getList();\n    }\n\n    function getList() {\n        var deferred = $q.defer();\n        if (list.length) {\n            deferred.resolve(list);\n        } else {\n            // Fetch the country choices from Address model\n            Account.addressOptions(function(data) {\n                list = data.actions.POST.country.choices;\n                deferred.resolve(list);\n            });\n        }\n\n        return deferred.promise;\n    }\n\n    return _country;\n}\n","/**\n * HLCache Service provides a way to re-use one cache for different APIs.\n */\n\nangular.module('app.services').service('HLCache', HLCache);\n\nHLCache.$inject = ['CacheFactory'];\nfunction HLCache(CacheFactory) {\n    // Create the cache.\n    new CacheFactory('dataCache', {\n        // Items added to this cache expire after 5 minutes.\n        maxAge: 5 * 60 * 1000,\n        // Expired items will remain in the cache until requested, at which point they are removed.\n        deleteOnExpire: 'passive',\n    });\n\n    new CacheFactory('userCache', {\n        // Items added to this cache expire after 5 minutes.\n        maxAge: 5 * 60 * 1000,\n        // Expired items will remain in the cache until requested, at which point they are removed.\n        deleteOnExpire: 'passive',\n    });\n}\n","angular.module('app.services').service('HLFields', HLFields);\n\nfunction HLFields() {\n    /**\n     * cleanRelatedFields() cleans the related fields of the given objects.\n     * For now it only removes fields that have the is_deleted flag set to true.\n     *\n     * @param object (object): the object to clean.\n     *\n     * @returns (object): returns the object with the related fields cleaned.\n     */\n    this.cleanRelatedFields = function(object) {\n        var relatedFields = ['email_addresses', 'phone_numbers', 'websites', 'addresses'];\n\n        angular.forEach(object, function(fieldValues, field) {\n            var cleanedValues = [];\n\n            // We only want to clean the related fields, so check if the field is a related field.\n            if (relatedFields.indexOf(field) > -1) {\n                // Loop through each array element.\n                angular.forEach(fieldValues, function(fieldValue) {\n                    if (!fieldValue.hasOwnProperty('is_deleted')) {\n                        if (fieldValue.email_address) {\n                            cleanedValues.push(fieldValue);\n                        }\n\n                        if (fieldValue.number) {\n                            cleanedValues.push(fieldValue);\n                        }\n\n                        if (fieldValue.address && (fieldValue.city || fieldValue.postal_code)) {\n                            cleanedValues.push(fieldValue);\n                        }\n\n                        if (fieldValue.website) {\n                            if (!fieldValue.is_primary || (fieldValue.is_primary && object.primaryWebsite)) {\n                                if (fieldValue.website !== object.primaryWebsite) {\n                                    fieldValue.is_primary = false;\n                                }\n\n                                cleanedValues.push(fieldValue);\n                            }\n                        }\n                    }\n                });\n\n                object[field] = cleanedValues;\n            }\n        });\n\n        return object;\n    };\n\n    this.cleanInlineRelatedFields = function(items) {\n        var cleanedValues = [];\n\n        angular.forEach(items, function(item) {\n            if (item.email_address || item.number || (item.address && (item.city ||\n                item.postal_code)) || item.website) {\n                if (item.id || !item.hasOwnProperty('is_deleted')) {\n                    cleanedValues.push(item);\n                }\n            }\n        });\n\n        return cleanedValues;\n    };\n\n    this.addRelatedField = function(object, field) {\n        // Default status is 'Other'.\n        var status = 1;\n        var isPrimary = false;\n\n        switch (field) {\n            case 'emailAddress':\n                if (object.email_addresses.length === 0) {\n                    // No email addresses added yet, so first one is primary.\n                    status = 2;\n                    isPrimary = true;\n                }\n\n                object.email_addresses.push({is_primary: isPrimary, status: status});\n                break;\n            case 'phoneNumber':\n                object.phone_numbers.push({type: 'work'});\n                break;\n            case 'address':\n                object.addresses.push({type: 'visiting'});\n                break;\n            case 'website':\n                object.websites.push({website: '', is_primary: false});\n                break;\n            default:\n                break;\n        }\n    };\n\n    this.removeRelatedField = function(object, field, index, remove) {\n        switch (field) {\n            case 'emailAddress':\n                object.email_addresses[index].is_deleted = remove;\n                break;\n            case 'phoneNumber':\n                object.phone_numbers[index].is_deleted = remove;\n                break;\n            case 'address':\n                object.addresses[index].is_deleted = remove;\n                break;\n            case 'website':\n                object.websites[index].is_deleted = remove;\n                break;\n            default:\n                break;\n        }\n    };\n}\n","angular.module('app.services').service('HLFilters', HLFilters);\n\nfunction HLFilters() {\n    this.updateFilterQuery = function(viewModel, hasClearButtons) {\n        // Update the filter based on the separate filters.\n        var filterStrings = [];\n        var specialFilterStrings = [];\n        var filterList = viewModel.filterList;\n\n        viewModel.table.filterQuery = '';\n\n        if (hasClearButtons) {\n            this._displayClearButtons(viewModel);\n        }\n\n        if (viewModel.filterSpecialList) {\n            filterList = filterList.concat(viewModel.filterSpecialList);\n        }\n\n        filterList.forEach(function(filter) {\n            if (filter.id && filter.id === 'is_archived') {\n                if (!filter.selected) {\n                    filterStrings.push('is_archived:false');\n                }\n            } else {\n                if (filter.selected) {\n                    if (filter.isSpecialFilter) {\n                        specialFilterStrings.push(filter.value);\n                    } else {\n                        filterStrings.push(filter.value);\n                    }\n                }\n            }\n        });\n\n        if (viewModel.table.dueDateFilter) {\n            filterStrings.push(viewModel.table.dueDateFilter);\n        }\n\n        // If we have type filter, we join them OR-wise.\n        if (specialFilterStrings.length > 0) {\n            filterStrings.push('(' + specialFilterStrings.join(' OR ') + ')');\n        }\n\n        if (viewModel.table.usersFilter) {\n            filterStrings.push('(' + viewModel.table.usersFilter + ')');\n        }\n\n        // Finally join all filters AND-wise.\n        viewModel.table.filterQuery = filterStrings.join(' AND ');\n    };\n\n    this._displayClearButtons = function(viewModel) {\n        viewModel.displayFilterClear = false;\n        viewModel.displaySpecialFilterClear = false;\n\n        viewModel.filterList.forEach(function(filter) {\n            if (filter.selected) {\n                viewModel.displayFilterClear = true;\n            }\n        });\n\n        if (viewModel.filterSpecialList) {\n            viewModel.filterSpecialList.forEach(function(filter) {\n                if (filter.selected) {\n                    viewModel.displaySpecialFilterClear = true;\n                }\n            });\n        }\n    };\n\n    this.clearFilters = function(viewModel, clearSpecial) {\n        if (clearSpecial) {\n            viewModel.filterSpecialList.forEach(function(filter) {\n                filter.selected = false;\n            });\n        } else {\n            viewModel.filterList.forEach(function(filter) {\n                filter.selected = false;\n            });\n        }\n\n        viewModel.updateFilterQuery();\n    };\n\n    this.getStoredSelections = function(filterList, storedFilterList) {\n        if (storedFilterList) {\n            // Stored filter list exists, merge the selections from with the stored values.\n            angular.forEach(storedFilterList, function(storedFilter) {\n                angular.forEach(filterList, function(filter) {\n                    if (storedFilter.name === filter.name) {\n                        filter.selected = storedFilter.selected;\n                    }\n                });\n            });\n        }\n    };\n}\n","angular.module('app.services').service('HLForms', HLForms);\n\nHLForms.$inject = ['$timeout'];\nfunction HLForms($timeout) {\n    /**\n     * setErrors() sets the errors of the forms, making use of Angular's error handling.\n     *\n     * @param form (object): the form on which the errors are set\n     * @param data (object): object containing all the errors\n     *\n     */\n    this.setErrors = function(form, data) {\n        var field;\n        var i;\n        var key;\n        var formField;\n\n        // Unblock the UI so user can retry filling in the form.\n        Metronic.unblockUI();\n\n        // We don't want to continue if the returned errors aren't properly formatted.\n        if (typeof data === 'object') {\n            for (field in data) {\n                // Errors are always in the <field>: Array format, so iterate over the array.\n                for (i = 0; i < data[field].length; i++) {\n                    // Related fields are always an object, so check for that.\n                    if (typeof data[field][i] === 'object') {\n                        for (key in data[field][i]) {\n                            formField = [field, key, i].join('-');\n\n                            // The error is always the first element, so get it and set as the error message.\n                            form[formField].$error = {message: data[field][i][key][0]};\n                            form[formField].$setValidity(formField, false);\n                        }\n                    } else {\n                        // Not a related field, so get the error and set validity to false.\n                        form[field].$error = {message: data[field][0]};\n                        form[field].$setValidity(field, false);\n                    }\n                }\n            }\n\n            $timeout(function() {\n                angular.element('.form-control.ng-invalid:first').focus();\n            });\n        }\n    };\n\n    /**\n     * Clear all errors of the form (in case of new errors).\n     * @param form (object): The form from which the errors should be cleared.\n     */\n    this.clearErrors = function(form) {\n        angular.forEach(form, function(value, key) {\n            if (typeof value === 'object' && value.hasOwnProperty('$modelValue')) {\n                form[key].$error = {};\n                form[key].$setValidity(key, true);\n            }\n        });\n    };\n\n    /**\n     * Clean the fields of the given view model.\n     * @param viewModel (object): The view model that's being created/updated.\n     */\n    this.clean = function(viewModel) {\n        // We don't want to clean certain fields.\n        var ignoredFields = ['tags'];\n        var ids = [];\n\n        angular.forEach(viewModel, function(fieldValue, field) {\n            if (ignoredFields.indexOf(field) < 0 && fieldValue) {\n                // We don't want to send whole objects to the API, because they're not accepted.\n                // So loop through all fields and extract IDs.\n                if (fieldValue.constructor === Array) {\n                    angular.forEach(fieldValue, function(item) {\n                        if (typeof item === 'object') {\n                            if (item.hasOwnProperty('id')) {\n                                ids.push(item.id);\n                            }\n                        } else if (typeof item === 'number') {\n                            // Seems to be an ID, so just add it to the ID array.\n                            ids.push(item);\n                        }\n                    });\n\n                    viewModel[field] = ids;\n                } else if (typeof fieldValue === 'object') {\n                    if (fieldValue.hasOwnProperty('id')) {\n                        viewModel[field] = fieldValue.id;\n                    } else if (fieldValue.hasOwnProperty('value')) {\n                        viewModel[field] = fieldValue.value;\n                    }\n                }\n            }\n        });\n\n        return viewModel;\n    };\n\n    /**\n     * Block the UI, giving the user feedback about the form.\n     */\n    this.blockUI = function() {\n        // animate shows a CSS animation instead of the standard 'Loading' text.\n        Metronic.blockUI({animate: true});\n    };\n}\n","angular.module('app.services').service('HLGravatar', HLGravatar);\n\nfunction HLGravatar() {\n    this.getGravatar = function(email) {\n        var trimmedEmail = email.trim();\n        var lowerCasedEmail = trimmedEmail.toLowerCase();\n        var gravatarHash = md5(lowerCasedEmail);\n\n        return 'https://secure.gravatar.com/avatar/' + gravatarHash + '?s=200&d=mm';\n    };\n}\n","angular.module('app.services').factory('HLMessages', HLMessages);\n\nHLMessages.$inject = [];\nfunction HLMessages() {\n    var mod = 'CTRL';\n    if (navigator.userAgent.indexOf('Mac OS X') !== -1) {\n        mod = '⌘';\n    }\n\n    return {\n        contact: {\n            accountInfoTooltip: 'I\\'ve loaded the selected account\\'s data for you. Now you don\\'t have to enter duplicate data!',\n            accountListInfoTooltip: 'This is the data of the account(s) the contact works for',\n            contactInfoTooltip: 'This is the current contact\\'s data',\n        },\n        alerts: {\n            accountForm: {\n                title: 'Website already exists',\n                body: 'This website has already been added to an existing account: <br />' +\n                '<strong>%(account)s</strong><br />' +\n                'Are you sure you want to use:<br />' +\n                '%(website)s',\n                cancelButtonText: 'No, clear the field',\n            },\n            delete: {\n                confirmTitle: 'Are you sure?',\n                confirmText: 'You are about to delete <strong>%(name)s</strong>.<br />You won\\'t be able to revert this!',\n                confirmButtonText: 'Yes, delete it!',\n                successTitle: 'Deleted',\n                successText: 'The %(model)s <strong>%(name)s</strong> has been deleted.',\n                errorTitle: 'Error',\n                errorText: 'There was an error processing your request.<br />Please try again.',\n            },\n            assignTo: {\n                title: 'Assign this %(type)s',\n                questionText: 'Assign this %(type)s to yourself?',\n            },\n            deactivateUser: {\n                confirmText: 'Are you sure you want to deactivate <strong>%(name)s</strong>',\n                confirmButtonText: 'Yes, deactivate',\n                successTitle: 'Deactivated!',\n                successText: '<strong>%(name)s</strong> has been deactivated.',\n            },\n            postpone: {\n                dealTitle: 'Change next step date',\n                caseTitle: 'Change expiry date',\n                deal: 'Wrong day to solve it?<br />Set to today or postpone it.',\n                case: 'Not the right day to act upon it?<br />Set to today or postpone it.',\n                datepicker: 'Or manually select a date:',\n            },\n            dashboard: {\n                title: 'Widget settings',\n            },\n            deals: {\n                title: 'Why lost?',\n            },\n            email: {\n                sendCheckerTitle: 'No recipient',\n                sendCheckerText: 'I couldn\\'t find a recipient, could you please fill in where I need to send this mail.',\n                overwriteTemplateConfirm: 'Selecting a different template will reload the template. This will put your typed text at the bottom of the email. Do you want to load the template anyway?',\n                reloadTemplateConfirm: 'Do you want to reload the template? This will load the template variables, but will put your text at the bottom of the email.',\n            },\n            preferences: {\n                userAssignTitle: 'Assign %(user)s to teams',\n                shareAccountTitle: 'Yes, let me share this email account',\n            },\n        },\n        tooltips: {\n            modEnter: {\n                title: mod + '+Enter',\n            },\n            newlyAssignedCase: 'Add it to \\'My cases\\'',\n            newlyAssignedDeal: 'Add it to \\'My deals\\'',\n        },\n    };\n}\n","angular.module('app.services').service('HLNotifications', HLNotifications);\n\nHLNotifications.$inject = ['$state', 'LocalStorage', 'HLSockets'];\nfunction HLNotifications($state, LocalStorage, HLSockets) {\n    let sendNotification = false;\n\n    _notificationWindowCheck();\n\n    HLSockets.bind('notification', data => {\n        _notificationWindowCheck();\n        if (sendNotification && 'Notification' in window) {\n            if (Notification.permission === 'granted') {\n                _makeNotification(data);\n            } else if (Notification.permission !== 'denied') {\n                // If the user has not already accepted or denied notifications\n                // permission will be asked to send the notification.\n                Notification.requestPermission(function(permission) {\n                    if (permission === 'granted') {\n                        _makeNotification(data);\n                    } else if (permission === 'denied') {\n                        // Close the WebSocket connection as it serves no purpose anymore.\n                        HLSockets.close('Notification access denied');\n                    }\n                });\n            }\n        }\n    });\n\n    function _makeNotification(data) {\n        let notification;\n        // If there is no name available, use the phone number in the title of the notification\n        if (data.params.name !== '') {\n            notification = new Notification(data.params.name + ' calling', {body: data.params.number, icon: data.icon});\n        } else {\n            notification = new Notification(data.params.number + ' calling', {body: '', icon: data.icon});\n        }\n        setTimeout(() => { notification.close(); }, 5000);\n        ga('send', 'event', 'Caller info', 'Answer', 'Incoming call');\n        notification.onclick = () => {\n            switch (data.destination) {\n                case 'account':\n                    window.open($state.href('base.accounts.detail', {id: data.params.id}), '_blank');\n                    break;\n                case 'contact':\n                    window.open($state.href('base.contacts.detail', {id: data.params.id}), '_blank');\n                    break;\n                case 'create':\n                    // There is no way to know if an account or contact needs to be created. As it's more\n                    // likely an account needs to be created, this links to account.create.\n                    window.open($state.href('base.accounts.create', {\n                        name: data.params.name,\n                        phone_number: data.params.number,\n                    }), '_blank');\n                    break;\n                default:\n                    break;\n            }\n            notification.close();\n            ga('send', 'event', 'Caller info', 'Open', 'Popup');\n        };\n    }\n\n    function _notificationWindowCheck() {\n        // This function makes sure notifications are only shown once if\n        // Lily is open in multiple windows/tabs.\n        const storage = new LocalStorage('notificationWindow');\n        let dateNow = new Date();\n        let timestamp = storage.getObjectValue('timestamp', false);\n        if (!timestamp || timestamp < dateNow.getTime() - 4000) {\n            // The window sending the notifications will write a timestamp to localstorage\n            // every second. When a notification is received and the timestamp is\n            // older than 2 seconds, another window will take over.\n            storage.putObjectValue('timestamp', dateNow.getTime());\n            sendNotification = true;\n            setInterval(() => {\n                dateNow = new Date();\n                storage.putObjectValue('timestamp', dateNow.getTime());\n            }, 1000);\n        }\n    }\n}\n","angular.module('app.services').service('HLResource', HLResource);\n\nHLResource.$inject = ['$injector'];\nfunction HLResource($injector) {\n    this.patch = function(model, args) {\n        return $injector.get(model).patch(args, function() {\n            toastr.success('I\\'ve updated the ' + model.toLowerCase() + ' for you!', 'Done');\n        }, function() {\n            toastr.error('Something went wrong while saving the field, please try again.', 'Oops!');\n            // For now return an empty string, we'll implement proper errors later.\n            return '';\n        });\n    };\n\n    this.delete = function(model, object) {\n        return $injector.get(model).delete({id: object.id}).$promise.then(function() {\n            toastr.success('I\\'ve deleted the ' + model.toLowerCase() + ' for you!', 'Done');\n        });\n    };\n\n    /**\n     * Gets the options for the given field which can be used for selects.\n     * @param model {string}: The model that's loaded.\n     * @param field {string}: The field for which the values will be retrieved.\n     *\n     * @returns: values {Array}: The retrieved values.\n     */\n    this.getChoicesForField = function(model, field) {\n        // Dynamically get resource.\n        var resource = $injector.get(model);\n        var convertedField = _convertVariableName(field);\n        var key;\n        var choices;\n\n        if (!resource.hasOwnProperty(convertedField)) {\n            // Resource doesn't contain the given field.\n            // So the field is probably a plural version of the given field or whatever.\n            for (key in resource) {\n                if (key.indexOf(convertedField) > -1) {\n                    choices = resource[key]();\n                }\n            }\n        } else {\n            // Call the proper endpoint/field.\n            choices = resource[convertedField]();\n        }\n\n        return choices;\n    };\n\n    /**\n     * Creates an object with the data the object will be patched with.\n     * @param data: The changed data. Can be an object or just a value.\n     * @param [field] {string}: What field the data will be set to.\n     * @param [model] {Object}: The model from which data can be retrieved.\n     *\n     * @returns args {Object}: The data the object will be patched with.\n     */\n    this.createArgs = function(data, field, model) {\n        var args;\n\n        if (data && !Array.isArray(data) && typeof data === 'object') {\n            args = data;\n        } else {\n            args = {\n                id: model.id,\n            };\n\n            args[field] = data;\n        }\n\n        return args;\n    };\n\n    this.setSocialMediaFields = function(object) {\n        if (object.social_media) {\n            object.social_media.forEach(function(profile) {\n                object[profile.name] = profile;\n            });\n        }\n    };\n\n    /**\n     * Converts the given variable name so it can be used to retrieve a field of the given resource.\n     * @param name {string}: The string that will be converted to camelCase.\n     *\n     * @returns {string}: The converted variable name.\n     */\n    function _convertVariableName(name) {\n        var splitName = name.split('_');\n        var convertedName = 'get';\n        var i;\n\n        // Convert to title case.\n        for (i = 0; i < splitName.length; i++) {\n            convertedName += splitName[i].charAt(0).toUpperCase() + splitName[i].slice(1);\n        }\n\n        return convertedName;\n    }\n}\n","angular.module('app.services').factory('HLSearch', HLSearch);\n\nHLSearch.$inject = ['$injector', 'Tag'];\nfunction HLSearch($injector, Tag) {\n    HLSearch.refreshList = refreshList;\n    HLSearch.refreshTags = refreshTags;\n    HLSearch.getOpenCasesDeals = getOpenCasesDeals;\n\n    function refreshList(query, modelName, extraFilterQuery, sortColumn = '-modified', nameColumn = 'name') {\n        var items;\n\n        // Dynamically get the model.\n        var model = $injector.get(modelName);\n\n        var extraQuery = extraFilterQuery ? extraFilterQuery : '';\n\n        if (query.length) {\n            // At least 2 characters need to be entered.\n            if (query.length >= 2) {\n                // Only exclude items if we have a multi-select field.\n                items = model.search({\n                    filterquery: nameColumn + ':(' + query + ')' + extraQuery,\n                    size: 60,\n                    sort: sortColumn,\n                });\n            }\n        } else {\n            // No query yet, so just get the last 60 items of the given model.\n            items = model.search({filterquery: extraQuery, size: 60, sort: sortColumn});\n        }\n\n        return items;\n    }\n\n    function refreshTags(searchQuery, object, type) {\n        var tagsPromise;\n        var i;\n\n        var tags = object.tags;\n        var contentTypeQuery = 'content_type.name:' + type;\n        var query = searchQuery + ',' + contentTypeQuery;\n        var filterquery = contentTypeQuery;\n\n        // Exclude tags already selected.\n        for (i = 0; i < tags.length; i++) {\n            filterquery += ' AND NOT name_flat:' + tags[i].name;\n        }\n\n        tagsPromise = Tag.search({query: query, filterquery: filterquery});\n\n        return tagsPromise;\n    }\n\n    /**\n     * Search for open cases or deals belonging to the object's account and/or contact.\n     *\n     * @param closedStatusQuery {string}: Contains the filterquery string for the open status(es).\n     * @param object {Object}: The case or deal that's used for the queries.\n     * @param modelName {String}: Specifies if it's a case or deal.\n     */\n    function getOpenCasesDeals(closedStatusQuery, object, modelName) {\n        var filterQuery = closedStatusQuery;\n\n        if (object.id) {\n            // Filter out the current case.\n            filterQuery += ' AND NOT id: ' + object.id;\n        }\n\n        if (object.account && object.contact) {\n            filterQuery += ' AND (account.id:' + object.account.id + ' OR (account.id:' + object.account.id + ' AND contact.id:' + object.contact.id + '))';\n        } else {\n            if (object.account) {\n                filterQuery += ' AND account.id:' + object.account.id;\n            }\n\n            if (object.contact) {\n                filterQuery += ' AND contact.id:' + object.contact.id;\n            }\n        }\n\n        // Inject the model's service and execute the search query.\n        return $injector.get(modelName).search({filterquery: filterQuery}).$promise;\n    }\n\n    return HLSearch;\n}\n","angular.module('app.services').service('HLShortcuts', HLShortcuts);\n\nHLShortcuts.$inject = ['$state', '$timeout', '$rootScope', 'Settings'];\nfunction HLShortcuts($state, $timeout, $rootScope, Settings) {\n    // Use $rootScope because $root is unavailable in services.\n    // This watches the change in states so we can execute certain Mousetrap\n    // functions on specific pages.\n    $rootScope.$on('$stateChangeSuccess', function() {\n        var state = $state.current.name;\n        if (state === 'base.email.list') {\n            Mousetrap.bind('c', function() {\n                $state.go('base.email.compose');\n                // Unbind after pressed so next bind can take place.\n                Mousetrap.unbind('c');\n            });\n        }\n\n        if (state === 'base.email.detail') {\n            Mousetrap.bind('c', function() {\n                _replyViaShortcode();\n                // Unbind after pressed so next bind can take place.\n                Mousetrap.unbind('c');\n            });\n\n            Mousetrap.bind('r', function() {\n                _replyViaShortcode();\n                // Unbind after pressed so next bind can take place.\n                Mousetrap.unbind('r');\n            });\n\n            Mousetrap.bind('d', function() {\n                // Broadcast event for email/controllers/detail.js to handle\n                // sending the particular email to trash.\n                $rootScope.$broadcast('deleteMessageByShortCode');\n                // Unbind after pressed so next bind can take place.\n                Mousetrap.unbind('d');\n            });\n\n            Mousetrap.bind('e', function() {\n                // Broadcast event for email/controllers/detail.js to handle\n                // sending the particular email to trash.\n                $rootScope.$broadcast('archiveMessageByShortCode');\n                // Unbind after pressed so next bind can take place.\n                Mousetrap.unbind('e');\n            });\n        }\n\n        if (state === 'base.email.compose') {\n            Mousetrap.bind('mod+enter', function() {\n                // Submit the email form.\n                document.getElementById('fileupload').submit();\n            });\n        } else if (state === 'base.deals.detail.edit' || state === 'base.deals.create') {\n            Mousetrap.bindGlobal('mod+enter', function() {\n                // Broadcast event for deals/controllers/createupdate.js to save\n                // the deal.\n                $rootScope.$broadcast('saveDeal');\n            }, 'keyup');\n        } else if (state === 'base.cases.detail.edit' || state === 'base.cases.create') {\n            Mousetrap.bindGlobal('mod+enter', function() {\n                // Broadcast event for cases/controllers/createupdate.js to save\n                // the case.\n                $rootScope.$broadcast('saveCase');\n            }, 'keyup');\n        } else if (state === 'base.contacts.detail.edit' || state === 'base.contacts.create') {\n            Mousetrap.bindGlobal('mod+enter', function() {\n                // Broadcast event for contact/controllers/createupdate.js to save\n                // the contact.\n                $rootScope.$broadcast('saveContact');\n            });\n        } else if (state === 'base.accounts.detail.edit' || state === 'base.accounts.create') {\n            Mousetrap.bindGlobal('mod+enter', function() {\n                // Broadcast event for account/controllers/createupdate.js to save\n                // the account.\n                $rootScope.$broadcast('saveAccount');\n            });\n        } else if (state === 'base.email.detail') {\n            Mousetrap.bindGlobal('mod+enter', function() {\n                // Broadcast event for account/controllers/createupdate.js to save\n                // the account.\n                if (Settings.email.sidebar.form === 'account') {\n                    $rootScope.$broadcast('saveAccount');\n                } else if (Settings.email.sidebar.form === 'contact') {\n                    $rootScope.$broadcast('saveContact');\n                }\n            });\n        } else {\n            // Unbind when not a form page.\n            Mousetrap.unbind('mod+enter');\n        }\n\n        // Function for both the c and r key when in Email Detail view.\n        function _replyViaShortcode() {\n            var message = $state.params.id;\n            if (message) {\n                $state.go('base.email.reply', {id: message});\n            }\n        }\n\n        $timeout(function() {\n            var searchField = '.hl-search-field';\n\n            if (angular.element(searchField).length) {\n                Mousetrap.bind('s', function() {\n                    var scope = angular.element($(searchField).get(0)).scope();\n                    angular.element(searchField).focus();\n                    // TODO: Remove if statement if Contacts get refactored\n                    // To utilize vm.table. instead of table.\n                    if (state === 'base.contacts') {\n                        scope.table.filter = '';\n\n                        // TODO: Remove else if statement if we refactor code to\n                        // make the filter/search model consistent.\n                    } else if (state === 'base.deals' || state === 'base.cases') {\n                        scope.vm.table.searchQuery = '';\n                    } else {\n                        scope.vm.table.filter = '';\n                    }\n                    scope.$apply();\n                }, 'keyup');\n            }\n        });\n    });\n}\n","angular.module('app.services').service('HLSockets', HLSockets);\n\nHLSockets.$inject = ['$state', '$timeout', '$rootScope', 'Settings'];\nfunction HLSockets($state, $timeout, $rootScope, Settings) {\n    const wsEnabled = 'WebSocket' in window &&\n        'Notification' in window &&\n        Notification.permission !== 'denied' &&\n        currentUser.internalNumber;\n\n    const listeners = {};\n    let ws = null;\n\n    if (wsEnabled) {\n        const wsScheme = window.location.protocol === 'https:' ? 'wss' : 'ws';\n        ws = new ReconnectingWebSocket(wsScheme + '://' + window.location.host + '/');\n\n        // Dispatch open and close events so these can be bound to.\n        ws.onopen = () => this.dispatch('open');\n        ws.onclose = () => this.dispatch('close');\n        ws.onmessage = message => {\n            const data = JSON.parse(message.data);\n            this.dispatch(data.event, data.data);\n        };\n    }\n\n    // Allow functions to bind to specific WebSocket events.\n    this.bind = (type, callback) => {\n        listeners[type] = listeners[type] || [];\n        listeners[type].push(callback);\n        return this;\n    };\n\n    this.close = (reason = '') => {\n        if (wsEnabled) ws.close(1000, reason);\n    };\n\n    this.dispatch = (type, data = null) => {\n        // Dispatches the event and its data to all functions bound to the event.\n        if (!(type in listeners)) return;\n        for (const callback of listeners[type]) {\n            callback(data);\n        }\n    };\n}\n","angular.module('app.services').service('HLUtils', HLUtils);\n\nfunction HLUtils() {\n    this.formatPhoneNumber = function(phoneNumber) {\n        var newNumber;\n\n        if (!phoneNumber.number || phoneNumber.number.match(/[a-z]/i)) {\n            // If letters are found, skip formatting: it may not be a phone field after all.\n            return false;\n        }\n\n        // Format phone number\n        newNumber = phoneNumber.number\n            .replace('(0)', '')\n            .replace(/\\s|\\(|\\-|\\)|\\.|\\\\|\\/|\\–|x|:|\\*/g, '')\n            .replace(/^00/, '+');\n\n        if (newNumber.length === 0) {\n            return false;\n        }\n\n        // Check if it's a mobile phone number.\n        if (newNumber.match(/^\\+31([\\(0\\)]+)?6|^06/)) {\n            // Set phone number type to mobile.\n            phoneNumber.type = 'mobile';\n        }\n\n        if (!newNumber.startsWith('+')) {\n            if (newNumber.startsWith('0')) {\n                newNumber = newNumber.substring(1);\n            }\n\n            newNumber = '+31' + newNumber;\n        }\n\n        if (newNumber.startsWith('+310')) {\n            newNumber = '+31' + newNumber.substring(4);\n        }\n\n        phoneNumber.number = newNumber;\n\n        return phoneNumber;\n    };\n\n    this.setPrimaryEmailAddress = function(emailAddress, emailAddresses) {\n        // Check if the status of an email address is 'Primary'.\n        if (emailAddress.status === 2) {\n            angular.forEach(emailAddresses, function(email) {\n                // Set the status of the other (active) email addresses to 'Other'.\n                if (emailAddress !== email && email.status !== 0) {\n                    email.status = 1;\n                }\n            });\n        }\n    };\n\n    this.getFullName = function(user) {\n        // Join strings in array while ignoring empty values.\n        return [user.first_name, user.last_name].filter(function(val) { return val; }).join(' ');\n    };\n\n    this.getSorting = function(field, descending) {\n        var sort = '';\n        sort += descending ? '-' : '';\n        sort += field;\n\n        return sort;\n    };\n\n    this.timeCategorizeObjects = function(data, field) {\n        var now = moment();\n        var tomorrow = moment().add('1', 'day');\n        var day;\n\n        var items = {\n            newlyAssigned: [],\n            expired: [],\n            today: [],\n            tomorrow: [],\n            later: [],\n        };\n\n        angular.forEach(data, function(item) {\n            if (item[field]) {\n                day = moment(item[field]);\n\n                if (item.newly_assigned && item.assigned_to.id === currentUser.id) {\n                    items.newlyAssigned.push(item);\n                } else if (day.isBefore(now, 'day')) {\n                    items.expired.push(item);\n                } else if (day.isSame(now, 'day')) {\n                    items.today.push(item);\n                } else if (day.isSame(tomorrow, 'day')) {\n                    items.tomorrow.push(item);\n                } else {\n                    items.later.push(item);\n                }\n            } else {\n                items.later.push(item);\n            }\n        });\n\n        return items;\n    };\n\n    this.addBusinessDays = function(daysToAdd, date) {\n        var i = 0;\n        var newDate;\n\n        if (date) {\n            // Given date might not be a moment object, so just convert it.\n            newDate = moment(date);\n        } else {\n            newDate = moment();\n        }\n\n        // Add days based on what the priority is. Skip weekends.\n        while (i < daysToAdd) {\n            newDate = newDate.add(1, 'day');\n\n            if (newDate.day() !== 0 && newDate.day() !== 6) {\n                i++;\n            }\n        }\n\n        return newDate.toDate();\n    };\n\n    /**\n     * The will block the interface for a specific element.\n     *\n     * @param target {string} the element to be blocked.\n     * @param animate {boolean} if there needs to be an animation on the element.\n     */\n    this.blockUI = function(target, animate) {\n        Metronic.blockUI(\n            {\n                css: {backgroundColor: '#ff0000'},\n                target: target,\n                animate: animate,\n            }\n        );\n    };\n\n    /**\n     * Unblock the interface that was set with blockUI.\n     *\n     * @param target {string} the element that needs to be unblocked\n     */\n    this.unblockUI = function(target) {\n        Metronic.unblockUI(target);\n    };\n\n    this.decodeHtmlEntities = function(str) {\n        var chars = {quot: 34, amp: 38, lt: 60, gt: 62, nbsp: 160, copy: 169, reg: 174, deg: 176, frasl: 47, trade: 8482, euro: 8364, Agrave: 192, Aacute: 193, Acirc: 194, Atilde: 195, Auml: 196, Aring: 197, AElig: 198, Ccedil: 199, Egrave: 200, Eacute: 201, Ecirc: 202, Euml: 203, Igrave: 204, Iacute: 205, Icirc: 206, Iuml: 207, ETH: 208, Ntilde: 209, Ograve: 210, Oacute: 211, Ocirc: 212, Otilde: 213, Ouml: 214, times: 215, Oslash: 216, Ugrave: 217, Uacute: 218, Ucirc: 219, Uuml: 220, Yacute: 221, THORN: 222, szlig: 223, agrave: 224, aacute: 225, acirc: 226, atilde: 227, auml: 228, aring: 229, aelig: 230, ccedil: 231, egrave: 232, eacute: 233, ecirc: 234, euml: 235, igrave: 236, iacute: 237, icirc: 238, iuml: 239, eth: 240, ntilde: 241, ograve: 242, oacute: 243, ocirc: 244, otilde: 245, ouml: 246, divide: 247, oslash: 248, ugrave: 249, uacute: 250, ucirc: 251, uuml: 252, yacute: 253, thorn: 254, yuml: 255, lsquo: 8216, rsquo: 8217, sbquo: 8218, ldquo: 8220, rdquo: 8221, bdquo: 8222, dagger: 8224, Dagger: 8225, permil: 8240, lsaquo: 8249, rsaquo: 8250, spades: 9824, clubs: 9827, hearts: 9829, diams: 9830, oline: 8254, larr: 8592, uarr: 8593, rarr: 8594, darr: 8595, hellip: 133, ndash: 150, mdash: 151, iexcl: 161, cent: 162, pound: 163, curren: 164, yen: 165, brvbar: 166, brkbar: 166, sect: 167, uml: 168, die: 168, ordf: 170, laquo: 171, not: 172, shy: 173, macr: 175, hibar: 175, plusmn: 177, sup2: 178, sup3: 179, acute: 180, micro: 181, para: 182, middot: 183, cedil: 184, sup1: 185, ordm: 186, raquo: 187, frac14: 188, frac12: 189, frac34: 190, iquest: 191, Alpha: 913, alpha: 945, Beta: 914, beta: 946, Gamma: 915, gamma: 947, Delta: 916, delta: 948, Epsilon: 917, epsilon: 949, Zeta: 918, zeta: 950, Eta: 919, eta: 951, Theta: 920, theta: 952, Iota: 921, iota: 953, Kappa: 922, kappa: 954, Lambda: 923, lambda: 955, Mu: 924, mu: 956, Nu: 925, nu: 957, Xi: 926, xi: 958, Omicron: 927, omicron: 959, Pi: 928, pi: 960, Rho: 929, rho: 961, Sigma: 931, sigma: 963, Tau: 932, tau: 964, Upsilon: 933, upsilon: 965, Phi: 934, phi: 966, Chi: 935, chi: 967, Psi: 936, psi: 968, Omega: 937, omega: 969};\n        return str.replace(/&#?(\\w+);/g, function(match, char) {\n            var asciiChar = char;\n\n            // Look for html entities and replace with actual character (dec is the ascii character number).\n            if (isNaN(char)) {\n                if (chars[char] !== undefined) {\n                    asciiChar = chars[char];\n                }\n            }\n            return String.fromCharCode(asciiChar);\n        });\n    };\n}\n","/**\n * LocalStorage Service provides a simple interface to get and store local storage values\n *\n * Set `prefix` to give local storage keys a prefix\n */\nangular.module('app.services').service('LocalStorage', LocalStorageService);\n\nLocalStorageService.$inject = [];\nfunction LocalStorageService() {\n    function LocalStorageFactory(prefix) {\n        return new LocalStorage(prefix);\n    }\n\n    function LocalStorage(prefix) {\n        this.prefix = prefix;\n    }\n\n    /**\n     * Try to retrieve and return a value from the local storage or\n     * returns a default value if local storage doesn't exist.\n     *\n     * @param field {string}: Name of the field to retrieve info from\n     * @param defaultValue {*} : Default value when locally stored doesn't exist\n     * @returns {*}: Retrieved or default value\n     */\n    LocalStorage.prototype.get = function(field, defaultValue) {\n        var value = localStorage.getItem(this.prefix + field);\n\n        try {\n            value = JSON.parse(value);\n\n            return (value !== null) ? value : defaultValue;\n        } catch (error) {\n            localStorage.removeItem(this.prefix + field);\n            return defaultValue;\n        }\n    };\n\n    /**\n     * Try to retrieve and return an object from the local storage or\n     * returns a default value if local storage doesn't exist.\n     *\n     * @param field {string}: Name of the field to retrieve info from\n     * @param defaultValue {*} : Default value when local storage doesn't exist\n     * @returns {*}: Retrieved or default value\n     */\n    LocalStorage.prototype.getObjectValue = function(field, defaultValue) {\n        var storage;\n        var values;\n        var value;\n\n        try {\n            storage = this;\n            values = storage.get('', defaultValue);\n            value = values[field];\n\n            return value ? value : defaultValue;\n        } catch (error) {\n            localStorage.removeItem(this.prefix[field]);\n            return defaultValue;\n        }\n    };\n\n    /**\n     * Creates/updates a local storage based on the given prefix + field name.\n     *\n     * @param field {string}: Name of the field to be created/updated\n     * @param value {*} : The value to be stored\n     */\n    LocalStorage.prototype.put = function(field, value) {\n        var convertedValue = JSON.stringify(value);\n\n        localStorage.setItem(this.prefix + field, convertedValue);\n    };\n\n    /**\n     * Stores an object as a local storage instead of creating a local storage for every option.\n     * @param field {string}: Name of the field to be created/updated\n     * @param value {*} : The value of the local storage\n     */\n    LocalStorage.prototype.putObjectValue = function(field, value) {\n        var storage = this;\n        var values = storage.get('', {});\n        values[field] = value;\n\n        localStorage.setItem(this.prefix, JSON.stringify(values));\n    };\n\n    return LocalStorageFactory;\n}\n","angular.module('app.services').factory('Settings', ['LocalStorage', function() {\n    let page = new Page(...arguments);\n    return {\n        page: page,\n        email: page.email,\n    };\n}]);\n\n/**\n * Class representing the main settings object for the email sidebar layout.\n */\nclass Sidebar {\n    constructor() {\n        this.account = null;\n        this.contact = null;\n        this.cases = null;\n        this.deals = null;\n        this.form = null;\n        this.isVisible = false;\n    }\n}\n\n/**\n * Class representing the main settings object for email layout.\n */\nclass Email {\n    /**\n     * Initialize email layout.\n     * @param {LocalStorage} storage - LocalStorage instance.\n     */\n    constructor(storage) {\n        this.sidebar = new Sidebar();\n        this.storage = storage;\n        this.title = 'Welcome';\n        this.previousInbox = this.storage.get('previousInbox', null);\n        this.page = 0;\n        this.toRemove = [];\n    }\n\n    /**\n     * Set previous email state.\n     * @param {Object} previousInbox - Email state object.\n     */\n    setPreviousInbox(previousInbox) {\n        this.storage.put('previousInbox', previousInbox);\n        this.previousInbox = previousInbox;\n    }\n\n    /**\n     * Reset all the data properties that concern the email layout.\n     */\n    resetEmailSettings() {\n        // email.sidebar stores the state of sidebar panels (so hidden/closed).\n        this.sidebar = {\n            account: null,\n            contact: null,\n            case: null,\n            deal: null,\n            form: null,\n            isVisible: false,\n        };\n\n        // email.data stores the actual data which is used for the sidebars.\n        this.data = {\n            website: null,\n            account: null,\n            contact: null,\n            cases: null,\n            deals: null,\n        };\n    }\n}\n\n/**\n * Class representing the main settings object for page header layout.\n */\nclass Header {\n    constructor() {\n        this.main = 'Lily';\n    }\n\n    /**\n     * Sets the header's main title.\n     * @param {String} pageType - The page category/type, e.g. `custom`/list`/`create`.\n     * @param {String} newHeader - The new name to use in the title.\n     * @return {String} The new title.\n     */\n    setMain(pageType, newHeader) {\n        var formats = {\n            create: 'New ',\n            edit: 'Edit ',\n            custom: '',\n        };\n\n        if (pageType && newHeader) {\n            if (formats[pageType]) {\n                this.main = formats[pageType] + newHeader;\n            } else {\n                this.main = newHeader.charAt(0).toUpperCase() + newHeader.slice(1);\n            }\n        }\n    }\n}\n\nclass Toolbar {\n    constructor() {\n        this.data = null;\n    }\n}\n\n/**\n * Class representing the main settings object for page layout.\n */\nclass Page {\n    constructor(localStorage) {\n        this.storage = localStorage('generalSettings');\n        this.title = 'Welcome';\n\n        this.email = new Email(this.storage);\n        this.header = new Header();\n        this.toolbar = new Toolbar();\n        this.previousState = null;\n    }\n\n    /**\n     * Sets tab/window border title, but also the header's title and (optional)\n     * context of contact/account.\n     * @param {String} pageType - The page category/type, e.g. `custom`/list`/`create`.\n     * @param {String} objectInfo - The type of objects the page shows, e.g. `accounts`/`contacts`.\n     * @param {Contact} contact - A contact object to set the page context to.\n     * @param {Account} account - An account object to set the page context to.\n     */\n    setAllTitles(pageType, objectInfo, contact = null, account = null) {\n        // Make sure sidebar forms don't set the titles/headers.\n        if (!this.email.sidebar.form) {\n            this.title = objectInfo.charAt(0).toUpperCase() + objectInfo.slice(1);\n            this.header.setMain(pageType, objectInfo);\n            this.contact = contact;\n            this.account = account;\n        }\n    }\n}\n","angular.module('app.brand').config(brandConfig); \n\nbrandConfig.$inject = ['$stateProvider'];\nfunction brandConfig($stateProvider) {\n    $stateProvider.state('base.brand', {\n        url: '/brand',\n        views: {\n            '@': {\n                templateUrl: 'brand/controllers/index.html',\n                controller: BrandController,\n                controllerAs: 'vm',\n            },\n        },\n        ncyBreadcrumb: {\n            label: 'Brand',\n        },\n    });\n}\n\nangular.module('app.brand').controller('BrandController', BrandController);\n\nBrandController.$inject = ['$filter', '$scope', '$state', '$timeout', 'Case', 'HLFilters', 'LocalStorage',\n    'Settings', 'User', 'UserTeams'];\nfunction BrandController($filter, $scope, $state, $timeout, Case, HLFilters, LocalStorage,\n                            Settings, User, UserTeams) {\n    var vm = this;\n\n    vm.storage = new LocalStorage('brand');\n   \n\n    init();\n    _setupWatchers();\n\n    //////\n\n    function init() {\n        // This timeout is needed because by loading from LocalStorage isn't fast enough.\n        $timeout(function() {\n            //初始化的一些动作\n        }, 50);\n    }\n\n    function _setupWatchers() {\n        /**\n         * 一组变量onchange监听\n         * \n         */\n        $scope.$watchGroup([\n            'vm.var1',\n            'vm.var2',\n            'vm.varn',\n        ], function() {\n            //都会执行的函数1();\n            //都会执行的函数2();\n        });\n\n        /**\n         * 数组集合onchange的监听\n         */\n        $scope.$watchCollection('vm.table.visibility', function() {\n            //都会执行的函数1();\n        });\n\n        /**\n         *单一变量onchange监听\n         */\n        $scope.$watch('vm.filterList', function() {\n            //都会执行的函数1();\n        }, true);\n    }\n\n}\n","angular.module('app.brand.services').factory('Case', Case);\n\nCase.$inject = ['$resource', 'CacheFactory', 'HLCache', 'HLResource', 'HLUtils'];\nfunction Case($resource, CacheFactory, HLCache, HLResource, HLUtils) {\n    var _case = $resource(\n        '/api/cases/:id/',\n        {},\n        {\n            search: {\n                url: '/search/search/',\n                method: 'GET',\n                params: {\n                    type: 'cases_case',\n                },\n                transformResponse: function(data) {\n                    var jsonData = angular.fromJson(data);\n                    var objects = [];\n                    if (jsonData && jsonData.hits && jsonData.hits.length > 0) {\n                        jsonData.hits.forEach(function(obj) {\n                            objects.push(obj);\n                        });\n                    }\n\n                    return {\n                        objects: objects,\n                        total: jsonData.total,\n                    };\n                },\n            },\n            update: {\n                method: 'PUT',\n                params: {\n                    id: '@id',\n                },\n            },\n            patch: {\n                method: 'PATCH',\n                params: {\n                    id: '@id',\n                },\n            },\n            getCaseTypes: {\n                isArray: true,\n                cache: CacheFactory.get('dataCache'),\n                url: '/api/cases/types/',\n            },\n            getStatuses: {\n                cache: CacheFactory.get('dataCache'),\n                url: '/api/cases/statuses/',\n                transformResponse: function(data) {\n                    var statusData = angular.fromJson(data);\n\n                    angular.forEach(statusData.results, function(status) {\n                        if (status.name === 'Closed') {\n                            _case.closedStatus = status;\n                        }\n                    });\n\n                    return statusData;\n                },\n            },\n            query: {\n                isArray: false,\n            },\n        }\n    );\n\n    _case.create = create;\n    _case.getCases = getCases;\n    _case.getCasePriorities = getCasePriorities;\n    _case.updateModel = updateModel;\n\n    /////////\n\n    function create() {\n        var expires = moment().add(1, 'week');  // default expiry date is a week from now\n\n        return new _case({\n            billing_checked: false,\n            priority: 0,\n            expires: expires,\n            tags: [],\n        });\n    }\n\n    function updateModel(data, field, caseObject) {\n        var patchPromise;\n        var args = HLResource.createArgs(data, field, caseObject);\n\n        if (field === 'name') {\n            Settings.page.setAllTitles('detail', data);\n        }\n\n        patchPromise = HLResource.patch('Case', args).$promise;\n\n        return patchPromise;\n    }\n\n    /**\n     * getCases() gets the cases from the search backend through a promise\n     *\n     * @param orderColumn {string}: Current sorting of cases.\n     * @param orderedAsc {boolean}: Current ordering.\n     * @param filterQuery {string}: Contains the filters which are used in Elasticsearch.\n     * @param searchQuery {string}: Current filter on the caselist.\n     * @param page {number=1}: Current page of pagination.\n     * @param pageSize {number=100}: Current page size of pagination.\n     *\n     * @returns Promise object: when promise is completed:\n     *      {\n     *          cases {Array}: Paginated cases objects.\n     *          total {number}: Total number of case objects.\n     *      }\n     */\n    function getCases(orderColumn, orderedAsc, filterQuery, searchQuery = '', page = 1, pageSize = 100) {\n        return _case.search({\n            q: searchQuery,\n            page: page - 1,\n            size: pageSize,\n            sort: HLUtils.getSorting(orderColumn, orderedAsc),\n            filterquery: filterQuery,\n        }, function(data) {\n            return data;\n        }).$promise;\n    }\n\n    function getCasePriorities() {\n        // Hardcoded because these are the only case priorities.\n        return [\n            {id: 0, name: 'Low', dateIncrement: 5},\n            {id: 1, name: 'Medium', dateIncrement: 3},\n            {id: 2, name: 'High', dateIncrement: 1},\n            {id: 3, name: 'Critical', dateIncrement: 0},\n        ];\n    }\n\n    return _case;\n}\n","angular.module('app.home').config(homeConfig);\n\nhomeConfig.$inject = ['$stateProvider'];\nfunction homeConfig($stateProvider) {\n    $stateProvider.state('base.home', {\n        url: '/home',\n        views: {\n            '@': {\n                templateUrl: 'home/controllers/home.html',\n                controller: HomeController,\n                controllerAs: 'vm',\n            },\n        },\n        ncyBreadcrumb: {\n            label: 'Home',\n        },\n    });\n}\n\nangular.module('app.home').controller('HomeController', HomeController);\n\nHomeController.$inject = ['$filter', '$scope', '$state', '$timeout', 'Case', 'HLFilters', 'LocalStorage',\n    'Settings', 'User', 'UserTeams'];\nfunction HomeController($filter, $scope, $state, $timeout, Case, HLFilters, LocalStorage,\n                            Settings, User, UserTeams) {\n    var vm = this;\n\n    vm.storage = new LocalStorage('home');\n   \n\n    init();\n    _setupWatchers();\n\n    //////\n\n    function init() {\n        // This timeout is needed because by loading from LocalStorage isn't fast enough.\n        $timeout(function() {\n            //初始化的一些动作\n        }, 50);\n    }\n\n    function _setupWatchers() {\n        /**\n         * 一组变量onchange监听\n         * \n         */\n        $scope.$watchGroup([\n            'vm.var1',\n            'vm.var2',\n            'vm.varn',\n        ], function() {\n            //都会执行的函数1();\n            //都会执行的函数2();\n        });\n\n        /**\n         * 数组集合onchange的监听\n         */\n        $scope.$watchCollection('vm.table.visibility', function() {\n            //都会执行的函数1();\n        });\n\n        /**\n         *单一变量onchange监听\n         */\n        $scope.$watch('vm.filterList', function() {\n            //都会执行的函数1();\n        }, true);\n    }\n\n}\n","angular.module('app.home.services').factory('Case', Case);\n\nCase.$inject = ['$resource', 'CacheFactory', 'HLCache', 'HLResource', 'HLUtils'];\nfunction Case($resource, CacheFactory, HLCache, HLResource, HLUtils) {\n    var _case = $resource(\n        '/api/cases/:id/',\n        {},\n        {\n            search: {\n                url: '/search/search/',\n                method: 'GET',\n                params: {\n                    type: 'cases_case',\n                },\n                transformResponse: function(data) {\n                    var jsonData = angular.fromJson(data);\n                    var objects = [];\n                    if (jsonData && jsonData.hits && jsonData.hits.length > 0) {\n                        jsonData.hits.forEach(function(obj) {\n                            objects.push(obj);\n                        });\n                    }\n\n                    return {\n                        objects: objects,\n                        total: jsonData.total,\n                    };\n                },\n            },\n            update: {\n                method: 'PUT',\n                params: {\n                    id: '@id',\n                },\n            },\n            patch: {\n                method: 'PATCH',\n                params: {\n                    id: '@id',\n                },\n            },\n            getCaseTypes: {\n                isArray: true,\n                cache: CacheFactory.get('dataCache'),\n                url: '/api/cases/types/',\n            },\n            getStatuses: {\n                cache: CacheFactory.get('dataCache'),\n                url: '/api/cases/statuses/',\n                transformResponse: function(data) {\n                    var statusData = angular.fromJson(data);\n\n                    angular.forEach(statusData.results, function(status) {\n                        if (status.name === 'Closed') {\n                            _case.closedStatus = status;\n                        }\n                    });\n\n                    return statusData;\n                },\n            },\n            query: {\n                isArray: false,\n            },\n        }\n    );\n\n    _case.create = create;\n    _case.getCases = getCases;\n    _case.getCasePriorities = getCasePriorities;\n    _case.updateModel = updateModel;\n\n    /////////\n\n    function create() {\n        var expires = moment().add(1, 'week');  // default expiry date is a week from now\n\n        return new _case({\n            billing_checked: false,\n            priority: 0,\n            expires: expires,\n            tags: [],\n        });\n    }\n\n    function updateModel(data, field, caseObject) {\n        var patchPromise;\n        var args = HLResource.createArgs(data, field, caseObject);\n\n        if (field === 'name') {\n            Settings.page.setAllTitles('detail', data);\n        }\n\n        patchPromise = HLResource.patch('Case', args).$promise;\n\n        return patchPromise;\n    }\n\n    /**\n     * getCases() gets the cases from the search backend through a promise\n     *\n     * @param orderColumn {string}: Current sorting of cases.\n     * @param orderedAsc {boolean}: Current ordering.\n     * @param filterQuery {string}: Contains the filters which are used in Elasticsearch.\n     * @param searchQuery {string}: Current filter on the caselist.\n     * @param page {number=1}: Current page of pagination.\n     * @param pageSize {number=100}: Current page size of pagination.\n     *\n     * @returns Promise object: when promise is completed:\n     *      {\n     *          cases {Array}: Paginated cases objects.\n     *          total {number}: Total number of case objects.\n     *      }\n     */\n    function getCases(orderColumn, orderedAsc, filterQuery, searchQuery = '', page = 1, pageSize = 100) {\n        return _case.search({\n            q: searchQuery,\n            page: page - 1,\n            size: pageSize,\n            sort: HLUtils.getSorting(orderColumn, orderedAsc),\n            filterquery: filterQuery,\n        }, function(data) {\n            return data;\n        }).$promise;\n    }\n\n    function getCasePriorities() {\n        // Hardcoded because these are the only case priorities.\n        return [\n            {id: 0, name: 'Low', dateIncrement: 5},\n            {id: 1, name: 'Medium', dateIncrement: 3},\n            {id: 2, name: 'High', dateIncrement: 1},\n            {id: 3, name: 'Critical', dateIncrement: 0},\n        ];\n    }\n\n    return _case;\n}\n","angular.module('app.users.filters').filter('fullName', fullName);\n\nfunction fullName() {\n    return function(user) {\n        return [user.first_name, user.last_name].join(' ');\n    };\n}\n","angular.module('app.users.services').factory('User', User);\n\nUser.$inject = ['$resource', 'CacheFactory'];\nfunction User($resource, CacheFactory) {\n    var cache = CacheFactory.get('userCache');\n    var interceptor = {\n        // Interceptor used to remove/update the cache on update/delete.\n        response: function(response) {\n            var cacheKey = response.config.url;\n\n            if (response.config.params) {\n                cacheKey += '?' + response.config.paramSerializer(response.config.params);\n            }\n\n            if (response.data) {\n                // New data was returned, so use that for the cache.\n                cache.put(cacheKey, response.data);\n            } else {\n                // No new data was returned, so delete the cache.\n                cache.remove(cacheKey);\n            }\n\n            return response;\n        },\n    };\n\n    var _user = $resource(\n        '/api/users/:id/',\n        null,\n        {\n            get: {\n                cache: cache,\n                transformResponse: function(data) {\n                    return angular.fromJson(data);\n                },\n            },\n            query: {\n                cache: cache,\n                isArray: false,\n            },\n            search: {\n                url: '/search/search/?type=users_lilyuser&filterquery=:filterquery',\n                method: 'GET',\n                transformResponse: function(data) {\n                    var jsonData = angular.fromJson(data);\n                    var objects = [];\n\n                    if (jsonData && jsonData.hits && jsonData.hits.length > 0) {\n                        jsonData.hits.forEach(function(obj) {\n                            objects.push(obj);\n                        });\n                    }\n\n                    return {\n                        objects: objects,\n                        total: jsonData.total,\n                    };\n                },\n            },\n            me: {\n                method: 'GET',\n                url: '/api/users/me/',\n                isArray: false,\n            },\n            update: {\n                method: 'PUT',\n                url: '/api/users/:id/',\n                interceptor: interceptor,\n            },\n            patch: {\n                method: 'PATCH',\n                params: {\n                    id: '@id',\n                },\n                interceptor: interceptor,\n            },\n            delete: {\n                method: 'DELETE',\n                url: '/api/users/:id/',\n                interceptor: interceptor,\n            },\n            token: {\n                method: 'GET',\n                url: '/api/users/token/',\n            },\n            deleteToken: {\n                method: 'DELETE',\n                url: '/api/users/token/',\n            },\n            generateToken: {\n                method: 'POST',\n                url: '/api/users/token/',\n            },\n            getAssignOptions: {\n                url: '/api/users/',\n            },\n        }\n    );\n\n    return _user;\n}\n","angular.module('app.users.services').factory('UserTeams', UserTeams);\n\nUserTeams.$inject = ['$resource'];\nfunction UserTeams($resource) {\n    var _userTeam = $resource(\n        '/api/users/team/:id/',\n        null,\n        {\n            query: {\n                isArray: false,\n            },\n            search: {\n                url: '/search/search/?type=users_team&filterquery=:filterquery',\n                method: 'GET',\n                transformResponse: function(data) {\n                    var jsonData = angular.fromJson(data);\n                    var objects = [];\n\n                    if (jsonData && jsonData.hits && jsonData.hits.length > 0) {\n                        jsonData.hits.forEach(function(obj) {\n                            objects.push(obj);\n                        });\n                    }\n\n                    return {\n                        objects: objects,\n                        total: jsonData.total,\n                    };\n                },\n            },\n            mine: {\n                method: 'GET',\n                url: '/api/users/team/mine/',\n                isArray: true,\n            },\n        }\n    );\n\n    return _userTeam;\n}\n","angular.module('app.utils.directives').directive('assignTo', assignToDirective);\n\nfunction assignToDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            object: '<',\n            type: '@',\n        },\n        templateUrl: 'utils/directives/assignto.html',\n        controller: AssignToController,\n        controllerAs: 'vm',\n        bindToController: true,\n    };\n}\n\nAssignToController.$inject = ['$compile', '$injector', '$scope', '$state', '$templateCache', '$timeout',\n    'HLResource', 'HLSearch', 'HLUtils'];\nfunction AssignToController($compile, $injector, $scope, $state, $templateCache, $timeout,\n                            HLResource, HLSearch, HLUtils) {\n    var vm = this;\n\n    vm.assignTo = assignTo;\n    vm.assignToMe = assignToMe;\n    vm.refreshUsers = refreshUsers;\n\n    function assignTo(myCase) {\n        swal({\n            title: sprintf(messages.alerts.assignTo.title, {type: vm.type.toLowerCase()}),\n            html: $compile($templateCache.get('utils/directives/assignto_modal.html'))($scope),\n            showCancelButton: true,\n            showCloseButton: true,\n        }).then(function(isConfirm) {\n            if (isConfirm) {\n                $injector.get(vm.type).patch({id: vm.object.id, assigned_to: vm.assigned_to.id}).$promise.then(function() {\n                    $state.go($state.current, {}, {reload: true});\n                });\n            }\n        }).done();\n    }\n\n    function assignToMe() {\n        vm.assigned_to = {\n            id: currentUser.id,\n            full_name: currentUser.fullName,\n        };\n    }\n\n    function refreshUsers(query) {\n        var usersPromise;\n\n        if (!vm.assigned_to || query.length) {\n            usersPromise = HLSearch.refreshList(query, 'User', 'is_active:true', 'full_name', 'full_name');\n\n            if (usersPromise) {\n                usersPromise.$promise.then(function(data) {\n                    vm.users = data.objects;\n                });\n            }\n        }\n    }\n}\n","angular.module('app.utils.directives').directive('collapsable', CollapsableDirective);\n\nCollapsableDirective.$inject = [];\nfunction CollapsableDirective() {\n    return {\n        restrict: 'E',\n        transclude: true,\n        templateUrl: 'utils/directives/collapsable.html',\n        controller: CollapsableController,\n        controllerAs: 'cl',\n        bindToController: true,\n        scope: {\n            name: '@',\n        },\n    };\n}\n\nCollapsableController.$inject = ['$scope', 'LocalStorage'];\nfunction CollapsableController($scope, LocalStorage) {\n    var vm = this;\n\n    var storage = new LocalStorage('collapseDirective-' + vm.name);\n    vm.folded = storage.get('folded', false);\n\n    vm.toggleFolded = toggleFolded;\n\n    function toggleFolded() {\n        vm.folded = !vm.folded;\n        storage.put('folded', vm.folded);\n        $scope.$broadcast('foldedToggle', vm.folded);\n    }\n}\n","angular.module('app.utils.directives').directive('collapsableButton', CollapsableButtonDirective);\n\nCollapsableButtonDirective.$inject = [];\nfunction CollapsableButtonDirective() {\n    return {\n        restrict: 'E',\n        require: '^collapsable',\n        templateUrl: 'utils/directives/collapsable_button.html',\n        link: function(scope, element, attrs, collapsableCtrl) {\n            element.on('click', function() {\n                collapsableCtrl.toggleFolded();\n            });\n        },\n        controller: CollapsableButtonController,\n        controllerAs: 'cl',\n    };\n}\n\nCollapsableButtonController.$inject = ['$scope'];\nfunction CollapsableButtonController($scope) {\n    var vm = this;\n    // Don't know why, but this controller is instantiated without the parent directive sometimes, somewhere...\n    vm.folded = $scope.$parent.cl ? $scope.$parent.cl.folded : false;\n\n    $scope.$on('foldedToggle', function(event, folded) {\n        vm.folded = folded;\n        $scope.$apply();\n    });\n}\n","angular.module('app.utils.directives').directive('collapsableContent', CollapsableContentDirective);\n\nCollapsableContentDirective.$inject = [];\nfunction CollapsableContentDirective() {\n    return {\n        restrict: 'E',\n        templateUrl: 'utils/directives/collapsable_content.html',\n        transclude: true,\n        require: '^collapsable',\n        controller: CollapsableContentController,\n        controllerAs: 'cl',\n    };\n}\n\nCollapsableContentController.$inject = ['$scope'];\nfunction CollapsableContentController($scope) {\n    var vm = this;\n    // Don't know why, but this controller is instantiated without the parent directive sometimes, somewhere...\n    vm.folded = $scope.$parent.cl ? $scope.$parent.cl.folded : false;\n\n    $scope.$on('foldedToggle', function(event, folded) {\n        vm.folded = folded;\n        $scope.$apply();\n    });\n}\n","angular.module('app.utils.directives').directive('date', dateDirective);\n\nfunction dateDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            date: '=',\n            showTime: '=',\n            addTime: '=',\n            dateFormat: '@',\n        },\n        templateUrl: 'utils/directives/date.html',\n        controller: DateController,\n        controllerAs: 'vm',\n        bindToController: true,\n    };\n}\n\nDateController.$inject = [];\nfunction DateController() {\n    var vm = this;\n    var date;\n\n    if (vm.date) {\n        // new Date() to prevent deprecation warning of MomentJS.\n        date = moment(new Date(vm.date));\n\n        if (!vm.dateFormat) {\n            if (date.isSame(moment(), 'day') && vm.showTime) {\n                // In certain cases we want to display the time if it's the same day.\n                vm.dateFormat = 'HH:mm';\n            } else {\n                if (vm.addTime) {\n                    vm.dateFormat = 'dd MMM. yyyy - HH:mm'; // Renders as 29 Dec. - 2015 12:15\n                } else {\n                    vm.dateFormat = 'dd MMM. yyyy'; // Renders as 29 Dec. 2015\n                }\n            }\n        } else {\n            // Setting format to date to correctly use in the historylist.\n            vm.date = date.format();\n        }\n    }\n}\n","angular.module('app.utils.directives').directive('dueDateFilter', dueDateFilter);\n\nfunction dueDateFilter() {\n    return {\n        restrict: 'E',\n        scope: {\n            filterStore: '=',\n            filterField: '=',\n            type: '=',\n        },\n        templateUrl: 'utils/directives/due_date_filter.html',\n        controller: DueDateFilterWidgetController,\n        controllerAs: 'vm',\n        bindToController: true,\n    };\n}\n\nDueDateFilterWidgetController.$inject = ['LocalStorage', '$scope'];\nfunction DueDateFilterWidgetController(LocalStorage, $scope) {\n    var vm = this;\n    var storage = new LocalStorage(vm.type);\n\n    // Get the stored value or set to 'All' if it doesn't exist\n    vm.dueDateFilter = storage.get('dueDateFilter', 0);\n    vm.openDueDateFilter = openDueDateFilter;\n\n    activate();\n\n    ////////////\n\n    function activate() {\n        _watchDueDateFilter();\n    }\n\n    // Open Due Date Filter for right element. This function gets used\n    // when the breakpoints are > tablet.\n    function openDueDateFilter($event) {\n        angular.element($event.srcElement).next().toggleClass('is-open');\n    }\n\n    function _watchDueDateFilter() {\n        $scope.$watch('vm.dueDateFilter', function() {\n            var today;\n            var tomorrow;\n            var week;\n\n            var filter = '';\n            var filterField = vm.filterField ? vm.filterField : 'expires';\n            filterField += ': ';\n\n            // Find element with .is-open class to close when clicking a filter.\n            angular.element('.due-date-filter-container.is-open').removeClass('is-open');\n\n            switch (vm.dueDateFilter) {\n                default:\n                case 0:\n                    filter = '';\n                    break;\n                case 1:\n                    today = moment().format('YYYY-MM-DD');\n                    filter = filterField + today;\n                    break;\n                case 2:\n                    tomorrow = moment().add(1, 'd').format('YYYY-MM-DD');\n                    filter = filterField + tomorrow;\n                    break;\n                case 3:\n                    today = moment().format('YYYY-MM-DD');\n                    week = moment().add(6, 'd').format('YYYY-MM-DD');\n                    filter = filterField + '[' + today + ' TO ' + week + ']';\n                    break;\n                case 4:\n                    filter = filterField + '[* TO ' + moment().subtract(1, 'd').format('YYYY-MM-DD') + ']';\n                    break;\n            }\n\n            storage.put('dueDateFilter', vm.dueDateFilter);\n            vm.filterStore = filter;\n        });\n    }\n}\n","angular.module('app.utils.directives').directive('historyAddNote', historyAddNoteDirective);\n\nfunction historyAddNoteDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            item: '=',\n        },\n        templateUrl: 'utils/directives/history_add_note.html',\n        controller: HistoryAddNoteController,\n        controllerAs: 'vm',\n        bindToController: true,\n    };\n}\n\nHistoryAddNoteController.$inject = ['$http', '$state', 'Note', 'User'];\nfunction HistoryAddNoteController($http, $state, Note, User) {\n    var vm = this;\n    vm.note = new Note({content_type: vm.item.content_type, object_id: vm.item.id, type: 0});\n\n    vm.addNote = addNote;\n\n    function addNote() {\n        vm.note.$save(function(response) {\n            // Set user object to note to correctly show profile pic and name\n            // when adding a new note in the historylist.\n            User.get({id: currentUser.id}, function(author) {\n                response.author = author;\n            });\n\n            vm.item.notes.unshift(response);\n            // 'Empty' the note object to be able to continue posting another\n            // note without having to refresh the page.\n            vm.note = new Note({content_type: vm.item.content_type, object_id: vm.item.id, type: 0});\n        });\n    }\n}\n","angular.module('app.utils.directives').directive('historyList', HistoryListDirective);\n\nHistoryListDirective.$inject = ['$filter', '$q', '$state', 'Case', 'Deal', 'EmailAccount', 'EmailDetail', 'HLGravatar',\n    'HLResource', 'HLUtils', 'Note', 'NoteDetail', 'User'];\nfunction HistoryListDirective($filter, $q, $state, Case, Deal, EmailAccount, EmailDetail, HLGravatar,\n                              HLResource, HLUtils, Note, NoteDetail, User) {\n    return {\n        restrict: 'E',\n        replace: true,\n        scope: {\n            target: '=',\n            object: '=',\n            dateStart: '=?',\n            dateEnd: '=?',\n            extraObject: '=?',\n            parentObject: '=?',\n        },\n        templateUrl: 'utils/directives/historylist.html',\n        link: function(scope, element, attrs) {\n            var page = 0;\n            var pageSize = 50;\n\n            scope.history = {};\n            scope.history.list = [];\n            scope.history.types = {\n                '': {name: 'All', visible: true},\n                'note': {name: 'Notes', visible: false},\n                'case': {name: 'Cases', visible: false},\n                'deal': {name: 'Deals', visible: false},\n                'email': {name: 'Emails', visible: false},\n            };\n            scope.history.activeFilter = '';\n            scope.history.showMoreText = 'Show more';\n            scope.history.loadMore = loadMore;\n            scope.history.reloadHistory = reloadHistory;\n            scope.history.addNote = addNote;\n            scope.history.pinNote = pinNote;\n            scope.history.removeFromList = removeFromList;\n            scope.history.filterType = filterType;\n\n            scope.note = {};\n            scope.note.type = 0;\n\n            activate();\n\n            ////////\n\n            function activate() {\n                HLUtils.blockUI('#historyListBlockTarget', true);\n                // Somehow calling autosize on page content load does not work\n                // in the historylist.\n                autosize($('textarea'));\n                loadMore();\n            }\n\n            function filterType(value) {\n                var key;\n                var selectedCount;\n\n                scope.history.activeFilter = value;\n                // Loop through the months to hide the monthname when there\n                // aren't any items in that month that are shown due to\n                // the filter that is being selected.\n                for (key in scope.history.list.nonPinned) {\n                    selectedCount = $filter('filter')(scope.history.list.nonPinned[key].items, {historyType: value}).length;\n                    scope.history.list.nonPinned[key].isVisible = !!selectedCount;\n                }\n            }\n\n            function loadMore() {\n                if (!scope.object.$resolved) {\n                    scope.object.$promise.then(function(obj) {\n                        _fetchHistory(obj);\n                    });\n                } else {\n                    _fetchHistory(scope.object);\n                }\n            }\n\n            function reloadHistory() {\n                page -= 1;\n                loadMore();\n            }\n\n            function _fetchHistory(obj) {\n                var history = [];\n                var promises = [];\n                var neededLength = (page + 1) * pageSize;\n                var requestLength = neededLength + 1;\n                var notePromise;\n                var dateQuery = '';\n                var emailDateQuery = '';\n                var casePromise;\n                var dealPromise;\n                var tenantEmailAccountPromise;\n                var emailPromise;\n                var i;\n                var filterquery;\n                var currentObject = obj;\n                var contentType = scope.target;\n\n                if (scope.dateStart && scope.dateEnd) {\n                    dateQuery = ' AND modified:[' + scope.dateStart + ' TO ' + scope.dateEnd + ']';\n                    emailDateQuery = 'sent_date:[' + scope.dateStart + ' TO ' + scope.dateEnd + ']';\n                }\n\n                page += 1;\n\n                filterquery = '(content_type:' + contentType + ' AND object_id:' + currentObject.id + ')';\n\n                if (contentType === 'account' && currentObject.contact) {\n                    // Show all notes of contacts linked to the account.\n                    for (i = 0; i < currentObject.contact.length; i++) {\n                        filterquery += ' OR (content_type:contact AND object_id:' + currentObject.contact[i] + ')';\n                    }\n                }\n\n                if (scope.extraObject) {\n                    filterquery += ' OR (content_type:' + scope.extraObject.target + ' AND object_id:' + scope.extraObject.object.id + ')';\n                }\n\n                filterquery = '(' + filterquery + ')';\n\n                notePromise = NoteDetail.query({filterquery: filterquery + dateQuery, size: requestLength}).$promise;\n\n                promises.push(notePromise);  // Add promise to list of all promises for later handling\n\n                notePromise.then(function(results) {\n                    results.forEach(function(note) {\n                        // Get user for notes to show profile picture correctly.\n                        User.get({id: note.author.id, is_active: 'All'}, function(userObject) {\n                            note.author = userObject;\n                        });\n\n                        // Set notes shown property to true to have toggled open as default.\n                        if (note.is_pinned) {\n                            note.shown = true;\n                        }\n\n                        // If it's a contact's note, add extra attribute to the note\n                        // so we can identify it in the template\n                        if (scope.target === 'account' && note.content_type === 'contact') {\n                            note.showContact = true;\n                        }\n\n                        history.push(note);\n                    });\n                });\n\n                if (scope.extraObject) {\n                    currentObject = scope.extraObject.object;\n                    contentType = scope.extraObject.target;\n                }\n\n                // We don't have to fetch extra objects for the case or deal\n                // history list. So continue if we have an extra object or if\n                // we're dealing with something else than a case or deal.\n                if (contentType !== 'case' && contentType !== 'deal') {\n                    filterquery = contentType + '.id:' + currentObject.id;\n\n                    casePromise = Case.search({filterquery: filterquery + dateQuery, size: 100}).$promise;\n\n                    promises.push(casePromise);  // Add promise to list of all promises for later handling\n\n                    casePromise.then(function(response) {\n                        response.objects.forEach(function(caseItem) {\n                            // Get user object for the assigned to user.\n                            if (caseItem.assigned_to) {\n                                User.get({id: caseItem.assigned_to.id, is_active: 'All'}, function(userObject) {\n                                    caseItem.assigned_to = userObject;\n                                });\n                            }\n\n                            if (caseItem.created_by) {\n                                // Get user object for the created by user.\n                                User.get({id: caseItem.created_by.id, is_active: 'All'}, function(userObject) {\n                                    caseItem.created_by = userObject;\n                                });\n                            }\n\n                            caseItem.historyType = 'case';\n\n                            history.push(caseItem);\n                            NoteDetail.query({filterquery: 'content_type:case AND object_id:' + caseItem.id, size: 15})\n                                .$promise.then(function(notes) {\n                                    angular.forEach(notes, function(note) {\n                                        // Get user for notes to show profile picture correctly.\n                                        User.get({id: note.author.id, is_active: 'All'}, function(author) {\n                                            note.author = author;\n                                        });\n                                    });\n\n                                    caseItem.notes = notes;\n                                });\n                        });\n                    });\n\n                    dealPromise = Deal.search({filterquery: filterquery + dateQuery, size: requestLength}).$promise;\n                    promises.push(dealPromise);  // Add promise to list of all promises for later handling\n\n                    dealPromise.then(function(results) {\n                        results.objects.forEach(function(deal) {\n                            if (deal.assigned_to) {\n                                // Get user object for the assigned to user.\n                                User.get({id: deal.assigned_to.id, is_active: 'All'}, function(userObject) {\n                                    deal.assigned_to = userObject;\n                                });\n                            }\n\n                            if (deal.created_by) {\n                                // Get user object to show profile picture correctly.\n                                User.get({id: deal.created_by.id, is_active: 'All'}, function(userObject) {\n                                    deal.created_by = userObject;\n                                });\n                            }\n\n                            NoteDetail.query({\n                                filterquery: 'content_type:deal AND object_id:' + deal.id,\n                                size: 5,\n                            }).$promise.then(function(notes) {\n                                angular.forEach(notes, function(note) {\n                                    // Get user for notes to show profile picture correctly.\n                                    User.get({id: note.author.id, is_active: 'All'}, function(author) {\n                                        note.author = author;\n                                    });\n                                });\n\n                                deal.notes = notes;\n                            });\n\n                            history.push(deal);\n                        });\n                    });\n\n                    tenantEmailAccountPromise = EmailAccount.query().$promise;\n                    promises.push(tenantEmailAccountPromise);\n\n                    if (contentType === 'account') {\n                        emailPromise = EmailDetail.query({account_related: currentObject.id, filterquery: emailDateQuery, size: requestLength}).$promise;\n                    } else {\n                        emailPromise = EmailDetail.query({contact_related: currentObject.id, filterquery: emailDateQuery, size: requestLength}).$promise;\n                    }\n\n                    promises.push(emailPromise);\n\n                    $q.all([tenantEmailAccountPromise, emailPromise]).then(function(results) {\n                        var tenantEmailAccountList = results[0].results;\n                        var emailMessageList = results[1];\n\n                        emailMessageList.forEach(function(email) {\n                            User.search({filterquery: 'email:' + email.sender_email, is_active: 'All'}).$promise.then(function(userResults) {\n                                if (userResults.objects[0]) {\n                                    email.profile_picture = userResults.objects[0].profile_picture;\n                                } else {\n                                    email.profile_picture = HLGravatar.getGravatar(email.sender_email);\n                                }\n                            });\n\n                            tenantEmailAccountList.forEach(function(emailAddress) {\n                                if (emailAddress.email_address === email.sender_email) {\n                                    email.right = true;\n                                }\n                            });\n\n                            history.push(email);\n                        });\n                    });\n                }\n\n                // Get all history types and add them to a common history.\n                $q.all(promises).then(function() {\n                    var orderedHistoryList = {pinned: [], nonPinned: {}, totalItems: history.length};\n\n                    // To properly sort the history list we need to compare dates\n                    // because email doesn't have the modified key we decided\n                    // to add an extra key called historySortDate which the list\n                    // uses to sort properly. We add the sent_date of email to the\n                    // object, and the modified date for the other types.\n                    for (i = 0; i < history.length; i++) {\n                        if (history[i].historyType === 'email') {\n                            history[i].historySortDate = history[i].sent_date;\n                        } else if (history[i].historyType === 'note') {\n                            // We want to sort notes on created date.\n                            history[i].historySortDate = history[i].date;\n                        } else {\n                            history[i].historySortDate = history[i].modified;\n                        }\n                    }\n\n                    $filter('orderBy')(history, 'historySortDate', true).forEach(function(item) {\n                        var date = '';\n                        var key = '';\n                        var parentObjectId = scope.parentObject ? scope.parentObject.id : null;\n\n                        scope.history.types[item.historyType].visible = true;\n\n                        if (item.is_pinned) {\n                            orderedHistoryList.pinned.push(item);\n                        } else {\n                            // Exclude the current item from the history list.\n                            if (item.id !== scope.object.id && item.id !== parentObjectId) {\n                                if (item.hasOwnProperty('modified')) {\n                                    date = item.modified;\n                                } else {\n                                    date = item.sent_date;\n                                }\n\n                                key = moment(date).year() + '-' + (moment(date).month() + 1);\n\n                                if (!orderedHistoryList.nonPinned.hasOwnProperty(key)) {\n                                    orderedHistoryList.nonPinned[key] = {isVisible: true, items: []};\n                                }\n\n                                if (scope.target === 'case' && item.historyType === 'note' && item.content_type === 'case') {\n                                    item.shown = true;\n                                }\n\n                                orderedHistoryList.nonPinned[key].items.push(item);\n                            } else {\n                                orderedHistoryList.totalItems -= 1;\n                            }\n                        }\n                    });\n\n                    // Get first key in the nonPinned list to target the first\n                    // item in the history items to set the property to shown.\n                    if (scope.target !== 'case' && Object.keys(orderedHistoryList.nonPinned).length) {\n                        orderedHistoryList.nonPinned[Object.keys(orderedHistoryList.nonPinned)[0]].items[0].shown = true;\n                    }\n\n                    scope.history.list = orderedHistoryList;\n\n                    HLUtils.unblockUI('#historyListBlockTarget');\n                });\n            }\n\n            function addNote(note, form) {\n                note.content_type = scope.object.content_type.id;\n                note.object_id = scope.object.id;\n\n                Note.save(note, function() {\n                    // Success.\n                    scope.note.content = '';\n                    toastr.success('I\\'ve created the note for you!', 'Done');\n                    reloadHistory();\n                }, function(response) {\n                    // Error.\n                    HLForms.setErrors(form, response.data);\n                    toastr.error('Uh oh, there seems to be a problem', 'Oops!');\n                });\n            }\n\n            function pinNote(note, isPinned) {\n                Note.update({id: note.id}, {is_pinned: isPinned}, function() {\n                    $state.go($state.current, {}, {reload: true});\n                });\n            }\n\n            function removeFromList(item) {\n                var month = moment(item.modified).format('M');\n                var year = moment(item.modified).format('YYYY');\n                var index;\n\n                if (item.is_pinned) {\n                    index = scope.history.list.pinned.indexOf(item);\n                    scope.history.list.pinned.splice(index, 1);\n                } else {\n                    index = scope.history.list.nonPinned[year + '-' + month].items.indexOf(item);\n                    scope.history.list.nonPinned[year + '-' + month].items.splice(index, 1);\n                }\n\n                // We might be deleting the last object of a certain month.\n                // Check if there are still items and hide the block if needed.\n                if (!scope.history.list.nonPinned[year + '-' + month].items.length) {\n                    scope.history.list.nonPinned[year + '-' + month].isVisible = false;\n                }\n\n                scope.$apply();\n            }\n        },\n    };\n}\n","angular.module('app.utils.directives').directive('historyListItem', HistoryListItemDirective);\n\nHistoryListItemDirective.$inject = ['$compile', '$http', '$templateCache'];\nfunction HistoryListItemDirective($compile, $http, $templateCache) {\n    return {\n        restrict: 'E',\n        scope: {\n            item: '=',\n            history: '=',\n            object: '=',\n            deleteCallback: '&?',\n            updateCallback: '&?',\n        },\n        link: function(scope, element, attrs) {\n            var getTemplate = function(historyType) {\n                var templateLoader;\n                var baseUrl = 'utils/directives/history_list_';\n                var templateMap = {\n                    case: 'case.html',\n                    deal: 'deal.html',\n                    email: 'email.html',\n                    note: 'note.html',\n                };\n\n                var templateUrl = baseUrl + templateMap[historyType];\n                templateLoader = $http.get(templateUrl, {cache: $templateCache});\n\n                return templateLoader;\n            };\n            getTemplate(scope.vm.item.historyType).success(function(html) {\n                element.replaceWith($compile(html)(scope));\n            }).then(function() {\n                element.replaceWith($compile(element.html())(scope));\n            });\n        },\n        controller: HistoryListItemController,\n        bindToController: true,\n        controllerAs: 'vm',\n    };\n}\n\nHistoryListItemController.$inject = ['$state'];\nfunction HistoryListItemController($state) {\n    var vm = this;\n\n    vm.replyOnEmail = replyOnEmail;\n\n    /////\n\n    function replyOnEmail() {\n        // Check if the emailaccount belongs to the current contact or account.\n        angular.forEach(vm.object.email_addresses, function(emailAddress) {\n            if (emailAddress.email_address === vm.item.sender_email && emailAddress.status === 0) {\n                // Is status is inactive, try to find other email address.\n                _replyToGoodEmailAddress();\n            }\n        });\n\n        function _replyToGoodEmailAddress() {\n            // Try to find primary.\n            angular.forEach(vm.object.email_addresses, function(emailAddress) {\n                if (emailAddress.status === 2) {\n                    $state.go('base.email.replyOtherEmail', {id: vm.item.id, email: emailAddress.email_address});\n                }\n            });\n\n            // Other will do as alternative.\n            angular.forEach(vm.object.email_addresses, function(emailAddress) {\n                if (emailAddress.status === 1) {\n                    $state.go('base.email.replyOtherEmail', {id: vm.item.id, email: emailAddress.email_address});\n                }\n            });\n        }\n\n        $state.go('base.email.reply', {id: vm.item.id});\n    }\n}\n","angular.module('app.utils.directives').directive('passwordConfirmation', PasswordConfirmationDirective);\n\nPasswordConfirmationDirective.$inject = [];\nfunction PasswordConfirmationDirective() {\n    return {\n        restrict: 'E',\n        templateUrl: 'utils/directives/password_confirmation.html',\n        transclude: true,\n        link: function(scope, element, attrs, collapsableCtrl) {\n            djangoPasswordStrength.initListeners(element);\n        },\n    };\n}\n","angular.module('app.utils.directives').directive('passwordStrength', PasswordStrengthDirective);\n\nPasswordStrengthDirective.$inject = [];\nfunction PasswordStrengthDirective() {\n    return {\n        restrict: 'E',\n        templateUrl: 'utils/directives/password_strength.html',\n        transclude: true,\n        link: function(scope, element, attrs, collapsableCtrl) {\n            djangoPasswordStrength.initListeners(element);\n        },\n    };\n}\n","angular.module('app.utils.directives').directive('postpone', postponeDirective);\n\nfunction postponeDirective() {\n    return {\n        restrict: 'E',\n        scope: {\n            object: '=',\n            type: '=',\n            dateField: '=',\n            callback: '&',\n            ttPlacement: '@', // use tt instead of 'tooltip' for distinction.\n        },\n        templateUrl: 'utils/directives/postpone.html',\n        controller: PostponeController,\n        controllerAs: 'vm',\n        bindToController: true,\n    };\n}\n\nPostponeController.$inject = ['$compile', '$injector', '$scope', '$state', '$templateCache', '$timeout', 'HLResource', 'HLUtils'];\nfunction PostponeController($compile, $injector, $scope, $state, $templateCache, $timeout, HLResource, HLUtils) {\n    var vm = this;\n\n    vm.datepickerOptions = {\n        startingDay: 1, // day 1 is Monday\n    };\n\n    vm.disabledDates = disabledDates;\n    vm.postponeWithDays = postponeWithDays;\n    vm.getFutureDate = getFutureDate;\n    vm.openPostponeModal = openPostponeModal;\n\n    activate();\n\n    ////\n\n    function activate() {\n        if (vm.object[vm.dateField]) {\n            vm.date = moment(vm.object[vm.dateField]);\n        } else {\n            vm.date = moment();\n        }\n\n        vm.date = vm.date.toDate();\n\n        _watchCloseDatePicker();\n    }\n\n    /**\n     * When the datepicker popup is closed, update model and close modal.\n     *\n     * @private\n     */\n    function _watchCloseDatePicker() {\n        $scope.$watch('vm.pickerIsOpen', function(newValue, oldValue) {\n            // Don't close the whole modal if we didn't change anything.\n            if (!moment(vm.date).isSame(moment(vm.object[vm.dateField]))) {\n                if (!newValue && oldValue) {\n                    _updateDayAndCloseModal();\n                }\n            }\n        });\n    }\n\n    function _updateDayAndCloseModal() {\n        var newDate;\n        var args;\n\n        if (!moment(vm.date).isSame(moment(vm.object[vm.dateField]))) {\n            // Update the due date for this case.\n            newDate = moment(vm.date).format('YYYY-MM-DD');\n\n            args = {\n                id: vm.object.id,\n            };\n\n            args[vm.dateField] = newDate;\n            // Update the model so changes are reflected instantly.\n            vm.object[vm.dateField] = newDate;\n\n            // Dynamically get the model that should be updated.\n            HLResource.patch(vm.type, args).$promise.then(function() {\n                swal.close();\n                _processClose();\n            });\n        } else {\n            swal.close();\n            _processClose();\n        }\n    }\n\n    function _processClose() {\n        if (vm.callback) {\n            vm.callback();\n        } else {\n            $state.go($state.current, {}, {reload: true});\n        }\n    }\n\n    function disabledDates(currentDate, mode) {\n        var date = moment.isMoment(currentDate) ? currentDate : moment(currentDate);\n\n        // Disable Saturday and Sunday.\n        return ( mode === 'day' && ( date.day() === 6 || date.day() === 0 ) );\n    }\n\n    function postponeWithDays(days) {\n        vm.date = getFutureDate(days);\n\n\n        // Set timeout to wait for next digest cycle before being able to set\n        // the date correctly.\n        $timeout(function() {\n            _updateDayAndCloseModal();\n        });\n    }\n\n    function getFutureDate(days) {\n        var daysToAdd;\n\n        var futureDate = moment();\n\n        if (days) {\n            daysToAdd = days;\n\n            if (futureDate.isBefore(vm.date)) {\n                futureDate = moment(vm.date);\n            }\n        } else {\n            // The date should be the current date.\n            daysToAdd = 0;\n        }\n\n        futureDate = HLUtils.addBusinessDays(daysToAdd, futureDate);\n\n        return futureDate;\n    }\n\n    function openPostponeModal() {\n        // Google Analytics events per page to track where users use the\n        // postpone functionality.\n        if ($state.current.name === 'base.dashboard') {\n            ga('send', 'event', vm.type, 'Open postpone modal', 'Dashboard');\n        }\n\n        if ($state.current.name === 'base.cases.detail') {\n            ga('send', 'event', 'Case', 'Open postpone modal', 'Case detail');\n        }\n\n        if ($state.current.name === 'base.cases') {\n            ga('send', 'event', 'Case', 'Open postpone modal', 'Cases list view');\n        }\n\n        if ($state.current.name === 'base.deals.detail') {\n            ga('send', 'event', 'Deal', 'Open postpone modal', 'Deal detail');\n        }\n\n        if ($state.current.name === 'base.deals') {\n            ga('send', 'event', 'Deal', 'Open postpone modal', 'Deal list view');\n        }\n\n        if ($state.current.name === 'base.accounts.detail') {\n            ga('send', 'event', vm.type, 'Open postpone modal', 'Account detail');\n        }\n\n        if ($state.current.name === 'base.contacts.detail') {\n            ga('send', 'event', vm.type, 'Open postpone modal', 'Contact detail');\n        }\n\n        vm.bodyText = messages.alerts.postpone[vm.type.toLowerCase()];\n\n        swal({\n            title: messages.alerts.postpone[vm.type.toLowerCase() + 'Title'],\n            html: $compile($templateCache.get('utils/controllers/postpone.html'))($scope),\n            showCloseButton: true,\n        }).then(function(isConfirm) {\n            if (isConfirm) {\n                _updateDayAndCloseModal();\n            }\n        }).done();\n    }\n}\n","angular.module('app.cars', [\n    // Angular dependencies\n    'ngCookies',\n\n    // 3rd party\n    'ui.bootstrap',\n    'ui.select',\n\n    // local dependencies\n    'app.cars.services',\n]);\n","angular.module('app.cars.directives', []);\n","angular.module('app.cars.services', ['ngResource']);\n","angular.module('app.cars').config(carConfig); \n\ncarConfig.$inject = ['$stateProvider'];\nfunction carConfig($stateProvider) {\n    $stateProvider.state('base.cars', {\n        url: '/cars',\n        views: {\n            '@': {\n                templateUrl: 'cars/controllers/index.html',\n                controller: CarsController,\n                controllerAs: 'vm',\n            },\n        },\n        ncyBreadcrumb: {\n            label: 'Cars',\n        },\n    });\n}\n\nangular.module('app.cars').controller('CarsController', CarsController);\n\nCarsController.$inject = ['$filter', '$scope', '$state', '$timeout', 'Case', 'HLFilters', 'LocalStorage',\n    'Settings', 'User', 'UserTeams'];\nfunction CarsController($filter, $scope, $state, $timeout, Case, HLFilters, LocalStorage,\n                            Settings, User, UserTeams) {\n    var vm = this;\n\n    vm.storage = new LocalStorage('brand');\n   \n\n    init();\n    _setupWatchers();\n\n    //////\n\n    function init() {\n        // This timeout is needed because by loading from LocalStorage isn't fast enough.\n        $timeout(function() {\n            //初始化的一些动作\n        }, 50);\n    }\n\n    function _setupWatchers() {\n        /**\n         * 一组变量onchange监听\n         * \n         */\n        $scope.$watchGroup([\n            'vm.var1',\n            'vm.var2',\n            'vm.varn',\n        ], function() {\n            //都会执行的函数1();\n            //都会执行的函数2();\n        });\n\n        /**\n         * 数组集合onchange的监听\n         */\n        $scope.$watchCollection('vm.table.visibility', function() {\n            //都会执行的函数1();\n        });\n\n        /**\n         *单一变量onchange监听\n         */\n        $scope.$watch('vm.filterList', function() {\n            //都会执行的函数1();\n        }, true);\n    }\n\n}\n","angular.module('app.cars.services').factory('Case', Case);\n\nCase.$inject = ['$resource', 'CacheFactory', 'HLCache', 'HLResource', 'HLUtils'];\nfunction Case($resource, CacheFactory, HLCache, HLResource, HLUtils) {\n    var _case = $resource(\n        '/api/cases/:id/',\n        {},\n        {\n            search: {\n                url: '/search/search/',\n                method: 'GET',\n                params: {\n                    type: 'cases_case',\n                },\n                transformResponse: function(data) {\n                    var jsonData = angular.fromJson(data);\n                    var objects = [];\n                    if (jsonData && jsonData.hits && jsonData.hits.length > 0) {\n                        jsonData.hits.forEach(function(obj) {\n                            objects.push(obj);\n                        });\n                    }\n\n                    return {\n                        objects: objects,\n                        total: jsonData.total,\n                    };\n                },\n            },\n            update: {\n                method: 'PUT',\n                params: {\n                    id: '@id',\n                },\n            },\n            patch: {\n                method: 'PATCH',\n                params: {\n                    id: '@id',\n                },\n            },\n            getCaseTypes: {\n                isArray: true,\n                cache: CacheFactory.get('dataCache'),\n                url: '/api/cases/types/',\n            },\n            getStatuses: {\n                cache: CacheFactory.get('dataCache'),\n                url: '/api/cases/statuses/',\n                transformResponse: function(data) {\n                    var statusData = angular.fromJson(data);\n\n                    angular.forEach(statusData.results, function(status) {\n                        if (status.name === 'Closed') {\n                            _case.closedStatus = status;\n                        }\n                    });\n\n                    return statusData;\n                },\n            },\n            query: {\n                isArray: false,\n            },\n        }\n    );\n\n    _case.create = create;\n    _case.getCases = getCases;\n    _case.getCasePriorities = getCasePriorities;\n    _case.updateModel = updateModel;\n\n    /////////\n\n    function create() {\n        var expires = moment().add(1, 'week');  // default expiry date is a week from now\n\n        return new _case({\n            billing_checked: false,\n            priority: 0,\n            expires: expires,\n            tags: [],\n        });\n    }\n\n    function updateModel(data, field, caseObject) {\n        var patchPromise;\n        var args = HLResource.createArgs(data, field, caseObject);\n\n        if (field === 'name') {\n            Settings.page.setAllTitles('detail', data);\n        }\n\n        patchPromise = HLResource.patch('Case', args).$promise;\n\n        return patchPromise;\n    }\n\n    /**\n     * getCases() gets the cases from the search backend through a promise\n     *\n     * @param orderColumn {string}: Current sorting of cases.\n     * @param orderedAsc {boolean}: Current ordering.\n     * @param filterQuery {string}: Contains the filters which are used in Elasticsearch.\n     * @param searchQuery {string}: Current filter on the caselist.\n     * @param page {number=1}: Current page of pagination.\n     * @param pageSize {number=100}: Current page size of pagination.\n     *\n     * @returns Promise object: when promise is completed:\n     *      {\n     *          cases {Array}: Paginated cases objects.\n     *          total {number}: Total number of case objects.\n     *      }\n     */\n    function getCases(orderColumn, orderedAsc, filterQuery, searchQuery = '', page = 1, pageSize = 100) {\n        return _case.search({\n            q: searchQuery,\n            page: page - 1,\n            size: pageSize,\n            sort: HLUtils.getSorting(orderColumn, orderedAsc),\n            filterquery: filterQuery,\n        }, function(data) {\n            return data;\n        }).$promise;\n    }\n\n    function getCasePriorities() {\n        // Hardcoded because these are the only case priorities.\n        return [\n            {id: 0, name: 'Low', dateIncrement: 5},\n            {id: 1, name: 'Medium', dateIncrement: 3},\n            {id: 2, name: 'High', dateIncrement: 1},\n            {id: 3, name: 'Critical', dateIncrement: 0},\n        ];\n    }\n\n    return _case;\n}\n","angular.module('app.sellcar', [\n    // Angular dependencies\n    'ngCookies',\n\n    // 3rd party\n    'ui.bootstrap',\n    'ui.select',\n\n    // local dependencies\n    'app.sellcar.services',\n]);\n","angular.module('app.sellcar.directives', []);\n","angular.module('app.sellcar.services', ['ngResource']);\n","angular.module('app.sellcar').config(sellCarConfig); \n\nsellCarConfig.$inject = ['$stateProvider'];\nfunction sellCarConfig($stateProvider) {\n    $stateProvider.state('base.sellcar', {\n        url: '/sellcar',\n        views: {\n            '@': {\n                templateUrl: 'sell_car/controllers/index.html',\n                controller: SellCarController,\n                controllerAs: 'vm',\n            },\n        },\n        ncyBreadcrumb: {\n            label: 'Sell Car',\n        },\n    });\n}\n\nangular.module('app.cars').controller('SellCarController', SellCarController);\n\nSellCarController.$inject = ['$filter', '$scope', '$state', '$timeout', 'Case', 'HLFilters', 'LocalStorage',\n    'Settings', 'User', 'UserTeams'];\nfunction SellCarController($filter, $scope, $state, $timeout, Case, HLFilters, LocalStorage,\n                            Settings, User, UserTeams) {\n    var vm = this;\n\n    vm.storage = new LocalStorage('brand');\n   \n\n    init();\n    _setupWatchers();\n\n    //////\n\n    function init() {\n        // This timeout is needed because by loading from LocalStorage isn't fast enough.\n        $timeout(function() {\n            //初始化的一些动作\n        }, 50);\n    }\n\n    function _setupWatchers() {\n        /**\n         * 一组变量onchange监听\n         * \n         */\n        $scope.$watchGroup([\n            'vm.var1',\n            'vm.var2',\n            'vm.varn',\n        ], function() {\n            //都会执行的函数1();\n            //都会执行的函数2();\n        });\n\n        /**\n         * 数组集合onchange的监听\n         */\n        $scope.$watchCollection('vm.table.visibility', function() {\n            //都会执行的函数1();\n        });\n\n        /**\n         *单一变量onchange监听\n         */\n        $scope.$watch('vm.filterList', function() {\n            //都会执行的函数1();\n        }, true);\n    }\n\n}\n","angular.module('app.sellcar.services').factory('Case', Case);\n\nCase.$inject = ['$resource', 'CacheFactory', 'HLCache', 'HLResource', 'HLUtils'];\nfunction Case($resource, CacheFactory, HLCache, HLResource, HLUtils) {\n    var _case = $resource(\n        '/api/cases/:id/',\n        {},\n        {\n            search: {\n                url: '/search/search/',\n                method: 'GET',\n                params: {\n                    type: 'cases_case',\n                },\n                transformResponse: function(data) {\n                    var jsonData = angular.fromJson(data);\n                    var objects = [];\n                    if (jsonData && jsonData.hits && jsonData.hits.length > 0) {\n                        jsonData.hits.forEach(function(obj) {\n                            objects.push(obj);\n                        });\n                    }\n\n                    return {\n                        objects: objects,\n                        total: jsonData.total,\n                    };\n                },\n            },\n            update: {\n                method: 'PUT',\n                params: {\n                    id: '@id',\n                },\n            },\n            patch: {\n                method: 'PATCH',\n                params: {\n                    id: '@id',\n                },\n            },\n            getCaseTypes: {\n                isArray: true,\n                cache: CacheFactory.get('dataCache'),\n                url: '/api/cases/types/',\n            },\n            getStatuses: {\n                cache: CacheFactory.get('dataCache'),\n                url: '/api/cases/statuses/',\n                transformResponse: function(data) {\n                    var statusData = angular.fromJson(data);\n\n                    angular.forEach(statusData.results, function(status) {\n                        if (status.name === 'Closed') {\n                            _case.closedStatus = status;\n                        }\n                    });\n\n                    return statusData;\n                },\n            },\n            query: {\n                isArray: false,\n            },\n        }\n    );\n\n    _case.create = create;\n    _case.getCases = getCases;\n    _case.getCasePriorities = getCasePriorities;\n    _case.updateModel = updateModel;\n\n    /////////\n\n    function create() {\n        var expires = moment().add(1, 'week');  // default expiry date is a week from now\n\n        return new _case({\n            billing_checked: false,\n            priority: 0,\n            expires: expires,\n            tags: [],\n        });\n    }\n\n    function updateModel(data, field, caseObject) {\n        var patchPromise;\n        var args = HLResource.createArgs(data, field, caseObject);\n\n        if (field === 'name') {\n            Settings.page.setAllTitles('detail', data);\n        }\n\n        patchPromise = HLResource.patch('Case', args).$promise;\n\n        return patchPromise;\n    }\n\n    /**\n     * getCases() gets the cases from the search backend through a promise\n     *\n     * @param orderColumn {string}: Current sorting of cases.\n     * @param orderedAsc {boolean}: Current ordering.\n     * @param filterQuery {string}: Contains the filters which are used in Elasticsearch.\n     * @param searchQuery {string}: Current filter on the caselist.\n     * @param page {number=1}: Current page of pagination.\n     * @param pageSize {number=100}: Current page size of pagination.\n     *\n     * @returns Promise object: when promise is completed:\n     *      {\n     *          cases {Array}: Paginated cases objects.\n     *          total {number}: Total number of case objects.\n     *      }\n     */\n    function getCases(orderColumn, orderedAsc, filterQuery, searchQuery = '', page = 1, pageSize = 100) {\n        return _case.search({\n            q: searchQuery,\n            page: page - 1,\n            size: pageSize,\n            sort: HLUtils.getSorting(orderColumn, orderedAsc),\n            filterquery: filterQuery,\n        }, function(data) {\n            return data;\n        }).$promise;\n    }\n\n    function getCasePriorities() {\n        // Hardcoded because these are the only case priorities.\n        return [\n            {id: 0, name: 'Low', dateIncrement: 5},\n            {id: 1, name: 'Medium', dateIncrement: 3},\n            {id: 2, name: 'High', dateIncrement: 1},\n            {id: 3, name: 'Critical', dateIncrement: 0},\n        ];\n    }\n\n    return _case;\n}\n"],"sourceRoot":"/source/"}